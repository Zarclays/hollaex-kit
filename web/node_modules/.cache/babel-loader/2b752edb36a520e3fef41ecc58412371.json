{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Main/tradingVolume.js\";\nimport React from 'react';\nimport { Table, Select, Alert, Row, Col } from 'antd';\nimport { Sparklines, SparklinesLine, SparklinesBars } from 'react-sparklines';\nimport Moment from 'react-moment';\nimport BlockchainTransaction from '../Fees/index';\nimport { formatCurrency } from '../../../utils';\nvar Option = Select.Option;\n\nvar formatDate = function formatDate(value) {\n  return React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, value);\n};\n\nvar formatNum = function formatNum(value) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, formatCurrency(value));\n};\n\nvar VOLUME = [{\n  title: 'Date',\n  dataIndex: 'date',\n  key: 'date',\n  render: formatDate\n}, {\n  title: 'Volume',\n  dataIndex: 'volume',\n  key: 'volume',\n  render: formatNum\n}, {\n  title: 'High',\n  dataIndex: 'high',\n  key: 'high',\n  render: formatNum\n}, {\n  title: 'Low',\n  dataIndex: 'low',\n  key: 'low',\n  render: formatNum\n}, {\n  title: 'Open',\n  dataIndex: 'open',\n  key: 'open',\n  render: formatNum\n}, {\n  title: 'Close',\n  dataIndex: 'close',\n  key: 'close',\n  render: formatNum\n}];\n\nvar TradingVolume = function TradingVolume(_ref) {\n  var error = _ref.error,\n      data = _ref.data,\n      chartData = _ref.chartData,\n      newPair = _ref.newPair,\n      handleChange = _ref.handleChange;\n  var Options = newPair.map(function (currency, index) {\n    return React.createElement(Option, {\n      key: index,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, currency);\n  });\n  return React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, error !== '' ? React.createElement(Alert, {\n    message: \"Error\",\n    className: \"m-top\",\n    description: error,\n    type: \"error\",\n    showIcon: true,\n    style: {\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"chart-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Daily trading volume\")), React.createElement(Col, {\n    span: 12,\n    pull: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Select, {\n    defaultValue: \"btc-eur\",\n    style: {\n      width: 120\n    },\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, Options))), React.createElement(\"div\", {\n    className: \"row-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"sparks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Sparklines, {\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(SparklinesBars, {\n    style: {\n      stroke: 'white',\n      fill: '#41c3f9',\n      fillOpacity: '.25'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(SparklinesLine, {\n    style: {\n      stroke: '#41c3f9',\n      fill: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(Table, {\n    columns: VOLUME,\n    dataSource: data,\n    rowKey: function rowKey(data, index) {\n      var key = data.symbol + index;\n      return key;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"fees\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(BlockchainTransaction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))));\n};\n\nexport default TradingVolume;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Main/tradingVolume.js"],"names":["React","Table","Select","Alert","Row","Col","Sparklines","SparklinesLine","SparklinesBars","Moment","BlockchainTransaction","formatCurrency","Option","formatDate","value","formatNum","VOLUME","title","dataIndex","key","render","TradingVolume","error","data","chartData","newPair","handleChange","Options","map","currency","index","width","stroke","fill","fillOpacity","symbol"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Table, Select, Alert, Row, Col } from 'antd';\nimport { Sparklines, SparklinesLine, SparklinesBars } from 'react-sparklines';\nimport Moment from 'react-moment';\n\nimport BlockchainTransaction from '../Fees/index';\nimport { formatCurrency } from '../../../utils';\n\nconst Option = Select.Option;\n\nconst formatDate = (value) => {\n\treturn <Moment format=\"YYYY/MM/DD\">{value}</Moment>;\n};\n\nconst formatNum = (value) => {\n\treturn <div>{formatCurrency(value)}</div>;\n};\n\nconst VOLUME = [\n\t{ title: 'Date', dataIndex: 'date', key: 'date', render: formatDate },\n\t{ title: 'Volume', dataIndex: 'volume', key: 'volume', render: formatNum },\n\t{ title: 'High', dataIndex: 'high', key: 'high', render: formatNum },\n\t{ title: 'Low', dataIndex: 'low', key: 'low', render: formatNum },\n\t{ title: 'Open', dataIndex: 'open', key: 'open', render: formatNum },\n\t{ title: 'Close', dataIndex: 'close', key: 'close', render: formatNum }\n];\n\nconst TradingVolume = ({ error, data, chartData, newPair, handleChange }) => {\n\tconst Options = newPair.map((currency, index) => {\n\t\treturn (\n\t\t\t<Option key={index} value={currency}>\n\t\t\t\t{currency}\n\t\t\t</Option>\n\t\t);\n\t});\n\treturn (\n\t\t<div className=\"\">\n\t\t\t{error !== '' ? (\n\t\t\t\t<Alert\n\t\t\t\t\tmessage=\"Error\"\n\t\t\t\t\tclassName=\"m-top\"\n\t\t\t\t\tdescription={error}\n\t\t\t\t\ttype=\"error\"\n\t\t\t\t\tshowIcon\n\t\t\t\t\tstyle={{ width: '50%' }}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div className=\"main-container\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t<h1 className=\"chart-title\">Daily trading volume</h1>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={12} pull={1}>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tdefaultValue=\"btc-eur\"\n\t\t\t\t\t\t\t\tstyle={{ width: 120 }}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{Options}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<div className=\"row-1\">\n\t\t\t\t\t\t<div className=\"sparks\">\n\t\t\t\t\t\t\t<Sparklines data={chartData}>\n\t\t\t\t\t\t\t\t<SparklinesBars\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tstroke: 'white',\n\t\t\t\t\t\t\t\t\t\tfill: '#41c3f9',\n\t\t\t\t\t\t\t\t\t\tfillOpacity: '.25'\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SparklinesLine\n\t\t\t\t\t\t\t\t\tstyle={{ stroke: '#41c3f9', fill: 'none' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Sparklines>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tcolumns={VOLUME}\n\t\t\t\t\t\t\t\tdataSource={data}\n\t\t\t\t\t\t\t\trowKey={(data, index) => {\n\t\t\t\t\t\t\t\t\tconst key = data.symbol + index;\n\t\t\t\t\t\t\t\t\treturn key;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"fees\">\n\t\t\t\t\t\t\t<BlockchainTransaction />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TradingVolume;\n"]},"metadata":{},"sourceType":"module"}