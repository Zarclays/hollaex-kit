{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport validator from 'validator';\nimport WAValidator from 'wallet-address-validator'; // import BAValidator from 'bitcoin-address-validation';\n\nimport math from 'mathjs';\nimport bchaddr from 'bchaddrjs';\nimport { NETWORK } from '../../config/constants';\nimport { roundNumber } from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\nvar passwordRegEx = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\nvar usernameRegEx = /^[a-z0-9_]{3,15}$/;\nexport var required = function required(value) {\n  return !value ? STRINGS.VALIDATIONS.REQUIRED : undefined;\n};\nexport var requiredBoolean = function requiredBoolean(value) {\n  return value === undefined ? STRINGS.VALIDATIONS.REQUIRED : undefined;\n};\nexport var requiredWithCustomMessage = function requiredWithCustomMessage(message) {\n  return function (value) {\n    return !value ? message : undefined;\n  };\n};\nexport var maxLength = function maxLength(length, message) {\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return value.length > length ? message : undefined;\n  };\n};\nexport var exactLength = function exactLength(length, message) {\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return value.length !== length ? message : undefined;\n  };\n};\nexport var onlyNumbers = function onlyNumbers() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return validator.isNumeric(value) ? undefined : STRINGS.VALIDATIONS.ONLY_NUMBERS;\n};\nexport var email = function email() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return !validator.isEmail(value) ? STRINGS.VALIDATIONS.INVALID_EMAIL : undefined;\n};\nexport var password = function password() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return !passwordRegEx.test(value) ? STRINGS.VALIDATIONS.INVALID_PASSWORD_2 : undefined;\n};\nexport var username = function username() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return !usernameRegEx.test(value) ? STRINGS.INVALID_USERNAME : undefined;\n};\nexport var validAddress = function validAddress() {\n  var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var message = arguments.length > 1 ? arguments[1] : undefined;\n  var currency = symbol.toUpperCase();\n  return function (address) {\n    var valid = WAValidator.validate(address, currency, NETWORK); // in case of bitcoin cash new addresses and new bitcoin addresses\n\n    if (!valid) {\n      switch (currency) {\n        // case 'BTC':\n        // \taddress = BAValidator(address).address;\n        // \tif (address) {\n        // \t\tvalid = true;\n        // \t}\n        // \tbreak;\n        case 'BCH':\n          try {\n            bchaddr.toLegacyAddress(address);\n            valid = true;\n          } catch (err) {\n            valid = false;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return !valid ? message || STRINGS.formatString(STRINGS.VALIDATIONS.INVALID_CURRENCY, currency, address) : undefined;\n  };\n};\nexport var minValue = function minValue(_minValue, message) {\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return value < _minValue ? message || STRINGS.formatString(STRINGS.VALIDATIONS.MIN_VALUE, _minValue) : undefined;\n  };\n};\nexport var maxValue = function maxValue(_maxValue, message) {\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return value > _maxValue ? message || STRINGS.formatString(STRINGS.VALIDATIONS.MAX_VALUE, _maxValue) : undefined;\n  };\n};\nexport var step = function step(_step, message) {\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return math.larger(math.mod(math.bignumber(value), math.bignumber(_step)), 0) ? message || STRINGS.formatString(STRINGS.VALIDATIONS.STEP, _step) : undefined;\n  };\n};\nexport var checkBalance = function checkBalance(available, message) {\n  var fee = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var operation = fee > 0 ? math.number(math.add(math.fraction(value), math.multiply(math.fraction(value), math.fraction(fee)))) : value;\n\n    if (operation > available) {\n      var errorMessage = message || STRINGS.formatString(STRINGS.VALIDATIONS.INVALID_BALANCE, available, operation);\n      return errorMessage;\n    }\n\n    return undefined;\n  };\n};\nexport var evaluateOrder = function evaluateOrder() {\n  var pair_base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var pair_2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var balance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var order = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var orderType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var side = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n  var marketPrice = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var orderPrice = 0;\n  var available = 0;\n\n  if (side === 'sell') {\n    available = balance[\"\".concat(pair_base, \"_available\")];\n    orderPrice = order.size;\n  } else {\n    available = balance[\"\".concat(pair_2, \"_available\")];\n\n    if (orderType === 'market') {\n      orderPrice = marketPrice;\n    } else {\n      orderPrice = math.multiply(math.fraction(order.size || 0), math.fraction(order.price || 0));\n    }\n  }\n\n  if (available < orderPrice) {\n    return STRINGS.VALIDATIONS.INSUFFICIENT_BALANCE;\n  }\n\n  return '';\n};\nexport var checkMarketPrice = function checkMarketPrice(size) {\n  var orders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var type = arguments.length > 2 ? arguments[2] : undefined;\n  var side = arguments.length > 3 ? arguments[3] : undefined;\n  var orderPriceParam = arguments.length > 4 ? arguments[4] : undefined;\n  var accumulated = math.fraction(0);\n  var remaining = math.fraction(size);\n  var orderPrice = math.fraction(orderPriceParam);\n  orders.some(function (_ref, index) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        priceParam = _ref2[0],\n        amountParam = _ref2[1];\n\n    var price = math.fraction(priceParam);\n    var amount = math.fraction(amountParam);\n\n    if (type === 'limit') {\n      if (side === 'buy' && math.smaller(orderPrice, price)) {\n        return true;\n      } else if (side === 'sell' && math.larger(orderPrice, price)) {\n        return true;\n      }\n    }\n\n    var orderSizeTaken = math.largerEq(remaining, amount) ? amount : remaining;\n    var takenPrice = math.multiply(price, orderSizeTaken);\n    remaining = math.subtract(remaining, orderSizeTaken);\n    accumulated = math.add(accumulated, takenPrice);\n    return math.smallerEq(remaining, 0);\n  });\n\n  if (type === 'limit' && math.larger(remaining, 0)) {\n    accumulated = math.add(accumulated, math.multiply(remaining, orderPrice));\n  }\n\n  if (type === 'market' && math.larger(remaining, 0)) {\n    return -roundNumber(accumulated);\n  }\n\n  return roundNumber(accumulated);\n};\nexport var isBefore = function isBefore() {\n  var before = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : STRINGS.VALIDATIONS.INVALID_DATE;\n  var beforeDate = before ? new Date(before) : new Date();\n  var beforeValue = beforeDate.toString();\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var valueDate = new Date(value).toString();\n    var valid = validator.isBefore(valueDate, beforeValue);\n    return valid ? undefined : message;\n  };\n};\nexport var normalizeInt = function normalizeInt(value) {\n  if (validator.isNumeric(value)) {\n    return validator.toInt(value);\n  } else if (value === '0' || value === 0) {\n    return 0;\n  } else {\n    return '';\n  }\n};\nexport var normalizeFloat = function normalizeFloat(value) {\n  if (validator.isFloat(value)) {\n    return validator.toFloat(value);\n  } else if (value === '0' || value === 0) {\n    return 0;\n  } else {\n    return '';\n  }\n};\nexport var normalizeBTC = function normalizeBTC() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return value ? roundNumber(value, 8) : '';\n};\nexport var normalizeBTCFee = function normalizeBTCFee() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return value ? roundNumber(value, 4) : '';\n};\nexport var validateOtp = function validateOtp() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : STRINGS.OTP_FORM.ERROR_INVALID;\n  return function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var error = undefined;\n\n    if (value.length !== 6 || !validator.isNumeric(value)) {\n      error = message;\n    }\n\n    return error;\n  };\n};\nexport var normalizeEmail = function normalizeEmail() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return value.toLowerCase();\n};\nexport var tokenKeyValidation = required;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Form/validations.js"],"names":["validator","WAValidator","math","bchaddr","NETWORK","roundNumber","STRINGS","passwordRegEx","usernameRegEx","required","value","VALIDATIONS","REQUIRED","undefined","requiredBoolean","requiredWithCustomMessage","message","maxLength","length","exactLength","onlyNumbers","isNumeric","ONLY_NUMBERS","email","isEmail","INVALID_EMAIL","password","test","INVALID_PASSWORD_2","username","INVALID_USERNAME","validAddress","symbol","currency","toUpperCase","address","valid","validate","toLegacyAddress","err","formatString","INVALID_CURRENCY","minValue","MIN_VALUE","maxValue","MAX_VALUE","step","larger","mod","bignumber","STEP","checkBalance","available","fee","operation","number","add","fraction","multiply","errorMessage","INVALID_BALANCE","evaluateOrder","pair_base","pair_2","balance","order","orderType","side","marketPrice","orderPrice","size","price","INSUFFICIENT_BALANCE","checkMarketPrice","orders","type","orderPriceParam","accumulated","remaining","some","index","priceParam","amountParam","amount","smaller","orderSizeTaken","largerEq","takenPrice","subtract","smallerEq","isBefore","before","INVALID_DATE","beforeDate","Date","beforeValue","toString","valueDate","normalizeInt","toInt","normalizeFloat","isFloat","toFloat","normalizeBTC","normalizeBTCFee","validateOtp","OTP_FORM","ERROR_INVALID","error","normalizeEmail","toLowerCase","tokenKeyValidation"],"mappings":"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","sourcesContent":["import validator from 'validator';\nimport WAValidator from 'wallet-address-validator';\n// import BAValidator from 'bitcoin-address-validation';\nimport math from 'mathjs';\nimport bchaddr from 'bchaddrjs';\nimport { NETWORK } from '../../config/constants';\nimport { roundNumber } from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\n\nconst passwordRegEx = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\nconst usernameRegEx = /^[a-z0-9_]{3,15}$/;\n\nexport const required = (value) =>\n\t!value ? STRINGS.VALIDATIONS.REQUIRED : undefined;\nexport const requiredBoolean = (value) =>\n\tvalue === undefined ? STRINGS.VALIDATIONS.REQUIRED : undefined;\nexport const requiredWithCustomMessage = (message) => (value) =>\n\t!value ? message : undefined;\n\nexport const maxLength = (length, message) => (value = '') =>\n\tvalue.length > length ? message : undefined;\nexport const exactLength = (length, message) => (value = '') =>\n\tvalue.length !== length ? message : undefined;\nexport const onlyNumbers = (value = '') =>\n\tvalidator.isNumeric(value) ? undefined : STRINGS.VALIDATIONS.ONLY_NUMBERS;\nexport const email = (value = '') =>\n\t!validator.isEmail(value) ? STRINGS.VALIDATIONS.INVALID_EMAIL : undefined;\n\nexport const password = (value = '') =>\n\t!passwordRegEx.test(value)\n\t\t? STRINGS.VALIDATIONS.INVALID_PASSWORD_2\n\t\t: undefined;\n\nexport const username = (value = '') =>\n\t!usernameRegEx.test(value) ? STRINGS.INVALID_USERNAME : undefined;\n\nexport const validAddress = (symbol = '', message) => {\n\tconst currency = symbol.toUpperCase();\n\treturn (address) => {\n\t\tlet valid = WAValidator.validate(address, currency, NETWORK);\n\t\t// in case of bitcoin cash new addresses and new bitcoin addresses\n\t\tif (!valid) {\n\t\t\tswitch (currency) {\n\t\t\t\t// case 'BTC':\n\t\t\t\t// \taddress = BAValidator(address).address;\n\t\t\t\t// \tif (address) {\n\t\t\t\t// \t\tvalid = true;\n\t\t\t\t// \t}\n\t\t\t\t// \tbreak;\n\t\t\t\tcase 'BCH':\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbchaddr.toLegacyAddress(address);\n\t\t\t\t\t\tvalid = true;\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn !valid\n\t\t\t? message ||\n\t\t\t\t\tSTRINGS.formatString(\n\t\t\t\t\t\tSTRINGS.VALIDATIONS.INVALID_CURRENCY,\n\t\t\t\t\t\tcurrency,\n\t\t\t\t\t\taddress\n\t\t\t\t\t)\n\t\t\t: undefined;\n\t};\n};\n\nexport const minValue = (minValue, message) => (value = 0) =>\n\tvalue < minValue\n\t\t? message || STRINGS.formatString(STRINGS.VALIDATIONS.MIN_VALUE, minValue)\n\t\t: undefined;\nexport const maxValue = (maxValue, message) => (value = 0) =>\n\tvalue > maxValue\n\t\t? message || STRINGS.formatString(STRINGS.VALIDATIONS.MAX_VALUE, maxValue)\n\t\t: undefined;\nexport const step = (step, message) => (value = 0) =>\n\tmath.larger(math.mod(math.bignumber(value), math.bignumber(step)), 0)\n\t\t? message || STRINGS.formatString(STRINGS.VALIDATIONS.STEP, step)\n\t\t: undefined;\nexport const checkBalance = (available, message, fee = 0) => (value = 0) => {\n\tconst operation =\n\t\tfee > 0\n\t\t\t? math.number(\n\t\t\t\t\tmath.add(\n\t\t\t\t\t\tmath.fraction(value),\n\t\t\t\t\t\tmath.multiply(math.fraction(value), math.fraction(fee))\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: value;\n\n\tif (operation > available) {\n\t\tconst errorMessage =\n\t\t\tmessage ||\n\t\t\tSTRINGS.formatString(\n\t\t\t\tSTRINGS.VALIDATIONS.INVALID_BALANCE,\n\t\t\t\tavailable,\n\t\t\t\toperation\n\t\t\t);\n\t\treturn errorMessage;\n\t}\n\treturn undefined;\n};\n\nexport const evaluateOrder = (\n\tpair_base = '',\n\tpair_2 = '',\n\tbalance = {},\n\torder = {},\n\torderType = '',\n\tside = '',\n\tmarketPrice = 0\n) => {\n\tlet orderPrice = 0;\n\tlet available = 0;\n\n\tif (side === 'sell') {\n\t\tavailable = balance[`${pair_base}_available`];\n\t\torderPrice = order.size;\n\t} else {\n\t\tavailable = balance[`${pair_2}_available`];\n\n\t\tif (orderType === 'market') {\n\t\t\torderPrice = marketPrice;\n\t\t} else {\n\t\t\torderPrice = math.multiply(\n\t\t\t\tmath.fraction(order.size || 0),\n\t\t\t\tmath.fraction(order.price || 0)\n\t\t\t);\n\t\t}\n\t}\n\n\tif (available < orderPrice) {\n\t\treturn STRINGS.VALIDATIONS.INSUFFICIENT_BALANCE;\n\t}\n\treturn '';\n};\n\nexport const checkMarketPrice = (\n\tsize,\n\torders = [],\n\ttype,\n\tside,\n\torderPriceParam\n) => {\n\tlet accumulated = math.fraction(0);\n\tlet remaining = math.fraction(size);\n\tconst orderPrice = math.fraction(orderPriceParam);\n\n\torders.some(([priceParam, amountParam], index) => {\n\t\tconst price = math.fraction(priceParam);\n\t\tconst amount = math.fraction(amountParam);\n\n\t\tif (type === 'limit') {\n\t\t\tif (side === 'buy' && math.smaller(orderPrice, price)) {\n\t\t\t\treturn true;\n\t\t\t} else if (side === 'sell' && math.larger(orderPrice, price)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst orderSizeTaken = math.largerEq(remaining, amount)\n\t\t\t? amount\n\t\t\t: remaining;\n\t\tconst takenPrice = math.multiply(price, orderSizeTaken);\n\n\t\tremaining = math.subtract(remaining, orderSizeTaken);\n\t\taccumulated = math.add(accumulated, takenPrice);\n\n\t\treturn math.smallerEq(remaining, 0);\n\t});\n\n\tif (type === 'limit' && math.larger(remaining, 0)) {\n\t\taccumulated = math.add(accumulated, math.multiply(remaining, orderPrice));\n\t}\n\tif (type === 'market' && math.larger(remaining, 0)) {\n\t\treturn -roundNumber(accumulated);\n\t}\n\treturn roundNumber(accumulated);\n};\n\nexport const isBefore = (\n\tbefore = '',\n\tmessage = STRINGS.VALIDATIONS.INVALID_DATE\n) => {\n\tconst beforeDate = before ? new Date(before) : new Date();\n\tconst beforeValue = beforeDate.toString();\n\treturn (value = '') => {\n\t\tconst valueDate = new Date(value).toString();\n\t\tconst valid = validator.isBefore(valueDate, beforeValue);\n\t\treturn valid ? undefined : message;\n\t};\n};\n\nexport const normalizeInt = (value) => {\n\tif (validator.isNumeric(value)) {\n\t\treturn validator.toInt(value);\n\t} else if (value === '0' || value === 0) {\n\t\treturn 0;\n\t} else {\n\t\treturn '';\n\t}\n};\nexport const normalizeFloat = (value) => {\n\tif (validator.isFloat(value)) {\n\t\treturn validator.toFloat(value);\n\t} else if (value === '0' || value === 0) {\n\t\treturn 0;\n\t} else {\n\t\treturn '';\n\t}\n};\nexport const normalizeBTC = (value = 0) => (value ? roundNumber(value, 8) : '');\nexport const normalizeBTCFee = (value = 0) =>\n\tvalue ? roundNumber(value, 4) : '';\n\nexport const validateOtp = (message = STRINGS.OTP_FORM.ERROR_INVALID) => (\n\tvalue = ''\n) => {\n\tlet error = undefined;\n\tif (value.length !== 6 || !validator.isNumeric(value)) {\n\t\terror = message;\n\t}\n\treturn error;\n};\n\nexport const normalizeEmail = (value = '') => value.toLowerCase();\n\nexport const tokenKeyValidation = required;\n"]},"metadata":{},"sourceType":"module"}