{"ast":null,"code":"import axios from 'axios';\nimport { ICONS } from '../config/constants';\nimport STRINGS from '../config/localizedStrings';\nimport { playBackgroundAudioNotification } from '../utils/utils'; // Set orders from websocket\n\nexport function setUserOrders(orders) {\n  return {\n    type: 'SET_USER_ORDERS',\n    payload: orders\n  };\n}\nexport function addOrder(order) {\n  return {\n    type: 'ADD_ORDER',\n    payload: {\n      order: order\n    }\n  };\n}\nexport function updateOrder(order) {\n  return {\n    type: 'UPDATE_ORDER',\n    payload: {\n      order: order\n    }\n  };\n}\nexport function removeOrder(ids) {\n  return {\n    type: 'REMOVE_ORDER',\n    payload: {\n      ids: ids.map(function (item) {\n        return item.id;\n      })\n    }\n  };\n}\nexport var submitOrder = function submitOrder(order) {\n  return axios.post('/order', order);\n};\nexport var cancelOrder = function cancelOrder(orderId) {\n  return function (dispatch) {\n    axios.delete(\"/user/orders/\".concat(orderId)).then(function (data) {\n      dispatch({\n        type: 'CANCEL_ORDER',\n        payload: data\n      });\n      playBackgroundAudioNotification('cancel_order');\n      dispatch({\n        type: 'SET_SNACK_NOTIFICATION',\n        payload: {\n          icon: ICONS.CLOSE_CROSS,\n          content: STRINGS.CANCEL_SUCCESS_TEXT\n        }\n      });\n    }).catch(function (err) {});\n  };\n};\nexport var cancelAllOrders = function cancelAllOrders() {\n  var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return function (dispatch) {\n    axios.delete(\"/user/orders?symbol=\".concat(symbol)).then(function (data) {\n      dispatch({\n        type: 'CANCEL_ALL_ORDERS',\n        payload: data\n      });\n      playBackgroundAudioNotification('cancel_order');\n      dispatch({\n        type: 'SET_SNACK_NOTIFICATION',\n        payload: {\n          icon: ICONS.CLOSE_CROSS,\n          content: STRINGS.CANCEL_SUCCESS_TEXT\n        }\n      });\n    }).catch(function (err) {});\n  };\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/actions/orderAction.js"],"names":["axios","ICONS","STRINGS","playBackgroundAudioNotification","setUserOrders","orders","type","payload","addOrder","order","updateOrder","removeOrder","ids","map","item","id","submitOrder","post","cancelOrder","orderId","dispatch","delete","then","data","icon","CLOSE_CROSS","content","CANCEL_SUCCESS_TEXT","catch","err","cancelAllOrders","symbol"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAASC,+BAAT,QAAgD,gBAAhD,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AACrC,SAAO;AACNC,IAAAA,IAAI,EAAE,iBADA;AAENC,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA;AAED,OAAO,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAC/B,SAAO;AACNH,IAAAA,IAAI,EAAE,WADA;AAENC,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF;AAFH,GAAP;AAIA;AAED,OAAO,SAASC,WAAT,CAAqBD,KAArB,EAA4B;AAClC,SAAO;AACNH,IAAAA,IAAI,EAAE,cADA;AAENC,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA;AAAF;AAFH,GAAP;AAIA;AAED,OAAO,SAASE,WAAT,CAAqBC,GAArB,EAA0B;AAChC,SAAO;AACNN,IAAAA,IAAI,EAAE,cADA;AAENC,IAAAA,OAAO,EAAE;AAAEK,MAAAA,GAAG,EAAEA,GAAG,CAACC,GAAJ,CAAQ,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAf;AAAA,OAAR;AAAP;AAFH,GAAP;AAIA;AAED,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACP,KAAD;AAAA,SAAWT,KAAK,CAACiB,IAAN,CAAW,QAAX,EAAqBR,KAArB,CAAX;AAAA,CAApB;AACP,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD,EAAc;AACrDpB,IAAAA,KAAK,CAACqB,MAAN,wBAA6BF,OAA7B,GACEG,IADF,CACO,UAACC,IAAD,EAAU;AACfH,MAAAA,QAAQ,CAAC;AACRd,QAAAA,IAAI,EAAE,cADE;AAERC,QAAAA,OAAO,EAAEgB;AAFD,OAAD,CAAR;AAIApB,MAAAA,+BAA+B,CAAC,cAAD,CAA/B;AACAiB,MAAAA,QAAQ,CAAC;AACRd,QAAAA,IAAI,EAAE,wBADE;AAERC,QAAAA,OAAO,EAAE;AACRiB,UAAAA,IAAI,EAAEvB,KAAK,CAACwB,WADJ;AAERC,UAAAA,OAAO,EAAExB,OAAO,CAACyB;AAFT;AAFD,OAAD,CAAR;AAOA,KAdF,EAeEC,KAfF,CAeQ,UAACC,GAAD,EAAS,CACf,CAhBF;AAiBA,GAlB0B;AAAA,CAApB;AAoBP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAACC,MAAD,uEAAU,EAAV;AAAA,SAAiB,UAAAX,QAAQ,EAAI;AAC3DpB,IAAAA,KAAK,CAACqB,MAAN,+BAAoCU,MAApC,GACET,IADF,CACO,UAACC,IAAD,EAAU;AACfH,MAAAA,QAAQ,CAAC;AACRd,QAAAA,IAAI,EAAE,mBADE;AAERC,QAAAA,OAAO,EAAEgB;AAFD,OAAD,CAAR;AAIApB,MAAAA,+BAA+B,CAAC,cAAD,CAA/B;AACAiB,MAAAA,QAAQ,CAAC;AACRd,QAAAA,IAAI,EAAE,wBADE;AAERC,QAAAA,OAAO,EAAE;AACRiB,UAAAA,IAAI,EAAEvB,KAAK,CAACwB,WADJ;AAERC,UAAAA,OAAO,EAAExB,OAAO,CAACyB;AAFT;AAFD,OAAD,CAAR;AAOA,KAdF,EAeEC,KAfF,CAeQ,UAACC,GAAD,EAAS,CAAE,CAfnB;AAgBA,GAjB8B;AAAA,CAAxB","sourcesContent":["import axios from 'axios';\nimport { ICONS } from '../config/constants';\nimport STRINGS from '../config/localizedStrings';\nimport { playBackgroundAudioNotification } from '../utils/utils';\n\n// Set orders from websocket\nexport function setUserOrders(orders) {\n\treturn {\n\t\ttype: 'SET_USER_ORDERS',\n\t\tpayload: orders\n\t};\n}\n\nexport function addOrder(order) {\n\treturn {\n\t\ttype: 'ADD_ORDER',\n\t\tpayload: { order }\n\t};\n}\n\nexport function updateOrder(order) {\n\treturn {\n\t\ttype: 'UPDATE_ORDER',\n\t\tpayload: { order }\n\t};\n}\n\nexport function removeOrder(ids) {\n\treturn {\n\t\ttype: 'REMOVE_ORDER',\n\t\tpayload: { ids: ids.map((item) => item.id) }\n\t};\n}\n\nexport const submitOrder = (order) => axios.post('/order', order);\nexport const cancelOrder = (orderId) => (dispatch) => {\n\taxios.delete(`/user/orders/${orderId}`)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'CANCEL_ORDER',\n\t\t\t\tpayload: data\n\t\t\t});\n\t\t\tplayBackgroundAudioNotification('cancel_order');\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_SNACK_NOTIFICATION',\n\t\t\t\tpayload: {\n\t\t\t\t\ticon: ICONS.CLOSE_CROSS,\n\t\t\t\t\tcontent: STRINGS.CANCEL_SUCCESS_TEXT\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t})\n};\n\nexport const cancelAllOrders = (symbol = '') => dispatch => {\n\taxios.delete(`/user/orders?symbol=${symbol}`)\n\t\t.then((data) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'CANCEL_ALL_ORDERS',\n\t\t\t\tpayload: data\n\t\t\t});\n\t\t\tplayBackgroundAudioNotification('cancel_order');\n\t\t\tdispatch({\n\t\t\t\ttype: 'SET_SNACK_NOTIFICATION',\n\t\t\t\tpayload: {\n\t\t\t\t\ticon: ICONS.CLOSE_CROSS,\n\t\t\t\t\tcontent: STRINGS.CANCEL_SUCCESS_TEXT\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {})\n};\n"]},"metadata":{},"sourceType":"module"}