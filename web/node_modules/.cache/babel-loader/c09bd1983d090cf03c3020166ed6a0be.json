{"ast":null,"code":"import _objectWithoutProperties from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Chart/FactoryChart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CandleChart from './Charts/CandleChart';\nimport AreaChart from './Charts/AreaChart';\nexport var CHART_TYPES = {\n  AREA: 'CHART_TYPE_AREA',\n  CANDLE: 'CHART_TYPE_CANDLE'\n};\nexport var FactoryChart = function FactoryChart(_ref) {\n  var chartType = _ref.chartType,\n      symbol = _ref.symbol,\n      orderLimits = _ref.orderLimits,\n      props = _objectWithoutProperties(_ref, [\"chartType\", \"symbol\", \"orderLimits\"]);\n\n  switch (chartType) {\n    case CHART_TYPES.AREA:\n      return React.createElement(AreaChart, Object.assign({\n        dataCount: 100\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n\n    case CHART_TYPES.CANDLE:\n    default:\n      var modifier = 1 * orderLimits[symbol].PRICE.STEP;\n      return React.createElement(CandleChart, Object.assign({\n        modifier: modifier\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n  }\n};\nFactoryChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  ratio: PropTypes.number.isRequired,\n  type: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n  chartType: PropTypes.string.isRequired\n};\nFactoryChart.defaultProps = {\n  type: 'svg',\n  seriesName: 'AreaChart'\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Chart/FactoryChart.js"],"names":["React","PropTypes","CandleChart","AreaChart","CHART_TYPES","AREA","CANDLE","FactoryChart","chartType","symbol","orderLimits","props","modifier","PRICE","STEP","propTypes","data","array","isRequired","width","number","height","ratio","type","oneOf","string","defaultProps","seriesName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,IAAMC,WAAW,GAAG;AAC1BC,EAAAA,IAAI,EAAE,iBADoB;AAE1BC,EAAAA,MAAM,EAAE;AAFkB,CAApB;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkD;AAAA,MAA/CC,SAA+C,QAA/CA,SAA+C;AAAA,MAApCC,MAAoC,QAApCA,MAAoC;AAAA,MAA5BC,WAA4B,QAA5BA,WAA4B;AAAA,MAAZC,KAAY;;AAC7E,UAAQH,SAAR;AACC,SAAKJ,WAAW,CAACC,IAAjB;AACC,aAAO,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAE;AAAtB,SAA+BM,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;;AACD,SAAKP,WAAW,CAACE,MAAjB;AACA;AACC,UAAMM,QAAQ,GAAG,IAAIF,WAAW,CAACD,MAAD,CAAX,CAAoBI,KAApB,CAA0BC,IAA/C;AACA,aAAO,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAEF;AAAvB,SAAqCD,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AANF;AAQA,CATM;AAWPJ,YAAY,CAACQ,SAAb,GAAyB;AACxBC,EAAAA,IAAI,EAAEf,SAAS,CAACgB,KAAV,CAAgBC,UADE;AAExBC,EAAAA,KAAK,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFA;AAGxBG,EAAAA,MAAM,EAAEpB,SAAS,CAACmB,MAAV,CAAiBF,UAHD;AAIxBI,EAAAA,KAAK,EAAErB,SAAS,CAACmB,MAAV,CAAiBF,UAJA;AAKxBK,EAAAA,IAAI,EAAEtB,SAAS,CAACuB,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB,EAAmCN,UALjB;AAMxBV,EAAAA,SAAS,EAAEP,SAAS,CAACwB,MAAV,CAAiBP;AANJ,CAAzB;AASAX,YAAY,CAACmB,YAAb,GAA4B;AAC3BH,EAAAA,IAAI,EAAE,KADqB;AAE3BI,EAAAA,UAAU,EAAE;AAFe,CAA5B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CandleChart from './Charts/CandleChart';\nimport AreaChart from './Charts/AreaChart';\n\nexport const CHART_TYPES = {\n\tAREA: 'CHART_TYPE_AREA',\n\tCANDLE: 'CHART_TYPE_CANDLE'\n};\n\nexport const FactoryChart = ({ chartType, symbol, orderLimits, ...props }) => {\n\tswitch (chartType) {\n\t\tcase CHART_TYPES.AREA:\n\t\t\treturn <AreaChart dataCount={100} {...props} />;\n\t\tcase CHART_TYPES.CANDLE:\n\t\tdefault:\n\t\t\tconst modifier = 1 * orderLimits[symbol].PRICE.STEP;\n\t\t\treturn <CandleChart modifier={modifier} {...props} />;\n\t}\n};\n\nFactoryChart.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf(['svg', 'hybrid']).isRequired,\n\tchartType: PropTypes.string.isRequired\n};\n\nFactoryChart.defaultProps = {\n\ttype: 'svg',\n\tseriesName: 'AreaChart'\n};\n"]},"metadata":{},"sourceType":"module"}