{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Trades/userListTrades.js\";\nimport React, { Component } from 'react';\nimport { Table, Icon, Spin, Button, Card } from 'antd';\nimport { Link } from 'react-router';\nimport { requestFullUsers } from '../ListUsers/actions';\nimport { requestTrades } from './actions';\n\nvar renderLink = function renderLink(value) {\n  return React.createElement(Button, {\n    type: \"primary\",\n    onClick: function onClick(e) {\n      return refreshPage(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"user?id=\".concat(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"GO\", React.createElement(Icon, {\n    type: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nvar COLUMNS = [{\n  title: 'ID',\n  dataIndex: 'id',\n  key: 'id'\n}, {\n  title: 'User name',\n  dataIndex: 'username',\n  key: 'username'\n}, {\n  title: 'name',\n  dataIndex: 'full_name',\n  key: 'full_name'\n}, {\n  title: 'Email',\n  dataIndex: 'email',\n  key: 'email'\n}, {\n  title: 'See Data',\n  dataIndex: 'id',\n  key: 'data',\n  render: renderLink\n}]; // const TRADE_COLUMNS = [\n// \t{ title: 'Type', dataIndex: 'side', key: 'side' },\n// \t{ title: 'Symbol', dataIndex: 'symbol', key: 'symbol' }\n// \t// { title: 'ID', dataIndex: 'id', key: 'id' },\n// ];\n\nvar refreshPage = function refreshPage(e) {\n  e.preventDefault();\n  window.location.reload();\n};\n\nvar UserListTrades =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserListTrades, _Component);\n\n  function UserListTrades() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserListTrades);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserListTrades)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: [],\n      fetched: false,\n      loading: false,\n      error: '',\n      tradeData: []\n    };\n\n    _this.requestFullUsers = function () {\n      _this.setState({\n        loading: true,\n        error: ''\n      });\n\n      requestFullUsers().then(function (data) {\n        _this.setState({\n          users: data.data,\n          loading: false,\n          fetched: true\n        });\n      });\n    };\n\n    _this.renderRowContent = function (_ref) {\n      var id = _ref.id;\n      requestTrades(id).then(function (res) {\n        _this.setState({\n          tradeData: res.data\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, _this.state.tradeData.map(function (each) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, Object.entries(each).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              key = _ref3[0],\n              val = _ref3[1];\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, key, \" : \", val);\n        }));\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(UserListTrades, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.requestFullUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        className: \"app_container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, loading ? React.createElement(Spin, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"-\", error, \"-\"), React.createElement(Table, {\n        columns: COLUMNS,\n        dataSource: users,\n        expandedRowRender: this.renderRowContent,\n        expandRowByClick: true,\n        rowKey: function rowKey(data) {\n          return data.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UserListTrades;\n}(Component);\n\nexport default UserListTrades;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Trades/userListTrades.js"],"names":["React","Component","Table","Icon","Spin","Button","Card","Link","requestFullUsers","requestTrades","renderLink","value","e","refreshPage","COLUMNS","title","dataIndex","key","render","preventDefault","window","location","reload","UserListTrades","state","users","fetched","loading","error","tradeData","setState","then","data","renderRowContent","id","res","map","each","Object","entries","val"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Icon, Spin, Button, Card } from 'antd';\nimport { Link } from 'react-router';\n\nimport { requestFullUsers } from '../ListUsers/actions';\nimport { requestTrades } from './actions';\n\nconst renderLink = (value) => (\n\t<Button type=\"primary\" onClick={(e) => refreshPage(e)}>\n\t\t<Link to={`user?id=${value}`}>\n\t\t\tGO\n\t\t\t<Icon type=\"right\" />\n\t\t</Link>\n\t</Button>\n);\n\nconst COLUMNS = [\n\t{ title: 'ID', dataIndex: 'id', key: 'id' },\n\t{ title: 'User name', dataIndex: 'username', key: 'username' },\n\t{ title: 'name', dataIndex: 'full_name', key: 'full_name' },\n\t{ title: 'Email', dataIndex: 'email', key: 'email' },\n\t{ title: 'See Data', dataIndex: 'id', key: 'data', render: renderLink }\n];\n\n// const TRADE_COLUMNS = [\n// \t{ title: 'Type', dataIndex: 'side', key: 'side' },\n// \t{ title: 'Symbol', dataIndex: 'symbol', key: 'symbol' }\n// \t// { title: 'ID', dataIndex: 'id', key: 'id' },\n// ];\n\nconst refreshPage = (e) => {\n\te.preventDefault();\n\twindow.location.reload();\n};\n\nclass UserListTrades extends Component {\n\tstate = {\n\t\tusers: [],\n\t\tfetched: false,\n\t\tloading: false,\n\t\terror: '',\n\t\ttradeData: []\n\t};\n\n\tcomponentWillMount() {\n\t\tthis.requestFullUsers();\n\t}\n\n\trequestFullUsers = () => {\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\terror: ''\n\t\t});\n\n\t\trequestFullUsers().then((data) => {\n\t\t\tthis.setState({\n\t\t\t\tusers: data.data,\n\t\t\t\tloading: false,\n\t\t\t\tfetched: true\n\t\t\t});\n\t\t});\n\t};\n\n\trenderRowContent = ({ id }) => {\n\t\trequestTrades(id).then((res) => {\n\t\t\tthis.setState({ tradeData: res.data });\n\t\t});\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.tradeData.map((each) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t{Object.entries(each).map(([key, val]) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t{key} : {val}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tconst { users, loading, error } = this.state;\n\t\treturn (\n\t\t\t<div className=\"app_container-content\">\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{error && <p>-{error}-</p>}\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcolumns={COLUMNS}\n\t\t\t\t\t\t\tdataSource={users}\n\t\t\t\t\t\t\texpandedRowRender={this.renderRowContent}\n\t\t\t\t\t\t\texpandRowByClick={true}\n\t\t\t\t\t\t\trowKey={(data) => {\n\t\t\t\t\t\t\t\treturn data.id;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserListTrades;\n"]},"metadata":{},"sourceType":"module"}