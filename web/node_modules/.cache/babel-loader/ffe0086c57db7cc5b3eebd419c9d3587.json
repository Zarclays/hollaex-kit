{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Summary/components/LimitsBlock.js\";\nimport React from 'react';\nimport { CurrencyBall } from '../../../components';\nimport { BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../../config/constants';\nimport STRINGS from '../../../config/localizedStrings';\nimport { formatBaseAmount, formatBtcAmount } from '../../../utils/currency';\n\nvar getLimitValue = function getLimitValue() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var format = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (limit === 0) {\n    return STRINGS.LEVELS.UNLIMITED;\n  } else if (limit === -1) {\n    return STRINGS.LEVELS.BLOCKED;\n  } else {\n    return format ? format(limit) : limit;\n  }\n};\n\nvar getDepositRow = function getDepositRow(currency, index, coins, level) {\n  var _ref = coins[currency] || DEFAULT_COIN_DATA,\n      _ref$symbol = _ref.symbol,\n      symbol = _ref$symbol === void 0 ? '' : _ref$symbol,\n      fullname = _ref.fullname,\n      _ref$deposit_limits = _ref.deposit_limits,\n      deposit_limits = _ref$deposit_limits === void 0 ? {} : _ref$deposit_limits;\n\n  var format = currency === BASE_CURRENCY ? formatBaseAmount : formatBtcAmount;\n  return React.createElement(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"account-limits-coin\",\n    rowSpan: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(CurrencyBall, {\n    name: symbol.toUpperCase(),\n    symbol: symbol,\n    size: \"m\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, fullname))), React.createElement(\"td\", {\n    className: \"account-limits-maker account-limits-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, STRINGS.SUMMARY.DEPOSIT, \":\"), React.createElement(\"td\", {\n    className: \"account-limits-maker account-limits-value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, getLimitValue(deposit_limits[level], format)));\n};\n\nvar getWithdrawalRow = function getWithdrawalRow(currency, index, coins, level) {\n  var _ref2 = coins[currency] || DEFAULT_COIN_DATA,\n      _ref2$withdrawal_limi = _ref2.withdrawal_limits,\n      withdrawal_limits = _ref2$withdrawal_limi === void 0 ? {} : _ref2$withdrawal_limi;\n\n  var format = currency === BASE_CURRENCY ? formatBaseAmount : formatBtcAmount;\n  return React.createElement(\"tr\", {\n    key: \"\".concat(index, \"_1\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"account-limits-taker account-limits-status\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, STRINGS.SUMMARY.WITHDRAWAL, \":\"), React.createElement(\"td\", {\n    className: \"account-limits-taker account-limits-value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, getLimitValue(withdrawal_limits[level], format)));\n};\n\nvar getRows = function getRows(coins, level) {\n  var rowData = [];\n  Object.keys(coins).map(function (currency, index) {\n    rowData.push(getDepositRow(currency, index, coins, level));\n    rowData.push(getWithdrawalRow(currency, index, coins, level));\n    return '';\n  });\n  return rowData;\n};\n\nvar LimitsBlock = function LimitsBlock(_ref3) {\n  var level = _ref3.level,\n      coins = _ref3.coins;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"account-limits\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"limit-head-currency\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, STRINGS.CURRENCY), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    className: \"limit-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, STRINGS.LIMIT))), React.createElement(\"tbody\", {\n    className: \"account-limits-content font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, getRows(coins, level))));\n};\n\nexport default LimitsBlock;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Summary/components/LimitsBlock.js"],"names":["React","CurrencyBall","BASE_CURRENCY","DEFAULT_COIN_DATA","STRINGS","formatBaseAmount","formatBtcAmount","getLimitValue","limit","format","LEVELS","UNLIMITED","BLOCKED","getDepositRow","currency","index","coins","level","symbol","fullname","deposit_limits","toUpperCase","SUMMARY","DEPOSIT","getWithdrawalRow","withdrawal_limits","WITHDRAWAL","getRows","rowData","Object","keys","map","push","LimitsBlock","CURRENCY","LIMIT"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { CurrencyBall } from '../../../components';\nimport { BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../../config/constants';\nimport STRINGS from '../../../config/localizedStrings';\nimport {\n    formatBaseAmount,\n    formatBtcAmount\n} from '../../../utils/currency';\n\nconst getLimitValue = (limit = -1, format) => {\n    if (limit === 0) {\n        return STRINGS.LEVELS.UNLIMITED;\n    } else if (limit === -1) {\n        return STRINGS.LEVELS.BLOCKED;\n    } else {\n        return format ? format(limit) : limit;\n    }\n};\n\nconst getDepositRow = (currency, index, coins, level) => {\n    const { symbol = '', fullname, deposit_limits = {} } = coins[currency] || DEFAULT_COIN_DATA;\n    const format = currency === BASE_CURRENCY ? formatBaseAmount : formatBtcAmount;\n    return (\n        <tr key={index}>\n            <td className=\"account-limits-coin\" rowSpan={2}>\n                <div className='d-flex align-items-center'>\n                    <CurrencyBall name={symbol.toUpperCase()} symbol={symbol} size='m' />\n                    <div className=\"ml-2\">{fullname}</div>\n                </div>\n            </td>\n            <td className=\"account-limits-maker account-limits-status\">{STRINGS.SUMMARY.DEPOSIT}:</td>\n            <td className=\"account-limits-maker account-limits-value\">{getLimitValue(deposit_limits[level], format)}</td>\n        </tr>\n    );\n};\n\nconst getWithdrawalRow = (currency, index, coins, level) => {\n    const { withdrawal_limits = {} } = coins[currency] || DEFAULT_COIN_DATA;\n    const format = currency === BASE_CURRENCY ? formatBaseAmount : formatBtcAmount;\n    return (\n        <tr key={`${index}_1`}>\n            <td className=\"account-limits-taker account-limits-status\">{STRINGS.SUMMARY.WITHDRAWAL}:</td>\n            <td className=\"account-limits-taker account-limits-value\">{getLimitValue(withdrawal_limits[level], format)}</td>\n        </tr>\n    );\n};\n\nconst getRows = (coins, level) => {\n    const rowData = [];\n    Object.keys(coins).map((currency, index) => {\n        rowData.push(getDepositRow(currency, index, coins, level));\n        rowData.push(getWithdrawalRow(currency, index, coins, level));\n        return '';\n    });\n    return rowData;\n};\n\nconst LimitsBlock = ({ level, coins }) => {\n    return (\n        <div>\n            <table className=\"account-limits\">\n                <thead>\n                    <tr>\n                        <th className=\"limit-head-currency\">{STRINGS.CURRENCY}</th>\n                        <th></th>\n                        <th className=\"limit-head\">{STRINGS.LIMIT}</th>\n                    </tr>\n                </thead>\n                <tbody className=\"account-limits-content font-weight-bold\">\n                    {getRows(coins, level)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default LimitsBlock;"]},"metadata":{},"sourceType":"module"}