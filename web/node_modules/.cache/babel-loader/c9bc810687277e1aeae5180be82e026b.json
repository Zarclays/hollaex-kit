{"ast":null,"code":"import { required, minValue, maxValue, checkBalance, validAddress, normalizeBTC, normalizeBTCFee } from \"../../components/Form/validations\";\nimport { isMobile } from \"react-device-detect\";\nimport STRINGS from \"../../config/localizedStrings\";\nimport { ICONS, BASE_CURRENCY, DEFAULT_COIN_DATA } from \"../../config/constants\";\nexport var generateInitialValues = function generateInitialValues(symbol) {\n  var coins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _ref = coins[symbol] || DEFAULT_COIN_DATA,\n      min = _ref.min,\n      withdrawal_fee = _ref.withdrawal_fee;\n\n  var initialValues = {};\n\n  if (coins[symbol]) {\n    initialValues.fee = withdrawal_fee;\n  } else {\n    initialValues.fee = 0;\n  }\n\n  if (min) {\n    initialValues.amount = min;\n  }\n\n  return initialValues;\n};\nexport var generateFormValues = function generateFormValues(symbol) {\n  var available = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var calculateMax = arguments.length > 2 ? arguments[2] : undefined;\n  var coins = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var verification_level = arguments.length > 4 ? arguments[4] : undefined;\n\n  var _ref2 = coins[symbol] || DEFAULT_COIN_DATA,\n      fullname = _ref2.fullname,\n      min = _ref2.min,\n      increment_unit = _ref2.increment_unit,\n      _ref2$withdrawal_limi = _ref2.withdrawal_limits,\n      withdrawal_limits = _ref2$withdrawal_limi === void 0 ? {} : _ref2$withdrawal_limi;\n\n  var MAX = withdrawal_limits[verification_level];\n  if (withdrawal_limits[verification_level] === 0) MAX = \"\";\n  if (withdrawal_limits[verification_level] === -1) MAX = 0;\n  var fields = {};\n\n  if (symbol !== BASE_CURRENCY) {\n    fields.address = {\n      type: \"text\",\n      label: STRINGS.WITHDRAWALS_FORM_ADDRESS_LABEL,\n      placeholder: STRINGS.WITHDRAWALS_FORM_ADDRESS_PLACEHOLDER,\n      validate: [required, validAddress(symbol, STRINGS[\"WITHDRAWALS_\".concat(symbol.toUpperCase(), \"_INVALID_ADDRESS\")])],\n      fullWidth: isMobile\n    };\n  }\n\n  var amountValidate = [required];\n\n  if (min) {\n    amountValidate.push(minValue(min, STRINGS.WITHDRAWALS_MIN_VALUE_ERROR));\n  }\n\n  if (MAX) {\n    amountValidate.push(maxValue(MAX, STRINGS.WITHDRAWALS_MAX_VALUE_ERROR));\n  } // FIX add according fee\n  // amountValidate.push(checkBalance(available, STRINGS.formatString(STRINGS.WITHDRAWALS_LOWER_BALANCE, fullname), fee));\n\n\n  amountValidate.push(checkBalance(available, STRINGS.formatString(STRINGS.WITHDRAWALS_LOWER_BALANCE, fullname), 0));\n  fields.amount = {\n    type: \"number\",\n    label: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_AMOUNT_LABEL, fullname),\n    placeholder: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_AMOUNT_PLACEHOLDER, fullname).join(\"\"),\n    min: min,\n    max: MAX,\n    step: increment_unit,\n    validate: amountValidate,\n    normalize: normalizeBTC,\n    fullWidth: isMobile,\n    notification: {\n      text: STRINGS.CALCULATE_MAX,\n      status: \"information\",\n      iconPath: ICONS.BLUE_PLUS,\n      className: \"file_upload_icon\",\n      useSvg: true,\n      onClick: calculateMax\n    }\n  };\n\n  if (coins[symbol]) {\n    fields.fee = {\n      type: \"number\",\n      // label: STRINGS[`WITHDRAWALS_FORM_FEE_${symbol.toUpperCase()}_LABEL`],\n      label: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_FEE_COMMON_LABEL, fullname),\n      placeholder: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_FEE_PLACEHOLDER, fullname).join(\"\"),\n      disabled: true,\n      fullWidth: isMobile\n    };\n  } else {\n    fields.fee = {\n      type: \"editable\",\n      inputType: \"number\",\n      label: STRINGS[\"WITHDRAWALS_FORM_FEE_\".concat(symbol.toUpperCase(), \"_LABEL\")],\n      placeholder: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_FEE_PLACEHOLDER, fullname).join(\"\"),\n      min: min,\n      max: MAX,\n      step: min,\n      validate: [required, minValue(min), MAX ? maxValue(MAX) : \"\"],\n      normalize: normalizeBTCFee,\n      fullWidth: isMobile\n    };\n  }\n\n  return fields;\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Withdraw/formUtils.js"],"names":["required","minValue","maxValue","checkBalance","validAddress","normalizeBTC","normalizeBTCFee","isMobile","STRINGS","ICONS","BASE_CURRENCY","DEFAULT_COIN_DATA","generateInitialValues","symbol","coins","min","withdrawal_fee","initialValues","fee","amount","generateFormValues","available","calculateMax","verification_level","fullname","increment_unit","withdrawal_limits","MAX","fields","address","type","label","WITHDRAWALS_FORM_ADDRESS_LABEL","placeholder","WITHDRAWALS_FORM_ADDRESS_PLACEHOLDER","validate","toUpperCase","fullWidth","amountValidate","push","WITHDRAWALS_MIN_VALUE_ERROR","WITHDRAWALS_MAX_VALUE_ERROR","formatString","WITHDRAWALS_LOWER_BALANCE","WITHDRAWALS_FORM_AMOUNT_LABEL","WITHDRAWALS_FORM_AMOUNT_PLACEHOLDER","join","max","step","normalize","notification","text","CALCULATE_MAX","status","iconPath","BLUE_PLUS","className","useSvg","onClick","WITHDRAWALS_FORM_FEE_COMMON_LABEL","WITHDRAWALS_FORM_FEE_PLACEHOLDER","disabled","inputType"],"mappings":"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","sourcesContent":["import {\n\trequired,\n\tminValue,\n\tmaxValue,\n\tcheckBalance,\n\tvalidAddress,\n\tnormalizeBTC,\n\tnormalizeBTCFee\n} from \"../../components/Form/validations\";\nimport { isMobile } from \"react-device-detect\";\nimport STRINGS from \"../../config/localizedStrings\";\nimport { ICONS, BASE_CURRENCY, DEFAULT_COIN_DATA } from \"../../config/constants\";\n\nexport const generateInitialValues = (symbol, coins = {}) => {\n\tconst { min, withdrawal_fee } = coins[symbol] || DEFAULT_COIN_DATA;\n\tconst initialValues = {};\n\n\tif (coins[symbol]) {\n\t\tinitialValues.fee = withdrawal_fee;\n\t} else {\n\t\tinitialValues.fee = 0;\n\t}\n\n\tif (min) {\n\t\tinitialValues.amount = min;\n\t}\n\treturn initialValues;\n};\n\nexport const generateFormValues = (\n\tsymbol,\n\tavailable = 0,\n\tcalculateMax,\n\tcoins = {},\n\tverification_level\n) => {\n\tconst { fullname, min, increment_unit, withdrawal_limits = {} } = coins[\n\t\tsymbol\n\t] || DEFAULT_COIN_DATA;\n\tlet MAX = withdrawal_limits[verification_level];\n\tif (withdrawal_limits[verification_level] === 0) MAX = \"\";\n\tif (withdrawal_limits[verification_level] === -1) MAX = 0;\n\tconst fields = {};\n\n\tif (symbol !== BASE_CURRENCY) {\n\t\tfields.address = {\n\t\t\ttype: \"text\",\n\t\t\tlabel: STRINGS.WITHDRAWALS_FORM_ADDRESS_LABEL,\n\t\t\tplaceholder: STRINGS.WITHDRAWALS_FORM_ADDRESS_PLACEHOLDER,\n\t\t\tvalidate: [\n\t\t\t\trequired,\n\t\t\t\tvalidAddress(\n\t\t\t\t\tsymbol,\n\t\t\t\t\tSTRINGS[`WITHDRAWALS_${symbol.toUpperCase()}_INVALID_ADDRESS`]\n\t\t\t\t)\n\t\t\t],\n\t\t\tfullWidth: isMobile\n\t\t};\n\t}\n\n\tconst amountValidate = [required];\n\tif (min) {\n\t\tamountValidate.push(minValue(min, STRINGS.WITHDRAWALS_MIN_VALUE_ERROR));\n\t}\n\tif (MAX) {\n\t\tamountValidate.push(maxValue(MAX, STRINGS.WITHDRAWALS_MAX_VALUE_ERROR));\n\t}\n\t// FIX add according fee\n\t// amountValidate.push(checkBalance(available, STRINGS.formatString(STRINGS.WITHDRAWALS_LOWER_BALANCE, fullname), fee));\n\tamountValidate.push(\n\t\tcheckBalance(\n\t\t\tavailable,\n\t\t\tSTRINGS.formatString(STRINGS.WITHDRAWALS_LOWER_BALANCE, fullname),\n\t\t\t0\n\t\t)\n\t);\n\n\tfields.amount = {\n\t\ttype: \"number\",\n\t\tlabel: STRINGS.formatString(STRINGS.WITHDRAWALS_FORM_AMOUNT_LABEL, fullname),\n\t\tplaceholder: STRINGS.formatString(\n\t\t\tSTRINGS.WITHDRAWALS_FORM_AMOUNT_PLACEHOLDER,\n\t\t\tfullname\n\t\t).join(\"\"),\n\t\tmin: min,\n\t\tmax: MAX,\n\t\tstep: increment_unit,\n\t\tvalidate: amountValidate,\n\t\tnormalize: normalizeBTC,\n\t\tfullWidth: isMobile,\n\t\tnotification: {\n\t\t\ttext: STRINGS.CALCULATE_MAX,\n\t\t\tstatus: \"information\",\n\t\t\ticonPath: ICONS.BLUE_PLUS,\n\t\t\tclassName: \"file_upload_icon\",\n\t\t\tuseSvg: true,\n\t\t\tonClick: calculateMax\n\t\t}\n\t};\n\n\tif (coins[symbol]) {\n\t\tfields.fee = {\n\t\t\ttype: \"number\",\n\t\t\t// label: STRINGS[`WITHDRAWALS_FORM_FEE_${symbol.toUpperCase()}_LABEL`],\n\t\t\tlabel: STRINGS.formatString(\n\t\t\t\tSTRINGS.WITHDRAWALS_FORM_FEE_COMMON_LABEL,\n\t\t\t\tfullname\n\t\t\t),\n\t\t\tplaceholder: STRINGS.formatString(\n\t\t\t\tSTRINGS.WITHDRAWALS_FORM_FEE_PLACEHOLDER,\n\t\t\t\tfullname\n\t\t\t).join(\"\"),\n\t\t\tdisabled: true,\n\t\t\tfullWidth: isMobile\n\t\t};\n\t} else {\n\t\tfields.fee = {\n\t\t\ttype: \"editable\",\n\t\t\tinputType: \"number\",\n\t\t\tlabel: STRINGS[`WITHDRAWALS_FORM_FEE_${symbol.toUpperCase()}_LABEL`],\n\t\t\tplaceholder: STRINGS.formatString(\n\t\t\t\tSTRINGS.WITHDRAWALS_FORM_FEE_PLACEHOLDER,\n\t\t\t\tfullname\n\t\t\t).join(\"\"),\n\t\t\tmin: min,\n\t\t\tmax: MAX,\n\t\t\tstep: min,\n\t\t\tvalidate: [required, minValue(min), MAX ? maxValue(MAX) : \"\"],\n\t\t\tnormalize: normalizeBTCFee,\n\t\t\tfullWidth: isMobile\n\t\t};\n\t}\n\n\treturn fields;\n};\n"]},"metadata":{},"sourceType":"module"}