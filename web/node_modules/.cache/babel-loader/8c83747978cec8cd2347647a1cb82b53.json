{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Main/index.js\";\nimport React, { Component } from 'react';\nimport UserList from './userList';\nimport TradingVolume from './tradingVolume';\nimport { Spin, Row, Col } from 'antd';\nimport { getNumOfUsers, getMonthlyTradingVolume, requestFees } from './actions';\nimport { getEmail } from '../../../utils';\nimport { checkRole, isAdmin } from '../../../utils/token';\nimport './index.css';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userListLoading: true,\n      tradingVolumeLoading: true,\n      pageDisplay: 'block',\n      numbers: 0,\n      userError: '',\n      selectedPair: '',\n      tradingData: [],\n      chartData: [],\n      newPair: [],\n      tradingError: ''\n    };\n\n    _this.getUserData = function () {\n      if (isAdmin()) {\n        getNumOfUsers().then(function (data) {\n          _this.setState({\n            numbers: data.data.users,\n            userListLoading: false\n          });\n        }).catch(function (error) {\n          var message = error.data ? error.data.message : error.message;\n\n          _this.setState({\n            userError: message,\n            userListLoading: false\n          });\n        });\n      } else {\n        _this.setState({\n          userError: 'not authorized'\n        });\n      }\n    };\n\n    _this.getTradingData = function () {\n      var selectedPair = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'btc-eur';\n      var tableData = [],\n          chartData = [];\n      getMonthlyTradingVolume(selectedPair).then(function (data) {\n        var sortedData = data.sort(function (a, b) {\n          return a.date > b.date;\n        });\n        chartData = sortedData.map(function (obj) {\n          return obj.volume;\n        });\n        tableData = data.sort(function (a, b) {\n          return new Date(b.date) - new Date(a.date);\n        });\n\n        if (isAdmin()) {\n          return requestFees();\n        } else {\n          throw new Error('not authorized');\n        }\n      }).then(function (data) {\n        var newPair = [];\n        var sortedData = data.data.sort(function (a, b) {\n          return a.id > b.id;\n        });\n        sortedData.forEach(function (_ref) {\n          var name = _ref.name;\n          newPair.push(name);\n        });\n\n        _this.setState({\n          tradingData: tableData,\n          chartData: chartData,\n          newPair: newPair,\n          tradingVolumeLoading: false\n        });\n      }).catch(function (err) {\n        _this.setState({\n          tradingError: 'not authorized'\n        });\n      });\n    };\n\n    _this.handleChange = function (selectedPair) {\n      _this.setState({\n        tradingVolumeLoading: true\n      }, function () {\n        _this.getTradingData(selectedPair);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getUserData();\n      this.getTradingData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          userListLoading = _this$state.userListLoading,\n          tradingVolumeLoading = _this$state.tradingVolumeLoading,\n          pageDisplay = _this$state.pageDisplay,\n          numbers = _this$state.numbers,\n          userError = _this$state.userError,\n          tradingData = _this$state.tradingData,\n          chartData = _this$state.chartData,\n          newPair = _this$state.newPair,\n          tradingError = _this$state.tradingError;\n\n      if (userListLoading && tradingVolumeLoading) {\n        return React.createElement(Spin, {\n          size: \"large\",\n          className: \"m-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"app_container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page\",\n        style: {\n          display: pageDisplay\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"black-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"black-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"DASHBOARD\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Welcome \", getEmail())), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Role: \", checkRole()))), React.createElement(\"div\", {\n        className: \"main-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(UserList, {\n        numbers: numbers,\n        error: userError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), React.createElement(TradingVolume, {\n        error: tradingError,\n        data: tradingData,\n        chartData: chartData,\n        newPair: newPair,\n        handleChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Main/index.js"],"names":["React","Component","UserList","TradingVolume","Spin","Row","Col","getNumOfUsers","getMonthlyTradingVolume","requestFees","getEmail","checkRole","isAdmin","Main","state","userListLoading","tradingVolumeLoading","pageDisplay","numbers","userError","selectedPair","tradingData","chartData","newPair","tradingError","getUserData","then","data","setState","users","catch","error","message","getTradingData","tableData","sortedData","sort","a","b","date","map","obj","volume","Date","Error","id","forEach","name","push","err","handleChange","display"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,MAA/B;AACA,SAASC,aAAT,EAAwBC,uBAAxB,EAAiDC,WAAjD,QAAoE,WAApE;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,sBAAnC;AACA,OAAO,aAAP;;IAEMC,I;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,eAAe,EAAE,IADV;AAEPC,MAAAA,oBAAoB,EAAE,IAFf;AAGPC,MAAAA,WAAW,EAAE,OAHN;AAIPC,MAAAA,OAAO,EAAE,CAJF;AAKPC,MAAAA,SAAS,EAAE,EALJ;AAMPC,MAAAA,YAAY,EAAE,EANP;AAOPC,MAAAA,WAAW,EAAE,EAPN;AAQPC,MAAAA,SAAS,EAAE,EARJ;AASPC,MAAAA,OAAO,EAAE,EATF;AAUPC,MAAAA,YAAY,EAAE;AAVP,K;;UAkBRC,W,GAAc,YAAM;AACnB,UAAIb,OAAO,EAAX,EAAe;AACdL,QAAAA,aAAa,GACXmB,IADF,CACO,UAACC,IAAD,EAAU;AACf,gBAAKC,QAAL,CAAc;AACbV,YAAAA,OAAO,EAAES,IAAI,CAACA,IAAL,CAAUE,KADN;AAEbd,YAAAA,eAAe,EAAE;AAFJ,WAAd;AAIA,SANF,EAOEe,KAPF,CAOQ,UAACC,KAAD,EAAW;AACjB,cAAMC,OAAO,GAAGD,KAAK,CAACJ,IAAN,GAAaI,KAAK,CAACJ,IAAN,CAAWK,OAAxB,GAAkCD,KAAK,CAACC,OAAxD;;AACA,gBAAKJ,QAAL,CAAc;AACbT,YAAAA,SAAS,EAAEa,OADE;AAEbjB,YAAAA,eAAe,EAAE;AAFJ,WAAd;AAIA,SAbF;AAcA,OAfD,MAeO;AACN,cAAKa,QAAL,CAAc;AACbT,UAAAA,SAAS,EAAE;AADE,SAAd;AAGA;AACD,K;;UAEDc,c,GAAiB,YAA8B;AAAA,UAA7Bb,YAA6B,uEAAd,SAAc;AAC9C,UAAIc,SAAS,GAAG,EAAhB;AAAA,UACCZ,SAAS,GAAG,EADb;AAEAd,MAAAA,uBAAuB,CAACY,YAAD,CAAvB,CACEM,IADF,CACO,UAACC,IAAD,EAAU;AACf,YAAMQ,UAAU,GAAGR,IAAI,CAACS,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAArB;AAAA,SAAV,CAAnB;AACAjB,QAAAA,SAAS,GAAGa,UAAU,CAACK,GAAX,CAAe,UAACC,GAAD;AAAA,iBAASA,GAAG,CAACC,MAAb;AAAA,SAAf,CAAZ;AACAR,QAAAA,SAAS,GAAGP,IAAI,CAACS,IAAL,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC/B,iBAAO,IAAIK,IAAJ,CAASL,CAAC,CAACC,IAAX,IAAmB,IAAII,IAAJ,CAASN,CAAC,CAACE,IAAX,CAA1B;AACA,SAFW,CAAZ;;AAGA,YAAI3B,OAAO,EAAX,EAAe;AACd,iBAAOH,WAAW,EAAlB;AACA,SAFD,MAEO;AACN,gBAAM,IAAImC,KAAJ,CAAU,gBAAV,CAAN;AACA;AACD,OAZF,EAaElB,IAbF,CAaO,UAACC,IAAD,EAAU;AACf,YAAMJ,OAAO,GAAG,EAAhB;AACA,YAAMY,UAAU,GAAGR,IAAI,CAACA,IAAL,CAAUS,IAAV,CAAe,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACQ,EAAF,GAAOP,CAAC,CAACO,EAAnB;AAAA,SAAf,CAAnB;AACAV,QAAAA,UAAU,CAACW,OAAX,CAAmB,gBAAc;AAAA,cAAXC,IAAW,QAAXA,IAAW;AAChCxB,UAAAA,OAAO,CAACyB,IAAR,CAAaD,IAAb;AACA,SAFD;;AAGA,cAAKnB,QAAL,CAAc;AACbP,UAAAA,WAAW,EAAEa,SADA;AAEbZ,UAAAA,SAAS,EAATA,SAFa;AAGbC,UAAAA,OAAO,EAAPA,OAHa;AAIbP,UAAAA,oBAAoB,EAAE;AAJT,SAAd;AAMA,OAzBF,EA0BEc,KA1BF,CA0BQ,UAACmB,GAAD,EAAS;AACf,cAAKrB,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAE;AAAhB,SAAd;AACA,OA5BF;AA6BA,K;;UAED0B,Y,GAAe,UAAC9B,YAAD,EAAkB;AAChC,YAAKQ,QAAL,CAAc;AAAEZ,QAAAA,oBAAoB,EAAE;AAAxB,OAAd,EAA8C,YAAM;AACnD,cAAKiB,cAAL,CAAoBb,YAApB;AACA,OAFD;AAGA,K;;;;;;;yCAlEoB;AACpB,WAAKK,WAAL;AACA,WAAKQ,cAAL;AACA;;;6BAiEQ;AAAA,wBAWJ,KAAKnB,KAXD;AAAA,UAEPC,eAFO,eAEPA,eAFO;AAAA,UAGPC,oBAHO,eAGPA,oBAHO;AAAA,UAIPC,WAJO,eAIPA,WAJO;AAAA,UAKPC,OALO,eAKPA,OALO;AAAA,UAMPC,SANO,eAMPA,SANO;AAAA,UAOPE,WAPO,eAOPA,WAPO;AAAA,UAQPC,SARO,eAQPA,SARO;AAAA,UASPC,OATO,eASPA,OATO;AAAA,UAUPC,YAVO,eAUPA,YAVO;;AAYR,UAAIT,eAAe,IAAIC,oBAAvB,EAA6C;AAC5C,eAAO,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;AACD,aACC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAAEmC,UAAAA,OAAO,EAAElC;AAAX,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADD,EAIC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYP,QAAQ,EAApB,CADD,CADD,EAIC,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUC,SAAS,EAAnB,CADD,CAJD,CAJD,EAYC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAEO,OAAnB;AAA4B,QAAA,KAAK,EAAEC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAZD,EAeC,oBAAC,aAAD;AACC,QAAA,KAAK,EAAEK,YADR;AAEC,QAAA,IAAI,EAAEH,WAFP;AAGC,QAAA,SAAS,EAAEC,SAHZ;AAIC,QAAA,OAAO,EAAEC,OAJV;AAKC,QAAA,YAAY,EAAE,KAAK2B,YALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfD,CADD,CADD;AA2BA;;;;EA5HiBjD,S;;AA+HnB,eAAeY,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport UserList from './userList';\nimport TradingVolume from './tradingVolume';\nimport { Spin, Row, Col } from 'antd';\nimport { getNumOfUsers, getMonthlyTradingVolume, requestFees } from './actions';\nimport { getEmail } from '../../../utils';\nimport { checkRole, isAdmin } from '../../../utils/token';\nimport './index.css';\n\nclass Main extends Component {\n\tstate = {\n\t\tuserListLoading: true,\n\t\ttradingVolumeLoading: true,\n\t\tpageDisplay: 'block',\n\t\tnumbers: 0,\n\t\tuserError: '',\n\t\tselectedPair: '',\n\t\ttradingData: [],\n\t\tchartData: [],\n\t\tnewPair: [],\n\t\ttradingError: ''\n\t};\n\n\tcomponentWillMount() {\n\t\tthis.getUserData();\n\t\tthis.getTradingData();\n\t}\n\n\tgetUserData = () => {\n\t\tif (isAdmin()) {\n\t\t\tgetNumOfUsers()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tnumbers: data.data.users,\n\t\t\t\t\t\tuserListLoading: false\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst message = error.data ? error.data.message : error.message;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuserError: message,\n\t\t\t\t\t\tuserListLoading: false\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tuserError: 'not authorized'\n\t\t\t});\n\t\t}\n\t};\n\n\tgetTradingData = (selectedPair = 'btc-eur') => {\n\t\tlet tableData = [],\n\t\t\tchartData = [];\n\t\tgetMonthlyTradingVolume(selectedPair)\n\t\t\t.then((data) => {\n\t\t\t\tconst sortedData = data.sort((a, b) => a.date > b.date);\n\t\t\t\tchartData = sortedData.map((obj) => obj.volume);\n\t\t\t\ttableData = data.sort((a, b) => {\n\t\t\t\t\treturn new Date(b.date) - new Date(a.date);\n\t\t\t\t});\n\t\t\t\tif (isAdmin()) {\n\t\t\t\t\treturn requestFees();\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('not authorized');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst newPair = [];\n\t\t\t\tconst sortedData = data.data.sort((a, b) => a.id > b.id);\n\t\t\t\tsortedData.forEach(({ name }) => {\n\t\t\t\t\tnewPair.push(name);\n\t\t\t\t});\n\t\t\t\tthis.setState({\n\t\t\t\t\ttradingData: tableData,\n\t\t\t\t\tchartData,\n\t\t\t\t\tnewPair,\n\t\t\t\t\ttradingVolumeLoading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthis.setState({ tradingError: 'not authorized' });\n\t\t\t});\n\t};\n\n\thandleChange = (selectedPair) => {\n\t\tthis.setState({ tradingVolumeLoading: true }, () => {\n\t\t\tthis.getTradingData(selectedPair);\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tuserListLoading,\n\t\t\ttradingVolumeLoading,\n\t\t\tpageDisplay,\n\t\t\tnumbers,\n\t\t\tuserError,\n\t\t\ttradingData,\n\t\t\tchartData,\n\t\t\tnewPair,\n\t\t\ttradingError\n\t\t} = this.state;\n\t\tif (userListLoading && tradingVolumeLoading) {\n\t\t\treturn <Spin size=\"large\" className=\"m-top\" />;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"app_container-content\">\n\t\t\t\t<div className=\"page\" style={{ display: pageDisplay }}>\n\t\t\t\t\t<h1 className=\"black-header\">\n\t\t\t\t\t\t<div className=\"black-text\">DASHBOARD</div>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col span={8}>\n\t\t\t\t\t\t\t<p>Welcome {getEmail()}</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={8}>\n\t\t\t\t\t\t\t<p>Role: {checkRole()}</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<div className=\"main-header\">\n\t\t\t\t\t\t<UserList numbers={numbers} error={userError} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<TradingVolume\n\t\t\t\t\t\terror={tradingError}\n\t\t\t\t\t\tdata={tradingData}\n\t\t\t\t\t\tchartData={chartData}\n\t\t\t\t\t\tnewPair={newPair}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}