{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Trade/components/OrderEntryForm.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector } from 'redux-form';\nimport STRINGS from '../../../config/localizedStrings';\nimport { Button } from '../../../components';\nimport renderFields from '../../../components/Form/factoryTradeFields';\nimport { isLoggedIn } from '../../../utils/token';\nexport var FORM_NAME = 'OrderEntryForm';\n\nvar validate = function validate(values, props) {\n  var evaluateOrder = props.evaluateOrder;\n  var error = {};\n  error._error = evaluateOrder(values);\n  return error;\n};\n\nvar getFields = function getFields() {\n  var formValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (type === 'market') {\n    var fields = _objectSpread({}, formValues);\n\n    delete fields.price;\n    return fields;\n  }\n\n  return formValues;\n};\n\nvar Form = function Form(_ref) {\n  var children = _ref.children,\n      buttonLabel = _ref.buttonLabel,\n      handleSubmit = _ref.handleSubmit,\n      submitting = _ref.submitting,\n      pristine = _ref.pristine,\n      error = _ref.error,\n      valid = _ref.valid,\n      formValues = _ref.formValues,\n      side = _ref.side,\n      type = _ref.type,\n      currencyName = _ref.currencyName,\n      outsideFormError = _ref.outsideFormError,\n      onReview = _ref.onReview,\n      formKeyDown = _ref.formKeyDown;\n  var fields = getFields(formValues, type);\n  var errorText = error || outsideFormError;\n  return React.createElement(\"div\", {\n    className: \"trade_order_entry-form d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"trade_order_entry-form_inputs-wrapper\",\n    onSubmit: handleSubmit,\n    onKeyDown: function onKeyDown(e) {\n      if (!submitting && valid && !errorText && isLoggedIn()) formKeyDown(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"trade_order_entry-form_fields-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, Object.entries(fields).map(renderFields), errorText && React.createElement(\"div\", {\n    className: \"form-error warning_text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, errorText)), children, React.createElement(Button, {\n    type: \"button\",\n    onClick: onReview,\n    label: STRINGS.formatString(STRINGS.ORDER_ENTRY_BUTTON, STRINGS.SIDES_VALUES[side] || '', currencyName).join(' '),\n    disabled: submitting || !valid || !!errorText || !isLoggedIn(),\n    className: classnames('trade_order_entry-form-action'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nvar EntryOrderForm = reduxForm({\n  form: FORM_NAME,\n  validate: validate,\n  enableReinitialize: true // onSubmitSuccess: (result, dispatch) => dispatch(reset(FORM_NAME)),\n\n})(Form);\nvar selector = formValueSelector(FORM_NAME);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return selector(state, 'price', 'size', 'side', 'type');\n};\n\nexport default connect(mapStateToProps)(EntryOrderForm);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Trade/components/OrderEntryForm.js"],"names":["React","classnames","connect","reduxForm","formValueSelector","STRINGS","Button","renderFields","isLoggedIn","FORM_NAME","validate","values","props","evaluateOrder","error","_error","getFields","formValues","type","fields","price","Form","children","buttonLabel","handleSubmit","submitting","pristine","valid","side","currencyName","outsideFormError","onReview","formKeyDown","errorText","e","Object","entries","map","formatString","ORDER_ENTRY_BUTTON","SIDES_VALUES","join","EntryOrderForm","form","enableReinitialize","selector","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector } from 'redux-form';\n\nimport STRINGS from '../../../config/localizedStrings';\nimport { Button } from '../../../components';\nimport renderFields from '../../../components/Form/factoryTradeFields';\nimport { isLoggedIn } from '../../../utils/token';\n\nexport const FORM_NAME = 'OrderEntryForm';\n\nconst validate = (values, props) => {\n\tconst { evaluateOrder } = props;\n\tconst error = {};\n\terror._error = evaluateOrder(values);\n\treturn error;\n};\n\nconst getFields = (formValues = {}, type = '') => {\n\tif (type === 'market') {\n\t\tconst fields = { ...formValues };\n\t\tdelete fields.price;\n\t\treturn fields;\n\t}\n\treturn formValues;\n};\n\nconst Form = ({\n\tchildren,\n\tbuttonLabel,\n\thandleSubmit,\n\tsubmitting,\n\tpristine,\n\terror,\n\tvalid,\n\tformValues,\n\tside,\n\ttype,\n\tcurrencyName,\n\toutsideFormError,\n\tonReview,\n\tformKeyDown\n}) => {\n\tconst fields = getFields(formValues, type);\n\tconst errorText = error || outsideFormError;\n\treturn (\n\t\t<div className=\"trade_order_entry-form d-flex\">\n\t\t\t<form\n\t\t\t\tclassName=\"trade_order_entry-form_inputs-wrapper\"\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\tif (!submitting && valid && !errorText && isLoggedIn())\n\t\t\t\t\t\tformKeyDown(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<div className=\"trade_order_entry-form_fields-wrapper\">\n\t\t\t\t\t{Object.entries(fields).map(renderFields)}\n\t\t\t\t\t{errorText && (\n\t\t\t\t\t\t<div className=\"form-error warning_text font-weight-bold\">\n\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{children}\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={onReview}\n\t\t\t\t\tlabel={STRINGS.formatString(\n\t\t\t\t\t\tSTRINGS.ORDER_ENTRY_BUTTON,\n\t\t\t\t\t\tSTRINGS.SIDES_VALUES[side] || '',\n\t\t\t\t\t\tcurrencyName\n\t\t\t\t\t).join(' ')}\n\t\t\t\t\tdisabled={submitting || !valid || !!errorText || !isLoggedIn()}\n\t\t\t\t\tclassName={classnames('trade_order_entry-form-action')}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nconst EntryOrderForm = reduxForm({\n\tform: FORM_NAME,\n\tvalidate,\n\tenableReinitialize: true\n\t// onSubmitSuccess: (result, dispatch) => dispatch(reset(FORM_NAME)),\n})(Form);\n\nconst selector = formValueSelector(FORM_NAME);\n\nconst mapStateToProps = (state) =>\n\tselector(state, 'price', 'size', 'side', 'type');\n\nexport default connect(mapStateToProps)(EntryOrderForm);\n"]},"metadata":{},"sourceType":"module"}