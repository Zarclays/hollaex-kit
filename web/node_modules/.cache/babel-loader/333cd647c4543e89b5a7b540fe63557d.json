{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Balance/index.js\";\nimport React from 'react';\nimport { SubmissionError } from 'redux-form';\nimport { message } from 'antd';\nimport { performBalanceUpdate } from './actions';\nimport { AdminHocForm } from '../../../components';\nimport { validateRequired, validatePositiveNumber, validateRange } from '../../../components/AdminForm/validations';\nimport { isSupport } from '../../../utils/token';\nvar CURRENCIES = ['eur', 'btc', 'eth', 'bch', 'xrp'];\nvar TYPES = ['deposit', 'withdrawal'];\nvar Form = AdminHocForm('BALANCE_UPDATE_FORM');\n\nvar onSubmit = function onSubmit(values) {\n  // redux form set numbers as string, se we have to parse them\n  var postValues = _objectSpread({}, values, {\n    user_id: parseInt(values.user_id, 10),\n    amount: parseFloat(values.amount)\n  });\n\n  return performBalanceUpdate(postValues).then(function () {\n    message.success('Deposit created');\n  }).catch(function (err) {\n    throw new SubmissionError({\n      _error: err.data.message\n    });\n  });\n};\n\nvar Balance = function Balance(_ref) {\n  var user_id = _ref.user_id;\n  return isSupport() ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: onSubmit,\n    buttonText: \"Deposit\",\n    fields: {\n      amount: {\n        type: 'number',\n        label: 'Amount',\n        min: 0.00001,\n        max: 100000000,\n        validate: [validateRequired, validatePositiveNumber(0)]\n      },\n      currency: {\n        type: 'select',\n        label: 'Currency',\n        options: CURRENCIES,\n        validate: [validateRequired, validateRange(CURRENCIES)]\n      },\n      type: {\n        type: 'select',\n        label: 'Type',\n        options: TYPES,\n        validate: [validateRequired, validateRange(TYPES)]\n      },\n      description: {\n        type: 'text',\n        label: 'Description'\n      }\n    },\n    initialValues: {\n      user_id: user_id,\n      currency: 'fiat',\n      type: 'deposit',\n      amount: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default Balance;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Balance/index.js"],"names":["React","SubmissionError","message","performBalanceUpdate","AdminHocForm","validateRequired","validatePositiveNumber","validateRange","isSupport","CURRENCIES","TYPES","Form","onSubmit","values","postValues","user_id","parseInt","amount","parseFloat","then","success","catch","err","_error","data","Balance","type","label","min","max","validate","currency","options","description"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SACCC,gBADD,EAECC,sBAFD,EAGCC,aAHD,QAIO,2CAJP;AAMA,SAASC,SAAT,QAA0B,sBAA1B;AAEA,IAAMC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAnB;AAEA,IAAMC,KAAK,GAAG,CAAC,SAAD,EAAY,YAAZ,CAAd;AAEA,IAAMC,IAAI,GAAGP,YAAY,CAAC,qBAAD,CAAzB;;AAEA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC5B;AACA,MAAMC,UAAU,qBACZD,MADY;AAEfE,IAAAA,OAAO,EAAEC,QAAQ,CAACH,MAAM,CAACE,OAAR,EAAiB,EAAjB,CAFF;AAGfE,IAAAA,MAAM,EAAEC,UAAU,CAACL,MAAM,CAACI,MAAR;AAHH,IAAhB;;AAMA,SAAOd,oBAAoB,CAACW,UAAD,CAApB,CACLK,IADK,CACA,YAAM;AACXjB,IAAAA,OAAO,CAACkB,OAAR,CAAgB,iBAAhB;AACA,GAHK,EAILC,KAJK,CAIC,UAACC,GAAD,EAAS;AACf,UAAM,IAAIrB,eAAJ,CAAoB;AAAEsB,MAAAA,MAAM,EAAED,GAAG,CAACE,IAAJ,CAAStB;AAAnB,KAApB,CAAN;AACA,GANK,CAAP;AAOA,CAfD;;AAiBA,IAAMuB,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGV,OAAH,QAAGA,OAAH;AAAA,SACfP,SAAS,KACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AACC,IAAA,QAAQ,EAAEI,QADX;AAEC,IAAA,UAAU,EAAC,SAFZ;AAGC,IAAA,MAAM,EAAE;AACPK,MAAAA,MAAM,EAAE;AACPS,QAAAA,IAAI,EAAE,QADC;AAEPC,QAAAA,KAAK,EAAE,QAFA;AAGPC,QAAAA,GAAG,EAAE,OAHE;AAIPC,QAAAA,GAAG,EAAE,SAJE;AAKPC,QAAAA,QAAQ,EAAE,CAACzB,gBAAD,EAAmBC,sBAAsB,CAAC,CAAD,CAAzC;AALH,OADD;AAQPyB,MAAAA,QAAQ,EAAE;AACTL,QAAAA,IAAI,EAAE,QADG;AAETC,QAAAA,KAAK,EAAE,UAFE;AAGTK,QAAAA,OAAO,EAAEvB,UAHA;AAITqB,QAAAA,QAAQ,EAAE,CAACzB,gBAAD,EAAmBE,aAAa,CAACE,UAAD,CAAhC;AAJD,OARH;AAcPiB,MAAAA,IAAI,EAAE;AACLA,QAAAA,IAAI,EAAE,QADD;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLK,QAAAA,OAAO,EAAEtB,KAHJ;AAILoB,QAAAA,QAAQ,EAAE,CAACzB,gBAAD,EAAmBE,aAAa,CAACG,KAAD,CAAhC;AAJL,OAdC;AAoBPuB,MAAAA,WAAW,EAAE;AACZP,QAAAA,IAAI,EAAE,MADM;AAEZC,QAAAA,KAAK,EAAE;AAFK;AApBN,KAHT;AA4BC,IAAA,aAAa,EAAE;AACdZ,MAAAA,OAAO,EAAPA,OADc;AAEdgB,MAAAA,QAAQ,EAAE,MAFI;AAGdL,MAAAA,IAAI,EAAE,SAHQ;AAIdT,MAAAA,MAAM,EAAE;AAJM,KA5BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJc;AAAA,CAAhB;;AA2CA,eAAeQ,OAAf","sourcesContent":["import React from 'react';\nimport { SubmissionError } from 'redux-form';\nimport { message } from 'antd';\nimport { performBalanceUpdate } from './actions';\nimport { AdminHocForm } from '../../../components';\nimport {\n\tvalidateRequired,\n\tvalidatePositiveNumber,\n\tvalidateRange\n} from '../../../components/AdminForm/validations';\n\nimport { isSupport } from '../../../utils/token';\n\nconst CURRENCIES = ['eur', 'btc', 'eth', 'bch', 'xrp'];\n\nconst TYPES = ['deposit', 'withdrawal'];\n\nconst Form = AdminHocForm('BALANCE_UPDATE_FORM');\n\nconst onSubmit = (values) => {\n\t// redux form set numbers as string, se we have to parse them\n\tconst postValues = {\n\t\t...values,\n\t\tuser_id: parseInt(values.user_id, 10),\n\t\tamount: parseFloat(values.amount)\n\t};\n\n\treturn performBalanceUpdate(postValues)\n\t\t.then(() => {\n\t\t\tmessage.success('Deposit created');\n\t\t})\n\t\t.catch((err) => {\n\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t});\n};\n\nconst Balance = ({ user_id }) =>\n\tisSupport() ? (\n\t\t<div />\n\t) : (\n\t\t<div>\n\t\t\t<Form\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tbuttonText=\"Deposit\"\n\t\t\t\tfields={{\n\t\t\t\t\tamount: {\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tlabel: 'Amount',\n\t\t\t\t\t\tmin: 0.00001,\n\t\t\t\t\t\tmax: 100000000,\n\t\t\t\t\t\tvalidate: [validateRequired, validatePositiveNumber(0)]\n\t\t\t\t\t},\n\t\t\t\t\tcurrency: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: 'Currency',\n\t\t\t\t\t\toptions: CURRENCIES,\n\t\t\t\t\t\tvalidate: [validateRequired, validateRange(CURRENCIES)]\n\t\t\t\t\t},\n\t\t\t\t\ttype: {\n\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\tlabel: 'Type',\n\t\t\t\t\t\toptions: TYPES,\n\t\t\t\t\t\tvalidate: [validateRequired, validateRange(TYPES)]\n\t\t\t\t\t},\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tlabel: 'Description'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tinitialValues={{\n\t\t\t\t\tuser_id,\n\t\t\t\t\tcurrency: 'fiat',\n\t\t\t\t\ttype: 'deposit',\n\t\t\t\t\tamount: 0\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n\nexport default Balance;\n"]},"metadata":{},"sourceType":"module"}