{"ast":null,"code":"import _slicedToArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/User/index.js\";\nimport React, { Component } from 'react'; // import { SubmissionError } from 'redux-form';\n\nimport querystring from 'query-string';\nimport { Spin, notification, Tabs } from 'antd';\nimport './index.css';\nimport { AdminHocForm } from '../../../components';\nimport { requestUser } from './actions';\nimport UserContent from './UserContent';\nimport { ListUsers, FullListUsers } from '../ListUsers'; // import { isSupport } from '../../../utils/token';\n\nvar INITIAL_STATE = {\n  userInformation: {},\n  userImages: {},\n  loading: false\n};\nvar Form = AdminHocForm('USER_REQUEST_FORM');\nvar TabPane = Tabs.TabPane;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = INITIAL_STATE;\n\n    _this.requestUserData = function (values) {\n      // const isSupportUser = isSupport();\n      var router = _this.props.router;\n\n      _this.setState(_objectSpread({}, INITIAL_STATE, {\n        loading: true\n      }));\n\n      if (values.id) {\n        router.replace(\"/admin/user?id=\".concat(values.id));\n      } else if (values.email) {\n        router.replace(\"/admin/user?email=\".concat(values.email));\n      } else {\n        router.replace(\"/admin/user?username=\".concat(values.username));\n      }\n\n      return requestUser(values).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            userInformation = _ref2[0],\n            userImages = _ref2[1],\n            userBalance = _ref2[2];\n\n        if (userInformation.id) {\n          _this.setState({\n            userInformation: userInformation,\n            userImages: userImages,\n            userBalance: userBalance,\n            loading: false\n          });\n        } else {\n          var error = new Error('Not found');\n          error.data = userInformation;\n          throw error;\n        }\n      }).catch(function (err) {\n        if (err.status === 403) {// return this.logout();\n        }\n\n        _this.setState({\n          loading: false\n        }); // throw new SubmissionError({ _error: err.data.message });\n\n      });\n    };\n\n    _this.refreshData = function (data, type) {\n      if (type === 'files') {\n        _this.setState({\n          userImages: data\n        });\n      } else {\n        delete data.user_id;\n\n        var userInformation = _objectSpread({}, _this.state.userInformation, data);\n\n        _this.setState({\n          userInformation: userInformation\n        });\n      }\n    };\n\n    _this.refreshAllData = function () {\n      var search = _this.props.location.search;\n\n      if (search) {\n        var qs = querystring.parse(search);\n\n        if (qs.id) {\n          _this.requestUserData(qs);\n        }\n      }\n    };\n\n    _this.clearData = function () {\n      _this.setState(INITIAL_STATE);\n\n      _this.props.history.replace('/user');\n    };\n\n    _this.onChangeUserDataSuccess = function (userInformation) {\n      notification['success']({\n        message: 'Success',\n        description: 'Data saved successfully.'\n      });\n\n      _this.setState({\n        userInformation: userInformation\n      });\n    };\n\n    _this.searchUser = function (_ref3) {\n      var type = _ref3.type,\n          input = _ref3.input;\n      var searchUserdata = input.trim();\n      var REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (REGEX.test(searchUserdata)) {\n        _this.requestUserData({\n          email: searchUserdata\n        });\n      } else if (isNaN(input)) {\n        _this.requestUserData({\n          username: searchUserdata\n        });\n      } else if (!isNaN(parseInt(input, 10))) {\n        _this.requestUserData({\n          id: searchUserdata\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var search = this.props.location.search;\n\n      if (search) {\n        var qs = querystring.parse(search);\n\n        if (qs.id) {\n          this.requestUserData(qs);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          userInformation = _this$state.userInformation,\n          userImages = _this$state.userImages,\n          userBalance = _this$state.userBalance,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"app_container-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Spin, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      }\n\n      return userInformation && userInformation.id ? React.createElement(UserContent, {\n        userBalance: userBalance,\n        userInformation: userInformation,\n        userImages: userImages,\n        refreshAllData: this.refreshAllData,\n        clearData: this.clearData,\n        refreshData: this.refreshData,\n        onChangeUserDataSuccess: this.onChangeUserDataSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"app_container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Search\",\n        key: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"SEARCH FOR USER\"), React.createElement(Form, {\n        onSubmit: this.searchUser,\n        buttonText: \"Search\",\n        fields: {\n          input: {\n            type: 'string',\n            label: 'input',\n            placeholder: 'email or id or username',\n            validate: []\n          }\n        },\n        initialValues: {\n          type: 'id'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: \"User Verification\",\n        key: \"userVerification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list_users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(ListUsers, {\n        requestUser: this.requestUserData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }))), React.createElement(TabPane, {\n        tab: \"All Users\",\n        key: \"users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"m-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"LIST OF ALL USERS\"), React.createElement(FullListUsers, {\n        requestUser: this.requestUserData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/User/index.js"],"names":["React","Component","querystring","Spin","notification","Tabs","AdminHocForm","requestUser","UserContent","ListUsers","FullListUsers","INITIAL_STATE","userInformation","userImages","loading","Form","TabPane","App","state","requestUserData","values","router","props","setState","id","replace","email","username","then","userBalance","error","Error","data","catch","err","status","refreshData","type","user_id","refreshAllData","search","location","qs","parse","clearData","history","onChangeUserDataSuccess","message","description","searchUser","input","searchUserdata","trim","REGEX","test","isNaN","parseInt","label","placeholder","validate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { SubmissionError } from 'redux-form';\nimport querystring from 'query-string';\nimport { Spin, notification, Tabs } from 'antd';\nimport './index.css';\nimport { AdminHocForm } from '../../../components';\n\nimport { requestUser } from './actions';\n\nimport UserContent from './UserContent';\nimport { ListUsers, FullListUsers } from '../ListUsers';\n// import { isSupport } from '../../../utils/token';\n\nconst INITIAL_STATE = {\n\tuserInformation: {},\n\tuserImages: {},\n\tloading: false\n};\n\nconst Form = AdminHocForm('USER_REQUEST_FORM');\n\nconst TabPane = Tabs.TabPane;\n\nclass App extends Component {\n\tstate = INITIAL_STATE;\n\n\tcomponentWillMount() {\n\t\tconst { search } = this.props.location;\n\t\tif (search) {\n\t\t\tconst qs = querystring.parse(search);\n\t\t\tif (qs.id) {\n\t\t\t\tthis.requestUserData(qs);\n\t\t\t}\n\t\t}\n\t}\n\n\trequestUserData = (values) => {\n\t\t// const isSupportUser = isSupport();\n\t\tconst { router } = this.props;\n\t\tthis.setState({ ...INITIAL_STATE, loading: true });\n\t\tif (values.id) {\n\t\t\trouter.replace(`/admin/user?id=${values.id}`);\n\t\t} else if (values.email) {\n\t\t\trouter.replace(`/admin/user?email=${values.email}`);\n\t\t} else {\n\t\t\trouter.replace(`/admin/user?username=${values.username}`);\n\t\t}\n\t\treturn requestUser(values)\n\t\t\t.then(([userInformation, userImages, userBalance]) => {\n\t\t\t\tif (userInformation.id) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tuserInformation,\n\t\t\t\t\t\tuserImages,\n\t\t\t\t\t\tuserBalance,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst error = new Error('Not found');\n\t\t\t\t\terror.data = userInformation;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.status === 403) {\n\t\t\t\t\t// return this.logout();\n\t\t\t\t}\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t// throw new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\trefreshData = (data, type) => {\n\t\tif (type === 'files') {\n\t\t\tthis.setState({ userImages: data });\n\t\t} else {\n\t\t\tdelete data.user_id;\n\n\t\t\tconst userInformation = {\n\t\t\t\t...this.state.userInformation,\n\t\t\t\t...data\n\t\t\t};\n\t\t\tthis.setState({ userInformation });\n\t\t}\n\t};\n\n\trefreshAllData = () => {\n\t\tconst { search } = this.props.location;\n\t\tif (search) {\n\t\t\tconst qs = querystring.parse(search);\n\t\t\tif (qs.id) {\n\t\t\t\tthis.requestUserData(qs);\n\t\t\t}\n\t\t}\n\t};\n\n\tclearData = () => {\n\t\tthis.setState(INITIAL_STATE);\n\t\tthis.props.history.replace('/user');\n\t};\n\n\tonChangeUserDataSuccess = (userInformation) => {\n\t\tnotification['success']({\n\t\t\tmessage: 'Success',\n\t\t\tdescription: 'Data saved successfully.'\n\t\t});\n\t\tthis.setState({ userInformation });\n\t};\n\n\tsearchUser = ({ type, input }) => {\n\t\tconst searchUserdata = input.trim();\n\t\tconst REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\t\tif (REGEX.test(searchUserdata)) {\n\t\t\tthis.requestUserData({ email: searchUserdata });\n\t\t} else if (isNaN(input)) {\n\t\t\tthis.requestUserData({ username: searchUserdata });\n\t\t} else if (!isNaN(parseInt(input, 10))) {\n\t\t\tthis.requestUserData({ id: searchUserdata });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { userInformation, userImages, userBalance, loading } = this.state;\n\n\t\tif (loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"app_container-content\">\n\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn userInformation && userInformation.id ? (\n\t\t\t<UserContent\n\t\t\t\tuserBalance={userBalance}\n\t\t\t\tuserInformation={userInformation}\n\t\t\t\tuserImages={userImages}\n\t\t\t\trefreshAllData={this.refreshAllData}\n\t\t\t\tclearData={this.clearData}\n\t\t\t\trefreshData={this.refreshData}\n\t\t\t\tonChangeUserDataSuccess={this.onChangeUserDataSuccess}\n\t\t\t/>\n\t\t) : (\n\t\t\t<div className=\"app_container-content\">\n\t\t\t\t<Tabs>\n\t\t\t\t\t<TabPane tab=\"Search\" key=\"search\">\n\t\t\t\t\t\t<h2>SEARCH FOR USER</h2>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tonSubmit={this.searchUser}\n\t\t\t\t\t\t\tbuttonText=\"Search\"\n\t\t\t\t\t\t\tfields={{\n\t\t\t\t\t\t\t\tinput: {\n\t\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\t\tlabel: 'input',\n\t\t\t\t\t\t\t\t\tplaceholder: 'email or id or username',\n\t\t\t\t\t\t\t\t\tvalidate: []\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tinitialValues={{ type: 'id' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TabPane>\n\n\t\t\t\t\t<TabPane tab=\"User Verification\" key=\"userVerification\">\n\t\t\t\t\t\t<div className=\"list_users\">\n\t\t\t\t\t\t\t<ListUsers requestUser={this.requestUserData} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabPane>\n\n\t\t\t\t\t<TabPane tab=\"All Users\" key=\"users\">\n\t\t\t\t\t\t<h2 className=\"m-top\">LIST OF ALL USERS</h2>\n\t\t\t\t\t\t<FullListUsers requestUser={this.requestUserData} />\n\t\t\t\t\t</TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}