{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Deposit/utils.js\";\nimport React from 'react';\nimport QRCode from 'qrcode.react';\nimport classnames from 'classnames';\nimport { BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport { isMobile } from 'react-device-detect';\nimport { renderDumbField } from '../Wallet/components'; // eslint-disable-line\n\nexport var generateBaseInformation = function generateBaseInformation() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, STRINGS.DEPOSIT.INFORMATION_MESSAGES.map(function (message, index) {\n    return React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, message);\n  }), id && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, STRINGS.formatString(STRINGS.DEPOSIT_BANK_REFERENCE, id).join(' ')));\n};\n\nvar renderBTCContent = function renderBTCContent() {\n  var label = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var onCopy = arguments.length > 2 ? arguments[2] : undefined;\n  var copyOnClick = arguments.length > 3 ? arguments[3] : undefined;\n  var destinationAddress = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var destinationLabel = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n  return address ? React.createElement(\"div\", {\n    className: classnames('deposit_info-wrapper d-flex align-items-center', isMobile && 'flex-column-reverse'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"deposit_info-crypto-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, renderDumbField({\n    label: label,\n    value: address,\n    fullWidth: true,\n    allowCopy: true,\n    onCopy: onCopy,\n    copyOnClick: copyOnClick\n  })), destinationAddress ? React.createElement(\"div\", {\n    className: \"deposit_info-crypto-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, renderDumbField({\n    label: destinationLabel,\n    value: destinationAddress,\n    fullWidth: true,\n    allowCopy: true,\n    onCopy: onCopy,\n    copyOnClick: copyOnClick\n  })) : null), React.createElement(\"div\", {\n    className: \"deposit_info-qr-wrapper d-flex align-items-center justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"qr_code-wrapper d-flex flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"qr-code-bg d-flex justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(QRCode, {\n    value: address,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"qr-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, STRINGS.DEPOSIT.QR_CODE)))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, STRINGS.DEPOSIT.NO_DATA);\n};\n\nexport var renderContent = function renderContent(symbol) {\n  var crypto_wallet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var coins = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var onCopy = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (coins[symbol] && symbol !== BASE_CURRENCY) {\n    var _ref = coins[symbol] || DEFAULT_COIN_DATA,\n        fullname = _ref.fullname;\n\n    var address = crypto_wallet[symbol];\n    var destinationAddress = '';\n\n    if (symbol === 'xrp') {\n      var temp = address.split(':');\n      address = temp[0] ? temp[0] : address;\n      destinationAddress = temp[1] ? temp[1] : '';\n    }\n\n    return renderBTCContent(STRINGS.formatString(STRINGS.DEPOSIT.CRYPTO_LABELS.ADDRESS, fullname), address, onCopy, true, destinationAddress, STRINGS.formatString(STRINGS.DEPOSIT.CRYPTO_LABELS.DESTINATION_TAG, fullname));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, STRINGS.DEPOSIT.NO_DATA);\n  }\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Deposit/utils.js"],"names":["React","QRCode","classnames","BASE_CURRENCY","DEFAULT_COIN_DATA","STRINGS","isMobile","renderDumbField","generateBaseInformation","id","DEPOSIT","INFORMATION_MESSAGES","map","message","index","formatString","DEPOSIT_BANK_REFERENCE","join","renderBTCContent","label","address","onCopy","copyOnClick","destinationAddress","destinationLabel","value","fullWidth","allowCopy","QR_CODE","NO_DATA","renderContent","symbol","crypto_wallet","coins","fullname","temp","split","CRYPTO_LABELS","ADDRESS","DESTINATION_TAG"],"mappings":"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","sourcesContent":["import React from 'react';\nimport QRCode from 'qrcode.react';\nimport classnames from 'classnames';\nimport { BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\n\nimport { isMobile } from 'react-device-detect';\nimport { renderDumbField } from '../Wallet/components'; // eslint-disable-line\n\nexport const generateBaseInformation = (id = '') => (\n   <div className=\"text\">\n      {STRINGS.DEPOSIT.INFORMATION_MESSAGES.map((message, index) => (\n         <p key={index}>{message}</p>\n      ))}\n      {id && (\n         <p>\n            {STRINGS.formatString(STRINGS.DEPOSIT_BANK_REFERENCE, id).join(' ')}\n         </p>\n      )}\n   </div>\n);\n\nconst renderBTCContent = (label = '', address = '', onCopy, copyOnClick, destinationAddress = '', destinationLabel = '') =>\n   address ? (\n      <div\n         className={classnames(\n            'deposit_info-wrapper d-flex align-items-center',\n            isMobile && 'flex-column-reverse'\n         )}\n      >\n         <div>\n            <div className=\"deposit_info-crypto-wrapper\">\n               {renderDumbField({\n                  label,\n                  value: address,\n                  fullWidth: true,\n                  allowCopy: true,\n                  onCopy,\n                  copyOnClick\n               })}\n            </div>\n            {destinationAddress\n               ? <div className=\"deposit_info-crypto-wrapper\">\n                  {renderDumbField({\n                     label: destinationLabel,\n                     value: destinationAddress,\n                     fullWidth: true,\n                     allowCopy: true,\n                     onCopy,\n                     copyOnClick\n                  })}\n               </div>\n               : null\n            }\n         </div>\n         <div className=\"deposit_info-qr-wrapper d-flex align-items-center justify-content-center\">\n            <div className=\"qr_code-wrapper d-flex flex-column\">\n               <div className=\"qr-code-bg d-flex justify-content-center align-items-center\">\n                  <QRCode value={address} />\n               </div>\n               <div className=\"qr-text\">{STRINGS.DEPOSIT.QR_CODE}</div>\n            </div>\n         </div>\n      </div>\n   ) : (\n         <div>{STRINGS.DEPOSIT.NO_DATA}</div>\n      );\n\nexport const renderContent = (symbol, crypto_wallet = {}, coins = {}, onCopy) => {\n   if (coins[symbol] && symbol !== BASE_CURRENCY) {\n      const { fullname } = coins[symbol] || DEFAULT_COIN_DATA;\n      let address = crypto_wallet[symbol];\n      let destinationAddress = '';\n      if (symbol === 'xrp') {\n         const temp = address.split(':');\n         address = temp[0] ? temp[0] : address;\n         destinationAddress = temp[1] ? temp[1] : ''\n      }\n      return renderBTCContent(\n         STRINGS.formatString(\n            STRINGS.DEPOSIT.CRYPTO_LABELS.ADDRESS,\n            fullname\n         ),\n         address,\n         onCopy,\n         true,\n         destinationAddress,\n         STRINGS.formatString(\n            STRINGS.DEPOSIT.CRYPTO_LABELS.DESTINATION_TAG,\n            fullname\n         )\n      );\n   } else {\n      return <div>{STRINGS.DEPOSIT.NO_DATA}</div>;\n   }\n};\n"]},"metadata":{},"sourceType":"module"}