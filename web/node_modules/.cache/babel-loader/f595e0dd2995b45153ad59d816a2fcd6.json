{"ast":null,"code":"'use strict';\n\nvar _ = require('underscore');\n\nvar continents = require('./data/continents');\n\nvar regions = require('./data/regions');\n\nvar countriesAll = require('./data/countries.json');\n\nvar currenciesAll = require('./data/currencies.json');\n\nvar languagesAll = require('./data/languages.json');\n\nvar lookup = require('./lookup');\n\nvar getSymbol = require('currency-symbol-map');\n\nexports.continents = continents;\nexports.regions = regions;\nexports.countries = {\n  all: countriesAll\n};\n\n_.each(countriesAll, function (country) {\n  // prefer assigned country codes over inactive ones\n  var exportedAlpha2 = exports.countries[country.alpha2];\n\n  if (!exportedAlpha2 || exportedAlpha2.status === 'deleted') {\n    exports.countries[country.alpha2] = country;\n  }\n\n  var exportedAlpha3 = exports.countries[country.alpha3];\n\n  if (!exportedAlpha3 || exportedAlpha3.status === 'deleted') {\n    exports.countries[country.alpha3] = country;\n  }\n});\n\nexports.currencies = {\n  all: currenciesAll\n};\n\n_.each(currenciesAll, function (currency) {\n  //If the symbol isn't available, default to the currency code\n  var symbol = getSymbol(currency.code);\n\n  if (symbol == '?') {\n    symbol = currency.code;\n  }\n\n  currency.symbol = symbol;\n  exports.currencies[currency.code] = currency;\n});\n\nexports.languages = {\n  all: languagesAll\n}; // Note that for the languages there are several entries with the same alpha3 -\n// eg Dutch and Flemish. Not sure how to best deal with that - here whichever\n// comes last wins.\n\n_.each(languagesAll, function (language) {\n  exports.languages[language.alpha2] = language;\n  exports.languages[language.bibliographic] = language;\n  exports.languages[language.alpha3] = language;\n});\n\nexports.lookup = lookup({\n  countries: countriesAll,\n  currencies: currenciesAll,\n  languages: languagesAll\n});\nvar callingCountries = {\n  all: []\n};\n\nvar callingCodesAll = _.reduce(countriesAll, function (codes, country) {\n  if (country.countryCallingCodes && country.countryCallingCodes.length) {\n    callingCountries.all.push(country);\n    callingCountries[country.alpha2] = country;\n    callingCountries[country.alpha3] = country;\n\n    _.each(country.countryCallingCodes, function (code) {\n      if (codes.indexOf(code) == -1) {\n        codes.push(code);\n      }\n    });\n  }\n\n  return codes;\n}, []);\n\ndelete callingCountries['']; // remove empty alpha3s\n\nexports.callingCountries = callingCountries;\ncallingCodesAll.sort(function (a, b) {\n  var parse = function parse(str) {\n    return parseInt(str);\n  };\n\n  var splitA = _.map(a.split(' '), parse);\n\n  var splitB = _.map(b.split(' '), parse);\n\n  if (splitA[0] < splitB[0]) {\n    return -1;\n  } else if (splitA[0] > splitB[0]) {\n    return 1;\n  } else {\n    // Same - check split[1]\n    if (splitA[1] === undefined && splitB[1] !== undefined) {\n      return -1;\n    } else if (splitA[1] !== undefined && splitB[1] === undefined) {\n      return 1;\n    } else if (splitA[1] < splitB[1]) {\n      return -1;\n    } else if (splitA[1] > splitB[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n});\nexports.callingCodes = {\n  all: callingCodesAll\n};","map":null,"metadata":{},"sourceType":"script"}