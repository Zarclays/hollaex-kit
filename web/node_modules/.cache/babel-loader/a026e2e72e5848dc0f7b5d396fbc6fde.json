{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Notification/Logout.js\";\nimport React from 'react';\nimport { Button } from '../';\nimport { ICONS } from '../../config/constants';\nimport { NotificationWraper, NotificationContent } from './Notification';\nimport STRINGS from '../../config/localizedStrings';\nvar ERROR_DENIED = 'Error Denied: ';\nvar ERROR_INVALID_TOKEN = 'Invalid token';\nvar ERROR_INVALID_IP = 'Login again';\nvar ERROR_TOKEN_EXPIRED = 'Token is expired';\nvar ERROR_INACTIVE = 'Inactive';\n\nvar getMessage = function getMessage() {\n  var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var indexOfError = message.indexOf(ERROR_DENIED);\n  var errorMessage = message;\n\n  if (indexOfError === 0) {\n    errorMessage = message.substring(ERROR_DENIED.length);\n  }\n\n  switch (errorMessage) {\n    case ERROR_TOKEN_EXPIRED:\n      return STRINGS.LOGOUT_ERROR_TOKEN_EXPIRED;\n\n    case ERROR_INVALID_IP:\n      return STRINGS.LOGOUT_ERROR_LOGIN_AGAIN;\n\n    case ERROR_INACTIVE:\n      return STRINGS.LOGOUT_ERROR_INACTIVE;\n\n    case ERROR_INVALID_TOKEN:\n    default:\n      return STRINGS.LOGOUT_ERROR_INVALID_TOKEN;\n  }\n};\n\nvar LogoutNotification = function LogoutNotification(_ref) {\n  var data = _ref.data,\n      onClose = _ref.onClose;\n  return React.createElement(NotificationWraper, {\n    title: STRINGS.LOGOUT_TITLE,\n    icon: ICONS.SESSION_TIMED_OUT,\n    className: \"logout-notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(NotificationContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, getMessage(data.message)), React.createElement(Button, {\n    label: STRINGS.CLOSE_TEXT,\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default LogoutNotification;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Notification/Logout.js"],"names":["React","Button","ICONS","NotificationWraper","NotificationContent","STRINGS","ERROR_DENIED","ERROR_INVALID_TOKEN","ERROR_INVALID_IP","ERROR_TOKEN_EXPIRED","ERROR_INACTIVE","getMessage","message","indexOfError","indexOf","errorMessage","substring","length","LOGOUT_ERROR_TOKEN_EXPIRED","LOGOUT_ERROR_LOGIN_AGAIN","LOGOUT_ERROR_INACTIVE","LOGOUT_ERROR_INVALID_TOKEN","LogoutNotification","data","onClose","LOGOUT_TITLE","SESSION_TIMED_OUT","CLOSE_TEXT"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,gBAAxD;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,IAAMC,YAAY,GAAG,gBAArB;AACA,IAAMC,mBAAmB,GAAG,eAA5B;AACA,IAAMC,gBAAgB,GAAG,aAAzB;AACA,IAAMC,mBAAmB,GAAG,kBAA5B;AACA,IAAMC,cAAc,GAAG,UAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkB;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AACpC,MAAMC,YAAY,GAAGD,OAAO,CAACE,OAAR,CAAgBR,YAAhB,CAArB;AACA,MAAIS,YAAY,GAAGH,OAAnB;;AACA,MAAIC,YAAY,KAAK,CAArB,EAAwB;AACvBE,IAAAA,YAAY,GAAGH,OAAO,CAACI,SAAR,CAAkBV,YAAY,CAACW,MAA/B,CAAf;AACA;;AAED,UAAQF,YAAR;AACC,SAAKN,mBAAL;AACC,aAAOJ,OAAO,CAACa,0BAAf;;AACD,SAAKV,gBAAL;AACC,aAAOH,OAAO,CAACc,wBAAf;;AACD,SAAKT,cAAL;AACC,aAAOL,OAAO,CAACe,qBAAf;;AACD,SAAKb,mBAAL;AACA;AACC,aAAOF,OAAO,CAACgB,0BAAf;AATF;AAWA,CAlBD;;AAoBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACjD,SACC,oBAAC,kBAAD;AACC,IAAA,KAAK,EAAEnB,OAAO,CAACoB,YADhB;AAEC,IAAA,IAAI,EAAEvB,KAAK,CAACwB,iBAFb;AAGC,IAAA,SAAS,EAAC,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBf,UAAU,CAACY,IAAI,CAACX,OAAN,CAAhC,CALD,EAMC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEP,OAAO,CAACsB,UAAvB;AAAmC,IAAA,OAAO,EAAEH,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD;AAUA,CAXD;;AAaA,eAAeF,kBAAf","sourcesContent":["import React from 'react';\nimport { Button } from '../';\nimport { ICONS } from '../../config/constants';\nimport { NotificationWraper, NotificationContent } from './Notification';\n\nimport STRINGS from '../../config/localizedStrings';\n\nconst ERROR_DENIED = 'Error Denied: ';\nconst ERROR_INVALID_TOKEN = 'Invalid token';\nconst ERROR_INVALID_IP = 'Login again';\nconst ERROR_TOKEN_EXPIRED = 'Token is expired';\nconst ERROR_INACTIVE = 'Inactive';\n\nconst getMessage = (message = '') => {\n\tconst indexOfError = message.indexOf(ERROR_DENIED);\n\tlet errorMessage = message;\n\tif (indexOfError === 0) {\n\t\terrorMessage = message.substring(ERROR_DENIED.length);\n\t}\n\n\tswitch (errorMessage) {\n\t\tcase ERROR_TOKEN_EXPIRED:\n\t\t\treturn STRINGS.LOGOUT_ERROR_TOKEN_EXPIRED;\n\t\tcase ERROR_INVALID_IP:\n\t\t\treturn STRINGS.LOGOUT_ERROR_LOGIN_AGAIN;\n\t\tcase ERROR_INACTIVE:\n\t\t\treturn STRINGS.LOGOUT_ERROR_INACTIVE;\n\t\tcase ERROR_INVALID_TOKEN:\n\t\tdefault:\n\t\t\treturn STRINGS.LOGOUT_ERROR_INVALID_TOKEN;\n\t}\n};\n\nconst LogoutNotification = ({ data, onClose }) => {\n\treturn (\n\t\t<NotificationWraper\n\t\t\ttitle={STRINGS.LOGOUT_TITLE}\n\t\t\ticon={ICONS.SESSION_TIMED_OUT}\n\t\t\tclassName=\"logout-notification\"\n\t\t>\n\t\t\t<NotificationContent>{getMessage(data.message)}</NotificationContent>\n\t\t\t<Button label={STRINGS.CLOSE_TEXT} onClick={onClose} />\n\t\t</NotificationWraper>\n\t);\n};\n\nexport default LogoutNotification;\n"]},"metadata":{},"sourceType":"module"}