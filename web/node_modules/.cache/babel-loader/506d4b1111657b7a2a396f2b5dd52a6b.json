{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/RequestResetPassword/index.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { SubmissionError } from 'redux-form';\nimport { isMobile } from 'react-device-detect';\nimport { requestResetPassword } from '../../actions/authAction';\nimport ResetPasswordForm, { generateFormFields } from './ResetPasswordForm';\nimport { IconTitle, Dialog, MobileBarBack } from '../../components';\nimport { ContactForm } from '../';\nimport { FLEX_CENTER_CLASSES, ICONS } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport RequestResetPasswordSuccess from './RequestResetPasswordSuccess';\n\nvar RequestResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestResetPassword, _Component);\n\n  function RequestResetPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RequestResetPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RequestResetPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      success: false,\n      showContactForm: false,\n      formFields: generateFormFields()\n    };\n\n    _this.onSubmitRequestResetPassword = function (values) {\n      return requestResetPassword(values).then(function (res) {\n        _this.setState({\n          success: true\n        });\n      }).catch(function (error) {\n        if (error.response && error.response.status === 404) {\n          _this.setState({\n            success: true\n          });\n        } else {\n          var errors = {};\n\n          if (error.response) {\n            var _error$response$data$ = error.response.data.message,\n                message = _error$response$data$ === void 0 ? '' : _error$response$data$;\n            errors._error = message || error.message;\n          } else {\n            errors._error = error.message;\n          }\n\n          throw new SubmissionError(errors);\n        }\n      });\n    };\n\n    _this.onOpenDialog = function () {\n      _this.setState({\n        showContactForm: true\n      });\n    };\n\n    _this.onCloseDialog = function () {\n      _this.setState({\n        showContactForm: false\n      });\n    };\n\n    _this.onClickLogin = function () {\n      _this.props.router.replace('login');\n    };\n\n    _this.onGoBack = function () {\n      _this.props.router.push(\"/login\");\n    };\n\n    _this.accountRecovery = function () {\n      _this.setState({\n        success: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RequestResetPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          languageClasses = _this$props.languageClasses,\n          activeTheme = _this$props.activeTheme;\n      var _this$state = this.state,\n          success = _this$state.success,\n          showContactForm = _this$state.showContactForm,\n          formFields = _this$state.formFields;\n      return React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'f-1'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, isMobile && !showContactForm && React.createElement(MobileBarBack, {\n        onBackClick: success ? this.accountRecovery : this.onGoBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), success ? React.createElement(RequestResetPasswordSuccess, {\n        onLoginClick: this.onClickLogin,\n        onContactUs: this.onOpenDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'auth_wrapper', 'w-100'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(IconTitle, {\n        iconPath: ICONS.ACCOUNT_RECOVERY,\n        text: STRINGS.REQUEST_RESET_PASSWORD.TITLE,\n        textType: \"title\",\n        underline: true,\n        useSvg: true,\n        className: \"w-100\",\n        subtitle: STRINGS.REQUEST_RESET_PASSWORD.SUBTITLE,\n        actionProps: {\n          text: STRINGS.REQUEST_RESET_PASSWORD.SUPPORT,\n          iconPath: ICONS.BLUE_QUESTION,\n          onClick: this.onOpenDialog,\n          useSvg: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'auth_form-wrapper', 'w-100'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(ResetPasswordForm, {\n        onSubmit: this.onSubmitRequestResetPassword,\n        formFields: formFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        isOpen: showContactForm,\n        label: \"contact-modal\",\n        onCloseDialog: this.onCloseDialog,\n        shouldCloseOnOverlayClick: false,\n        style: {\n          'z-index': 100\n        },\n        className: classnames(languageClasses),\n        showCloseText: false,\n        theme: activeTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(ContactForm, {\n        onSubmitSuccess: this.onCloseDialog,\n        onClose: this.onCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RequestResetPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    activeTheme: store.app.theme\n  };\n};\n\nexport default connect(mapStateToProps)(RequestResetPassword);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/RequestResetPassword/index.js"],"names":["React","Component","classnames","connect","SubmissionError","isMobile","requestResetPassword","ResetPasswordForm","generateFormFields","IconTitle","Dialog","MobileBarBack","ContactForm","FLEX_CENTER_CLASSES","ICONS","STRINGS","RequestResetPasswordSuccess","RequestResetPassword","state","success","showContactForm","formFields","onSubmitRequestResetPassword","values","then","res","setState","catch","error","response","status","errors","data","message","_error","onOpenDialog","onCloseDialog","onClickLogin","props","router","replace","onGoBack","push","accountRecovery","languageClasses","activeTheme","ACCOUNT_RECOVERY","REQUEST_RESET_PASSWORD","TITLE","SUBTITLE","text","SUPPORT","iconPath","BLUE_QUESTION","onClick","useSvg","mapStateToProps","store","app","theme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { SubmissionError } from 'redux-form';\nimport { isMobile } from 'react-device-detect';\nimport { requestResetPassword } from '../../actions/authAction';\nimport ResetPasswordForm, { generateFormFields } from './ResetPasswordForm';\nimport { IconTitle, Dialog, MobileBarBack } from '../../components';\nimport { ContactForm } from '../';\nimport { FLEX_CENTER_CLASSES, ICONS } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport RequestResetPasswordSuccess from './RequestResetPasswordSuccess';\n\nclass RequestResetPassword extends Component {\n\tstate = {\n\t\tsuccess: false,\n\t\tshowContactForm: false,\n\t\tformFields: generateFormFields()\n\t};\n\n\tonSubmitRequestResetPassword = (values) => {\n\t\treturn requestResetPassword(values)\n\t\t\t.then((res) => {\n\t\t\t\tthis.setState({ success: true });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.response && error.response.status === 404) {\n\t\t\t\t\tthis.setState({ success: true });\n\t\t\t\t} else {\n\t\t\t\t\tconst errors = {};\n\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\tconst { message = '' } = error.response.data;\n\t\t\t\t\t\terrors._error = message || error.message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors._error = error.message;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new SubmissionError(errors);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tonOpenDialog = () => {\n\t\tthis.setState({ showContactForm: true });\n\t};\n\n\tonCloseDialog = () => {\n\t\tthis.setState({ showContactForm: false });\n\t};\n\n\tonClickLogin = () => {\n\t\tthis.props.router.replace('login');\n\t};\n\t\n\tonGoBack = () => {\n\t\tthis.props.router.push(`/login`);\n\t};\n\n\taccountRecovery = () => {\n\t\tthis.setState({ success: false });\n\t}\n\n\trender() {\n\t\tconst { languageClasses, activeTheme } = this.props;\n\t\tconst { success, showContactForm, formFields } = this.state;\n\n\t\treturn (\n\t\t\t<div className={classnames(...FLEX_CENTER_CLASSES, 'flex-column', 'f-1')}>\n\t\t\t\t{isMobile && !showContactForm && <MobileBarBack  onBackClick={success ? this.accountRecovery : this.onGoBack}>\n\t\t\t\t</MobileBarBack>}\n\t\t\t\t{success ? (\n\t\t\t\t\t<RequestResetPasswordSuccess\n\t\t\t\t\t\tonLoginClick={this.onClickLogin}\n\t\t\t\t\t\tonContactUs={this.onOpenDialog}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t...FLEX_CENTER_CLASSES,\n\t\t\t\t\t\t\t'flex-column',\n\t\t\t\t\t\t\t'auth_wrapper',\n\t\t\t\t\t\t\t'w-100'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconTitle\n\t\t\t\t\t\t\ticonPath={ICONS.ACCOUNT_RECOVERY}\n\t\t\t\t\t\t\ttext={STRINGS.REQUEST_RESET_PASSWORD.TITLE}\n\t\t\t\t\t\t\ttextType=\"title\"\n\t\t\t\t\t\t\tunderline={true}\n\t\t\t\t\t\t\tuseSvg={true}\n\t\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\t\tsubtitle={STRINGS.REQUEST_RESET_PASSWORD.SUBTITLE}\n\t\t\t\t\t\t\tactionProps={{\n\t\t\t\t\t\t\t\ttext: STRINGS.REQUEST_RESET_PASSWORD.SUPPORT,\n\t\t\t\t\t\t\t\ticonPath: ICONS.BLUE_QUESTION,\n\t\t\t\t\t\t\t\tonClick: this.onOpenDialog,\n\t\t\t\t\t\t\t\tuseSvg: true\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t\t...FLEX_CENTER_CLASSES,\n\t\t\t\t\t\t\t\t'flex-column',\n\t\t\t\t\t\t\t\t'auth_form-wrapper',\n\t\t\t\t\t\t\t\t'w-100'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ResetPasswordForm\n\t\t\t\t\t\t\t\tonSubmit={this.onSubmitRequestResetPassword}\n\t\t\t\t\t\t\t\tformFields={formFields}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpen={showContactForm}\n\t\t\t\t\tlabel=\"contact-modal\"\n\t\t\t\t\tonCloseDialog={this.onCloseDialog}\n\t\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\t\tstyle={{ 'z-index': 100 }}\n\t\t\t\t\tclassName={classnames(languageClasses)}\n\t\t\t\t\tshowCloseText={false}\n\t\t\t\t\ttheme={activeTheme}\n\t\t\t\t>\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\tonSubmitSuccess={this.onCloseDialog}\n\t\t\t\t\t\tonClose={this.onCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tactiveTheme: store.app.theme\n});\n\nexport default connect(mapStateToProps)(RequestResetPassword);\n"]},"metadata":{},"sourceType":"module"}