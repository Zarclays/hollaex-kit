{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/CheckTitle/index.js\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport ReactSVG from 'react-svg';\nimport { ICONS, FLEX_CENTER_CLASSES } from '../../config/constants';\nexport var renderStatusIcon = function renderStatusIcon() {\n  var statusCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n\n  switch (statusCode) {\n    case -1:\n      return null;\n\n    case 0:\n      return React.createElement(ReactSVG, {\n        path: ICONS.VERIFICATION_INCOMPLETE,\n        wrapperClassName: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n\n    case 1:\n      return React.createElement(ReactSVG, {\n        path: ICONS.VERIFICATION_PENDING,\n        wrapperClassName: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n\n    case 2:\n      return React.createElement(ReactSVG, {\n        path: ICONS.VERIFICATION_REJECTED,\n        wrapperClassName: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n\n    case 3:\n      return React.createElement(ReactSVG, {\n        path: ICONS.VERIFICATION_VERIFIED,\n        wrapperClassName: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n\n    default:\n      return React.createElement(ReactSVG, {\n        path: ICONS.VERIFICATION_INCOMPLETE,\n        wrapperClassName: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n  }\n};\n\nvar CheckTitle = function CheckTitle(_ref) {\n  var title = _ref.title,\n      icon = _ref.icon,\n      notifications = _ref.notifications,\n      className = _ref.className,\n      titleClassName = _ref.titleClassName,\n      _ref$statusCode = _ref.statusCode,\n      statusCode = _ref$statusCode === void 0 ? -1 : _ref$statusCode;\n  var notificationStatus = renderStatusIcon(statusCode, \"verification-stauts\");\n  return React.createElement(\"div\", {\n    className: classnames('check_title-container', className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"verification-status-container w-100 d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, !!notificationStatus ? notificationStatus : React.createElement(\"div\", {\n    className: \"empty-notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), title && React.createElement(\"div\", {\n    className: classnames('check_title-label', titleClassName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"check_title-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, icon && (icon.indexOf('.svg') > 0 ? React.createElement(ReactSVG, {\n    path: icon,\n    wrapperClassName: \"check_title-svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    alt: icon,\n    src: icon,\n    className: \"check_title-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), !!notifications && React.createElement(\"div\", {\n    className: \"check_title-notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, notifications)));\n};\n\nCheckTitle.defaultProps = {\n  title: '',\n  status: '',\n  notifications: '',\n  className: '',\n  titleClassName: ''\n};\nexport var PanelInformationRow = function PanelInformationRow(_ref2) {\n  var _ref2$label = _ref2.label,\n      label = _ref2$label === void 0 ? '' : _ref2$label,\n      _ref2$information = _ref2.information,\n      information = _ref2$information === void 0 ? '' : _ref2$information,\n      className = _ref2.className,\n      _ref2$bold = _ref2.bold,\n      bold = _ref2$bold === void 0 ? true : _ref2$bold,\n      _ref2$disable = _ref2.disable,\n      disable = _ref2$disable === void 0 ? false : _ref2$disable;\n  return React.createElement(\"div\", {\n    className: classnames('d-flex', 'justify-content-start', 'align-items-center', 'panel-information-row', className, {\n      'panel-information-row-disable': disable\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      wordBreak: 'normal'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, bold ? React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, label) : label, \": \", React.createElement(\"span\", {\n    className: \"information-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, information)));\n};\nexport var CustomTabs = function CustomTabs(_ref3) {\n  var title = _ref3.title,\n      icon = _ref3.icon,\n      notifications = _ref3.notifications,\n      className = _ref3.className,\n      _ref3$statusCode = _ref3.statusCode,\n      statusCode = _ref3$statusCode === void 0 ? -1 : _ref3$statusCode;\n  var notificationStatus = renderStatusIcon(statusCode, \"verification-stauts\");\n  return React.createElement(\"div\", {\n    className: classnames('check_title-container', className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"check_title-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"verification-status-container w-100 d-flex justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, !!notificationStatus ? notificationStatus : React.createElement(\"div\", {\n    className: \"empty-notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), icon && (icon.indexOf('.svg') > 0 ? React.createElement(ReactSVG, {\n    path: icon,\n    wrapperClassName: \"custom_title-svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    alt: icon,\n    src: icon,\n    className: \"custom_title-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), !!notifications && React.createElement(\"div\", {\n    className: \"check_title-notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, notifications)), title && React.createElement(\"div\", {\n    className: classnames('custom_title-label', {\n      'title-inactive': false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, title));\n};\n\nvar status = function status(key) {\n  switch (key) {\n    case -1:\n      return '';\n\n    case 0:\n      return 'Incompleted';\n\n    case 1:\n      return 'Pending';\n\n    case 2:\n      return 'Rejected';\n\n    case 3:\n      return 'Verified';\n\n    default:\n      return 'Incompleted';\n  }\n};\n\nexport var CustomMobileTabs = function CustomMobileTabs(_ref4) {\n  var title = _ref4.title,\n      icon = _ref4.icon,\n      _ref4$statusCode = _ref4.statusCode,\n      statusCode = _ref4$statusCode === void 0 ? -1 : _ref4$statusCode;\n  var statusText = status(statusCode);\n  var statusIcon = renderStatusIcon(statusCode, \"custom_tab_status-icon ml-1\");\n  return React.createElement(\"div\", {\n    className: classnames(\"d-flex\", \"justify-content-between\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(ReactSVG, {\n    path: icon,\n    wrapperClassName: \"custom_tab_icon-mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classnames(FLEX_CENTER_CLASSES, \"mobile-tab-title\", \"ml-3\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, title)), React.createElement(\"div\", {\n    className: classnames(FLEX_CENTER_CLASSES, statusText.toLowerCase()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, !!statusText ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, statusText) : null, !!statusIcon ? statusIcon : null));\n};\nexport default CheckTitle;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/CheckTitle/index.js"],"names":["React","classnames","ReactSVG","ICONS","FLEX_CENTER_CLASSES","renderStatusIcon","statusCode","className","VERIFICATION_INCOMPLETE","VERIFICATION_PENDING","VERIFICATION_REJECTED","VERIFICATION_VERIFIED","CheckTitle","title","icon","notifications","titleClassName","notificationStatus","indexOf","defaultProps","status","PanelInformationRow","label","information","bold","disable","wordBreak","CustomTabs","key","CustomMobileTabs","statusText","statusIcon","toLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport ReactSVG from 'react-svg';\n\nimport { ICONS, FLEX_CENTER_CLASSES } from '../../config/constants';\n\nexport const renderStatusIcon = (statusCode = -1, className = \"\") => {\n\n\tswitch (statusCode) {\n\t\tcase -1:\n\t\t\treturn null;\n\t\tcase 0:\n\t\t\treturn <ReactSVG path={ICONS.VERIFICATION_INCOMPLETE} wrapperClassName={className} />;\n\t\tcase 1:\n\t\t\treturn <ReactSVG path={ICONS.VERIFICATION_PENDING} wrapperClassName={className} />;\n\t\tcase 2:\n\t\t\treturn <ReactSVG path={ICONS.VERIFICATION_REJECTED} wrapperClassName={className} />;\n\t\tcase 3:\n\t\t\treturn <ReactSVG path={ICONS.VERIFICATION_VERIFIED} wrapperClassName={className} />;\n\t\tdefault:\n\t\t\treturn <ReactSVG path={ICONS.VERIFICATION_INCOMPLETE} wrapperClassName={className} />;\n\t}\n};\n\nconst CheckTitle = ({\n\ttitle,\n\ticon,\n\tnotifications,\n\tclassName,\n\ttitleClassName,\n\tstatusCode = -1\n}) => {\n\tlet notificationStatus = renderStatusIcon(statusCode, \"verification-stauts\");\n\treturn (\n\t\t<div className={classnames('check_title-container', className)}>\n\t\t\t<div className='verification-status-container w-100 d-flex justify-content-end'>\n\t\t\t\t{!!notificationStatus\n\t\t\t\t\t? notificationStatus\n\t\t\t\t\t: <div className=\"empty-notification\"></div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{title && (\n\t\t\t\t<div className={classnames('check_title-label', titleClassName)}>\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className=\"check_title-icon\">\n\t\t\t\t{icon &&\n\t\t\t\t\t(icon.indexOf('.svg') > 0 ? (\n\t\t\t\t\t\t<ReactSVG path={icon} wrapperClassName=\"check_title-svg\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<img alt={icon} src={icon} className=\"check_title-img\" />\n\t\t\t\t\t))}\n\t\t\t\t{!!notifications && (\n\t\t\t\t\t<div className=\"check_title-notification\">{notifications}</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nCheckTitle.defaultProps = {\n\ttitle: '',\n\tstatus: '',\n\tnotifications: '',\n\tclassName: '',\n\ttitleClassName: ''\n};\n\nexport const PanelInformationRow = ({\n\tlabel = '',\n\tinformation = '',\n\tclassName,\n\tbold = true,\n\tdisable = false\n}) => (\n\t<div\n\t\tclassName={classnames(\n\t\t\t'd-flex',\n\t\t\t'justify-content-start',\n\t\t\t'align-items-center',\n\t\t\t'panel-information-row',\n\t\t\tclassName,\n\t\t\t{ 'panel-information-row-disable': disable }\n\t\t)}\n\t>\n\t\t<span style={{ wordBreak: 'normal' }}>\n\t\t\t{bold ? <b>{label}</b> : label}: <span className='information-content'>{information}</span>\n\t\t</span>\n\t</div>\n);\n\nexport const CustomTabs = ({\n\ttitle,\n\ticon,\n\tnotifications,\n\tclassName,\n\tstatusCode = -1\n}) => {\n\tlet notificationStatus = renderStatusIcon(statusCode, \"verification-stauts\");\n\treturn (\n\t\t<div className={classnames('check_title-container', className)}>\n\t\t\t<div className=\"check_title-icon\">\n\t\t\t\t<div className='verification-status-container w-100 d-flex justify-content-end'>\n\t\t\t\t\t{!!notificationStatus\n\t\t\t\t\t\t? notificationStatus\n\t\t\t\t\t\t: <div className=\"empty-notification\"></div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{icon &&\n\t\t\t\t\t(icon.indexOf('.svg') > 0 ? (\n\t\t\t\t\t\t<ReactSVG path={icon} wrapperClassName=\"custom_title-svg\" />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<img alt={icon} src={icon} className=\"custom_title-img\" />\n\t\t\t\t\t\t))}\n\t\t\t\t{!!notifications && (\n\t\t\t\t\t<div className=\"check_title-notification\">{notifications}</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{title && (\n\t\t\t\t<div className={classnames('custom_title-label', { 'title-inactive': false })}>\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst status = (key) => {\n\tswitch (key) {\n\t\tcase -1:\n\t\t\treturn '';\n\t\tcase 0:\n\t\t\treturn 'Incompleted';\n\t\tcase 1:\n\t\t\treturn 'Pending';\n\t\tcase 2:\n\t\t\treturn 'Rejected';\n\t\tcase 3:\n\t\t\treturn 'Verified';\n\t\tdefault:\n\t\t\treturn 'Incompleted';\n\t}\n}\n\nexport const CustomMobileTabs = ({ title, icon, statusCode = -1 }) => {\n\tconst statusText = status(statusCode);\n\tconst statusIcon = renderStatusIcon(statusCode, \"custom_tab_status-icon ml-1\");\n\treturn (\n\t\t<div className={\n\t\t\tclassnames(\n\t\t\t\t\"d-flex\",\n\t\t\t\t\"justify-content-between\"\n\t\t\t)}\n\t\t>\n\t\t\t<div className=\"d-flex\">\n\t\t\t\t<ReactSVG\n\t\t\t\t\tpath={icon}\n\t\t\t\t\twrapperClassName=\"custom_tab_icon-mobile\"\n\t\t\t\t/>\n\t\t\t\t<div className={classnames(FLEX_CENTER_CLASSES, \"mobile-tab-title\", \"ml-3\")}>\n\t\t\t\t\t{title}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={\n\t\t\t\tclassnames(\n\t\t\t\t\tFLEX_CENTER_CLASSES,\n\t\t\t\t\tstatusText.toLowerCase()\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{!!statusText ? <div>{statusText}</div> : null}\n\t\t\t\t{!!statusIcon ? statusIcon : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CheckTitle;\n"]},"metadata":{},"sourceType":"module"}