{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Chart/Charts/BarChart.js\";\nimport React, { Component } from 'react';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { axisBottom, axisRight } from 'd3-axis';\nimport * as d3 from 'd3-selection';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { ICONS, BAR_CHART_LIMIT_CAPACITY, BASE_CURRENCY } from '../../../config/constants';\nimport { formatToCurrency, formatAverage, formatBtcAmount } from '../../../utils/currency';\n\nfunction translate(x, y) {\n  return \"translate(\".concat(x, \", \").concat(y, \")\");\n}\n\n;\n\nvar BarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarChart, _Component);\n\n  function BarChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BarChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      margin: 60,\n      width: 0,\n      height: 0,\n      chartData: {}\n    };\n\n    _this.generateChart = function (chartData, limitContent, peakVolume) {\n      var _this$props = _this.props,\n          yAxisLimits = _this$props.yAxisLimits,\n          activeTheme = _this$props.activeTheme;\n      var _this$state = _this.state,\n          margin = _this$state.margin,\n          height = _this$state.height,\n          width = _this$state.width;\n      var SvgElement = d3.select(_this.BarSVG);\n      var upperLimit = peakVolume || yAxisLimits[yAxisLimits.length - 1];\n      var currentMonth = moment().month();\n\n      if (SvgElement) {\n        var tooltip = d3.select('body').append(\"div\").attr('class', activeTheme === 'dark' ? 'bar-tooltip-dark' : 'bar-tooltip').style(\"display\", \"none\");\n        var chart = SvgElement.append('g').attr('transform', translate(10, margin));\n        var yScale = scaleLinear().range([height, 0]).domain([0, upperLimit]);\n        var xScale = scaleBand().range([0, width]).domain(chartData.map(function (s) {\n          return s.month;\n        })).padding(0.2);\n        chart.append('g').attr('class', 'bar_yAxis').attr('transform', translate(width, 0)).call(axisRight().scale(yScale).ticks(3).tickValues([0].concat(_toConsumableArray(yAxisLimits))).tickSize(-width).tickFormat(function (d) {\n          return d !== 0 && upperLimit <= BAR_CHART_LIMIT_CAPACITY[1] ? formatAverage(d).toUpperCase() : '';\n        })).call(function (g) {\n          return g.select('.domain').remove();\n        });\n        chart.append('g').attr('class', 'bar_xAxis').attr('transform', translate(0, height)).call(axisBottom(xScale));\n        chart.select('.bar_xAxis path').attr('d', \"M0.5,1V0.5H\".concat(width, \".5V1\"));\n        chart.selectAll('.bar_xAxis .tick text').call(function (t) {\n          t.each(function (d, key, node) {\n            var data = chartData[key];\n            var totalTxt = data.key - 1 === currentMonth ? 'Pending' : data.total !== 0 ? formatAverage(data.total).toUpperCase() : '';\n            var self = d3.select(node[key]);\n            self.text('');\n            self.append(\"tspan\").attr(\"class\", data.total >= yAxisLimits[0] ? 'axis_month axis_month-active' : 'axis_month').attr(\"x\", 0).attr(\"dy\", \".8em\").text(d);\n            self.append(\"tspan\").attr(\"class\", data.total >= yAxisLimits[0] ? 'axis_month-total axis_month-total-active' : 'axis_month-total').attr(\"x\", 2).attr(\"dy\", \"1.3em\").text(totalTxt);\n          });\n        });\n        chart.selectAll('.bar_yAxis .tick text').call(function (t) {\n          t.each(function (d, key, node) {\n            var self = d3.select(node[key]);\n            self.attr(\"x\", 10);\n\n            if (d !== 0) {\n              chart.append('svg').attr(\"class\", \"bar_axis_triangle\").attr('x', width).attr('y', yScale(d) - 5).append('path').attr(\"d\", \"M 2 5 L 7 1 L 7 10 L 2 5\");\n            }\n          });\n        });\n\n        if (limitContent.length && upperLimit <= BAR_CHART_LIMIT_CAPACITY[0]) {\n          yAxisLimits.map(function (limits, index) {\n            var content = limitContent[index];\n\n            if (content) {\n              var scale = yScale(limits) + yScale(limits) * 0.01;\n              var scaleTxt = scale + (32 + index * 10);\n\n              if (content.icon) {\n                chart.append('svg').append(\"svg:image\").attr(\"xlink:href\", content.icon).attr('class', 'limit_contnet-icon').attr('x', width + 15).attr('y', scale).attr('viewBox', '0 0 1024 1024').attr('width', '3rem');\n              }\n\n              if (content.text) {\n                chart.append('foreignObject').attr('x', width + 15).attr('y', scaleTxt).attr('width', '6rem').append('xhtml:div').attr('class', 'limit_content-text').html(\"<span>\".concat(content.text, \"</span>\"));\n              }\n            }\n\n            return 0;\n          });\n        }\n\n        var bars = chart.selectAll().data(chartData).enter();\n        bars.each(function (d, key, node) {\n          var barEnter = d3.select(node[key]);\n          var barKeys = Object.keys(d.pairWisePrice);\n          var count = 0;\n\n          if (d.key - 1 === currentMonth) {\n            barEnter.append(\"svg:image\").attr(\"xlink:href\", activeTheme === 'dark' ? ICONS.VOLUME_PENDING_DARK : ICONS.VOLUME_PENDING).attr('class', 'bar_pending-icon').attr('x', xScale(d.month) + 5).attr('y', yScale(0) - 20).attr('viewBox', '0 0 1024 1024').attr('height', 18).attr('width', xScale.bandwidth());\n          } else {\n            barKeys.map(function (pair) {\n              barEnter.append('rect').attr('class', \"chart_\".concat(pair)).attr('x', xScale(d.month)).attr('y', function (s) {\n                count += d.pairWisePrice[pair];\n                return yScale(count);\n              }).attr('height', function (s) {\n                var total = d.pairWisePrice[pair];\n                return height - yScale(total);\n              }).attr('width', xScale.bandwidth()).on(\"mouseover\", function (d) {\n                var currencyFormat = _this.props.coins[pair] || {};\n                var baseFormat = _this.props.coins[BASE_CURRENCY] || {\n                  symbol: ''\n                };\n                var volume = currencyFormat ? formatToCurrency(d.pairVolume[pair], currencyFormat.min) : formatBtcAmount(d.pairVolume[pair]);\n                tooltip.selectAll(\"*\").remove();\n                tooltip.style(\"display\", \"block\").style(\"top\", d3.event.pageY - 10 + \"px\").style(\"left\", d3.event.pageX + 10 + \"px\").append('div').attr('class', 'tool_tip-pair-volume').text(\"\".concat(pair.toUpperCase(), \": \").concat(formatAverage(volume)));\n                tooltip.append('div').attr('class', 'tool_tip-pair-price').text(\"~ \".concat(baseFormat.symbol.toUpperCase(), \": \").concat(formatAverage(formatToCurrency(d.pairWisePrice[pair], baseFormat.min))));\n              }).on(\"mousemove\", function () {\n                return tooltip.style(\"top\", d3.event.pageY - 10 + \"px\").style(\"left\", d3.event.pageX + 10 + \"px\");\n              }).on(\"mouseout\", function () {\n                return tooltip.style(\"display\", \"none\");\n              });\n              return 0;\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var donutContainer = document.getElementById(\"bar-container\");\n      var rect = donutContainer.getBoundingClientRect();\n      this.setState({\n        width: rect.width - 120,\n        height: rect.height - 130\n      }, function () {\n        if (!_this2.props.loading) {\n          _this2.generateChart(_this2.props.chartData, _this2.props.limitContent);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(this.props.chartData) !== JSON.stringify(nextProps.chartData) && !nextProps.loading) {\n        this.generateChart(nextProps.chartData, nextProps.limitContent, nextProps.peakVolume);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        id: \"bar-container\",\n        className: \"bar_wrapper w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"svg\", {\n        ref: function ref(el) {\n          _this3.BarSVG = el;\n        },\n        width: \"100%\",\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    coins: state.app.coins\n  };\n};\n\nBarChart.defaultProps = {\n  loading: false\n};\nexport default connect(mapStateToProps)(BarChart);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Chart/Charts/BarChart.js"],"names":["React","Component","scaleLinear","scaleBand","axisBottom","axisRight","d3","moment","connect","ICONS","BAR_CHART_LIMIT_CAPACITY","BASE_CURRENCY","formatToCurrency","formatAverage","formatBtcAmount","translate","x","y","BarChart","state","margin","width","height","chartData","generateChart","limitContent","peakVolume","props","yAxisLimits","activeTheme","SvgElement","select","BarSVG","upperLimit","length","currentMonth","month","tooltip","append","attr","style","chart","yScale","range","domain","xScale","map","s","padding","call","scale","ticks","tickValues","tickSize","tickFormat","d","toUpperCase","g","remove","selectAll","t","each","key","node","data","totalTxt","total","self","text","limits","index","content","scaleTxt","icon","html","bars","enter","barEnter","barKeys","Object","keys","pairWisePrice","count","VOLUME_PENDING_DARK","VOLUME_PENDING","bandwidth","pair","on","currencyFormat","coins","baseFormat","symbol","volume","pairVolume","min","event","pageY","pageX","donutContainer","document","getElementById","rect","getBoundingClientRect","setState","loading","nextProps","JSON","stringify","el","mapStateToProps","app","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport { axisBottom, axisRight} from 'd3-axis';\nimport * as d3 from 'd3-selection';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\n\nimport { ICONS, BAR_CHART_LIMIT_CAPACITY, BASE_CURRENCY } from '../../../config/constants';\nimport { formatToCurrency, formatAverage, formatBtcAmount } from '../../../utils/currency';\n\nfunction translate(x, y) {\n    return `translate(${x}, ${y})`;\n};\n\nclass BarChart extends Component {\n    state = {\n        margin: 60,\n        width: 0,\n        height: 0,\n        chartData: {}\n    }\n\n    componentDidMount() {\n        const donutContainer = document.getElementById(\"bar-container\");\n        const rect = donutContainer.getBoundingClientRect();\n        this.setState({ width: (rect.width - 120), height: (rect.height - 130) }, () => {\n            if (!this.props.loading) {\n                this.generateChart(this.props.chartData, this.props.limitContent);\n            }\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (JSON.stringify(this.props.chartData) !== JSON.stringify(nextProps.chartData)\n            && !nextProps.loading) {\n            this.generateChart(nextProps.chartData, nextProps.limitContent, nextProps.peakVolume);\n        }\n    }\n\n    generateChart = (chartData, limitContent, peakVolume) => {\n        const { yAxisLimits, activeTheme } = this.props;\n        const { margin, height, width } = this.state;\n        const SvgElement = d3.select(this.BarSVG);\n        const upperLimit = peakVolume || yAxisLimits[yAxisLimits.length - 1];\n        const currentMonth = moment().month();\n        if (SvgElement) {\n            const tooltip = d3.select('body')\n                .append(\"div\")\n                .attr('class', activeTheme === 'dark' ? 'bar-tooltip-dark' : 'bar-tooltip')\n                .style(\"display\", \"none\");\n            const chart = SvgElement.append('g')\n                .attr('transform', translate(10, margin));\n            const yScale = scaleLinear()\n                .range([height, 0])\n                .domain([0, upperLimit]);\n            const xScale = scaleBand()\n                .range([0, width])\n                .domain(chartData.map((s) => s.month ))\n                .padding(0.2);\n            chart.append('g')\n                .attr('class', 'bar_yAxis')\n                .attr('transform', translate(width, 0))\n                .call(axisRight()\n                    .scale(yScale)\n                    .ticks(3)\n                    .tickValues([0, ...yAxisLimits])\n                    .tickSize(-width)\n                    .tickFormat(d =>\n                        d !== 0 && upperLimit <= BAR_CHART_LIMIT_CAPACITY[1]\n                            ? formatAverage(d).toUpperCase()\n                            : ''\n                    )\n                )\n                .call(g => g.select('.domain').remove());\n            chart.append('g')\n                .attr('class', 'bar_xAxis')\n                .attr('transform', translate(0, height))\n                .call(axisBottom(xScale));\n            chart.select('.bar_xAxis path')\n                .attr('d', `M0.5,1V0.5H${width}.5V1`);\n            chart.selectAll('.bar_xAxis .tick text')\n                .call((t) => {\n                    t.each((d, key, node) => {\n                        const data = chartData[key];\n                        const totalTxt = data.key - 1 === currentMonth\n                            ? 'Pending'\n                            : data.total !== 0\n                                ? formatAverage(data.total).toUpperCase()\n                                : '';\n                        const self = d3.select(node[key]);\n                        self.text('');\n                        self.append(\"tspan\")\n                            .attr(\"class\",\n                                data.total >= yAxisLimits[0]\n                                    ? 'axis_month axis_month-active'\n                                    : 'axis_month')\n                            .attr(\"x\", 0)\n                            .attr(\"dy\", \".8em\")\n                            .text(d);\n                        self.append(\"tspan\")\n                            .attr(\"class\",\n                                data.total >= yAxisLimits[0]\n                                    ? 'axis_month-total axis_month-total-active'\n                                    : 'axis_month-total')\n                            .attr(\"x\", 2)\n                            .attr(\"dy\", \"1.3em\")\n                            .text(totalTxt);\n                    })\n                });\n            chart.selectAll('.bar_yAxis .tick text')\n                .call((t) => {\n                    t.each((d, key, node) => {\n                        const self = d3.select(node[key]);\n                        self.attr(\"x\", 10);\n                        if (d !== 0) {\n                            chart.append('svg')\n                                .attr(\"class\", \"bar_axis_triangle\")\n                                .attr('x', width)\n                                .attr('y', yScale(d) - 5)\n                                .append('path')\n                                .attr(\"d\", \"M 2 5 L 7 1 L 7 10 L 2 5\")\n                        }\n                    })\n                });\n            if (limitContent.length && upperLimit <= BAR_CHART_LIMIT_CAPACITY[0]) {\n                yAxisLimits.map((limits, index) => {\n                    let content = limitContent[index];\n                    if (content) {\n                        let scale = yScale(limits) + (yScale(limits) * 0.01);\n                        let scaleTxt = scale + (32 + (index * 10));\n                        if (content.icon) {\n                            chart.append('svg')\n                                .append(\"svg:image\")\n                                .attr(\"xlink:href\", content.icon)\n                                .attr('class', 'limit_contnet-icon')\n                                .attr('x', width + 15)\n                                .attr('y', scale)\n                                .attr('viewBox', '0 0 1024 1024')\n                                .attr('width', '3rem');\n                        }\n                        if (content.text) {\n                            chart.append('foreignObject')\n                                .attr('x', width + 15)\n                                .attr('y', scaleTxt)\n                                .attr('width', '6rem')\n                                .append('xhtml:div')\n                                .attr('class', 'limit_content-text')\n                                .html(`<span>${content.text}</span>`);\n                        }\n                    }\n                    return 0;\n                });\n            }\n            const bars = chart.selectAll()\n                .data(chartData)\n                .enter();\n            bars.each((d, key, node) => {\n                let barEnter = d3.select(node[key]);\n                let barKeys = Object.keys(d.pairWisePrice);\n                let count = 0;\n                if (d.key - 1 === currentMonth) {\n                    barEnter.append(\"svg:image\")\n                        .attr(\"xlink:href\", activeTheme === 'dark'\n                            ? ICONS.VOLUME_PENDING_DARK : ICONS.VOLUME_PENDING)\n                        .attr('class', 'bar_pending-icon')\n                        .attr('x', (xScale(d.month) + 5))\n                        .attr('y', (yScale(0) - 20))\n                        .attr('viewBox', '0 0 1024 1024')\n                        .attr('height', 18)\n                        .attr('width', xScale.bandwidth());\n                } else {\n                    barKeys.map((pair) => {\n                        barEnter.append('rect')\n                            .attr('class', `chart_${pair}`)\n                            .attr('x', xScale(d.month))\n                            .attr('y', (s) => {\n                                count += d.pairWisePrice[pair];\n                                return yScale(count);\n                            })\n                            .attr('height', (s) => {\n                                let total = d.pairWisePrice[pair];\n                                return height - yScale(total);\n                            })\n                            .attr('width', xScale.bandwidth())\n                            .on(\"mouseover\", (d) => {\n                                let currencyFormat = this.props.coins[pair] || {};\n                                let baseFormat = this.props.coins[BASE_CURRENCY] || { symbol: '' };\n                                let volume = currencyFormat\n                                    ? formatToCurrency(d.pairVolume[pair], currencyFormat.min)\n                                    : formatBtcAmount(d.pairVolume[pair]);\n                                tooltip.selectAll(\"*\").remove();\n                                tooltip.style(\"display\", \"block\")\n                                    .style(\"top\", (d3.event.pageY - 10) + \"px\")\n                                    .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                                    .append('div')\n                                    .attr('class', 'tool_tip-pair-volume')\n                                    .text(`${pair.toUpperCase()}: ${formatAverage(volume)}`);\n                                tooltip.append('div')\n                                    .attr('class', 'tool_tip-pair-price')\n                                    .text(`~ ${baseFormat.symbol.toUpperCase()}: ${formatAverage(formatToCurrency(d.pairWisePrice[pair], baseFormat.min))}`);\n                            })\n                            .on(\"mousemove\", function () {\n                                return tooltip.style(\"top\", (d3.event.pageY - 10) + \"px\")\n                                    .style(\"left\", (d3.event.pageX + 10) + \"px\");\n                            })\n                            .on(\"mouseout\", function () {\n                                return tooltip.style(\"display\", \"none\");\n                            });\n                        return 0;\n                    });\n                }\n            });\n        }\n    };\n    \n    render() {\n        return (\n            <div id=\"bar-container\" className=\"bar_wrapper w-100\">\n                <svg ref={el => { this.BarSVG = el; }} width=\"100%\" height=\"100%\" />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    coins: state.app.coins\n});\n\nBarChart.defaultProps = {\n    loading: false\n};\n\nexport default connect(mapStateToProps)(BarChart);"]},"metadata":{},"sourceType":"module"}