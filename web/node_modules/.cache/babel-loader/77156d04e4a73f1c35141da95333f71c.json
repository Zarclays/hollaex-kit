{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Transactions/index.js\";\nimport React, { Component } from 'react';\nimport { Table, Alert } from 'antd';\nimport './index.css';\nimport { requestDeposits, completeDeposits, dismissDeposit } from './actions';\nimport { renderRowContent, COLUMNS } from './utils';\nimport { Filters } from './Filters';\nimport { CSVLink } from 'react-csv'; // import { Table, Button, Input, Select, Alert } from 'antd';\n// import { renderRowContent, COLUMNS, SELECT_KEYS } from './utils';\n// const InputGroup = Input.Group;\n// const Option = Select.Option;\n// const Search = Input.Search;\n\nvar HEADERS = [{\n  label: 'Transaction id',\n  key: 'transaction_id'\n}, {\n  label: 'Type',\n  key: 'type'\n}, {\n  label: 'Amount',\n  key: 'amount'\n}, {\n  label: 'Currency',\n  key: 'currency'\n}, {\n  label: 'Time',\n  key: 'created_at'\n}];\n\nvar Transactions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transactions, _Component);\n\n  function Transactions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Transactions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Transactions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      deposits: [],\n      fetched: false,\n      loading: true,\n      loadingItem: false,\n      dismissingItem: false,\n      // searchValue: '',\n      error: '',\n      indexItem: -1,\n      searchKey: 'transaction_id',\n      queryParams: {},\n      queryDone: JSON.stringify({})\n    };\n\n    _this.requestDeposits = function () {\n      var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var queryParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.queryParams;\n\n      if (Object.keys(queryParams).length === 0) {\n        return _this.setState({\n          loading: false,\n          fetched: false,\n          queryParams: {}\n        });\n      }\n\n      _this.setState({\n        loading: true,\n        error: '',\n        queryDone: JSON.stringify(queryParams)\n      });\n\n      requestDeposits(_objectSpread({}, values, queryParams)).then(function (data) {\n        _this.setState({\n          deposits: data.data ? data.data : data,\n          loading: false,\n          fetched: true\n        });\n      }).catch(function (error) {\n        var message = error.data ? error.data.message : error.message;\n\n        _this.setState({\n          loading: false,\n          error: message\n        });\n      });\n    };\n\n    _this.completeDeposit = function (transaction_id, indexItem) {\n      return function () {\n        var _this$state = _this.state,\n            loadingItem = _this$state.loadingItem,\n            loading = _this$state.loading,\n            dismissingItem = _this$state.dismissingItem;\n\n        if (!(dismissingItem || loadingItem || loading)) {\n          _this.setState({\n            loadingItem: true,\n            error: '',\n            indexItem: indexItem\n          });\n\n          completeDeposits({\n            transaction_id: transaction_id,\n            status: true\n          }).then(function (data) {\n            var deposits = _this.state.deposits;\n\n            _this.setState({\n              deposits: [].concat(deposits.slice(0, indexItem), data, deposits.slice(indexItem + 1, deposits.length)),\n              loadingItem: false,\n              indexItem: -1\n            });\n          }).catch(function (error) {\n            var message = error.data ? error.data.message : error.message;\n\n            _this.setState({\n              loadingItem: false,\n              error: message,\n              indexItem: -1\n            });\n          });\n        }\n      };\n    };\n\n    _this.dismissDeposit = function (deposit_id, dismissed, indexItem) {\n      return function () {\n        var _this$state2 = _this.state,\n            loadingItem = _this$state2.loadingItem,\n            loading = _this$state2.loading,\n            dismissingItem = _this$state2.dismissingItem;\n\n        if (!(dismissingItem || loadingItem || loading)) {\n          _this.setState({\n            dismissingItem: true,\n            error: '',\n            indexItem: indexItem\n          });\n\n          dismissDeposit(deposit_id, dismissed).then(function (data) {\n            var deposits = _this.state.deposits;\n\n            _this.setState({\n              deposits: [].concat(deposits.slice(0, indexItem), data, deposits.slice(indexItem + 1, deposits.length)),\n              dismissingItem: false,\n              indexItem: -1\n            });\n          }).catch(function (error) {\n            var message = error.data ? error.data.message : error.message;\n\n            _this.setState({\n              dismissingItem: false,\n              error: message,\n              indexItem: -1\n            });\n          });\n        }\n      };\n    };\n\n    _this.onSelect = function (value, option) {\n      _this.setState({\n        searchKey: value\n      });\n    };\n\n    _this.onSearch = function (value) {\n      if (value) {\n        _this.setState({\n          searchValue: value.trim()\n        });\n\n        var values = {};\n        values[_this.state.searchKey] = value.trim();\n\n        var queryParams = _objectSpread({}, _this.props.queryParams);\n\n        delete queryParams.dismissed;\n        delete queryParams.status;\n\n        _this.requestDeposits(values, queryParams);\n      }\n    };\n\n    _this.onRefresh = function () {\n      var requestData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var initialData = _this.props.initialData;\n\n      _this.setState({\n        searchValue: '',\n        searchKey: 'transaction_id'\n      });\n\n      if (requestData) {\n        _this.requestDeposits(initialData);\n      }\n    };\n\n    _this.onCloseErrorAlert = function () {\n      _this.setState({\n        error: ''\n      });\n    };\n\n    _this.onChangeQuery = function (key) {\n      return function (value, option) {\n        var queryParams = _objectSpread({}, _this.state.queryParams);\n\n        if (value) {\n          queryParams[key] = value;\n        } else {\n          delete queryParams[key];\n        }\n\n        _this.setState({\n          queryParams: queryParams\n        }, function () {});\n      };\n    };\n\n    _this.onClickFilters = function () {\n      _this.requestDeposits({}, _this.state.queryParams);\n    };\n\n    return _this;\n  }\n\n  _createClass(Transactions, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var initialData = this.props.initialData;\n      this.requestDeposits(initialData);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.queryParams.currency !== this.props.queryParams.currency || nextProps.queryParams.type !== this.props.queryParams.type) {\n        var initialData = nextProps.initialData,\n            queryParams = nextProps.queryParams;\n        this.requestDeposits(initialData, queryParams);\n        this.onRefresh(false);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          deposits = _this$state3.deposits,\n          loading = _this$state3.loading,\n          fetched = _this$state3.fetched,\n          error = _this$state3.error,\n          indexItem = _this$state3.indexItem,\n          dismissingItem = _this$state3.dismissingItem,\n          loadingItem = _this$state3.loadingItem,\n          queryParams = _this$state3.queryParams,\n          queryDone = _this$state3.queryDone;\n      var showFilters = this.props.showFilters;\n      var _this$props = this.props,\n          hideUserColumn = _this$props.hideUserColumn,\n          _this$props$queryPara = _this$props.queryParams,\n          currency = _this$props$queryPara.currency,\n          type = _this$props$queryPara.type;\n      var columns = COLUMNS(currency, type);\n      return React.createElement(\"div\", {\n        className: \"app_container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, showFilters && React.createElement(Filters, {\n        onChange: this.onChangeQuery,\n        onClick: this.onClickFilters,\n        hasChanges: queryDone !== JSON.stringify(queryParams),\n        params: queryParams,\n        loading: loading,\n        fetched: fetched,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), loading ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"app-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, error && React.createElement(Alert, {\n        message: error,\n        type: \"error\",\n        showIcon: true,\n        onClose: this.onCloseErrorAlert,\n        closable: true,\n        closeText: \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(CSVLink, {\n        data: deposits,\n        headers: HEADERS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Download transactions\"), React.createElement(Table, {\n        columns: hideUserColumn ? columns.slice(1) : columns,\n        dataSource: deposits.map(function (deposit, index) {\n          return _objectSpread({}, deposit, {\n            completeDeposit: index !== indexItem ? _this2.completeDeposit(deposit.transaction_id, index) : function () {},\n            dismissDeposit: index !== indexItem ? _this2.dismissDeposit(deposit.id, !deposit.dismissed, index) : function () {},\n            updatingItem: loadingItem && index === indexItem,\n            dismissingItem: dismissingItem && index === indexItem\n          });\n        }),\n        expandedRowRender: renderRowContent,\n        expandRowByClick: true,\n        rowKey: function rowKey(data) {\n          return data.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Transactions;\n}(Component);\n\nexport default Transactions;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Transactions/index.js"],"names":["React","Component","Table","Alert","requestDeposits","completeDeposits","dismissDeposit","renderRowContent","COLUMNS","Filters","CSVLink","HEADERS","label","key","Transactions","state","deposits","fetched","loading","loadingItem","dismissingItem","error","indexItem","searchKey","queryParams","queryDone","JSON","stringify","values","props","Object","keys","length","setState","then","data","catch","message","completeDeposit","transaction_id","status","concat","slice","deposit_id","dismissed","onSelect","value","option","onSearch","searchValue","trim","onRefresh","requestData","initialData","onCloseErrorAlert","onChangeQuery","onClickFilters","nextProps","currency","type","showFilters","hideUserColumn","columns","map","deposit","index","id","updatingItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Alert } from 'antd';\n\nimport './index.css';\n\nimport { requestDeposits, completeDeposits, dismissDeposit } from './actions';\nimport { renderRowContent, COLUMNS } from './utils';\nimport { Filters } from './Filters';\nimport { CSVLink } from 'react-csv';\n\n// import { Table, Button, Input, Select, Alert } from 'antd';\n// import { renderRowContent, COLUMNS, SELECT_KEYS } from './utils';\n\n// const InputGroup = Input.Group;\n// const Option = Select.Option;\n// const Search = Input.Search;\n\nconst HEADERS = [\n\t{ label: 'Transaction id', key: 'transaction_id' },\n\t{ label: 'Type', key: 'type' },\n\t{ label: 'Amount', key: 'amount' },\n\t{ label: 'Currency', key: 'currency' },\n\t{ label: 'Time', key: 'created_at' }\n];\n\nclass Transactions extends Component {\n\tstate = {\n\t\tdeposits: [],\n\t\tfetched: false,\n\t\tloading: true,\n\t\tloadingItem: false,\n\t\tdismissingItem: false,\n\t\t// searchValue: '',\n\t\terror: '',\n\t\tindexItem: -1,\n\t\tsearchKey: 'transaction_id',\n\t\tqueryParams: {},\n\t\tqueryDone: JSON.stringify({})\n\t};\n\n\tcomponentWillMount() {\n\t\tconst { initialData } = this.props;\n\t\tthis.requestDeposits(initialData);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (\n\t\t\tnextProps.queryParams.currency !== this.props.queryParams.currency ||\n\t\t\tnextProps.queryParams.type !== this.props.queryParams.type\n\t\t) {\n\t\t\tconst { initialData, queryParams } = nextProps;\n\t\t\tthis.requestDeposits(initialData, queryParams);\n\t\t\tthis.onRefresh(false);\n\t\t}\n\t}\n\n\trequestDeposits = (values = {}, queryParams = this.props.queryParams) => {\n\t\tif (Object.keys(queryParams).length === 0) {\n\t\t\treturn this.setState({\n\t\t\t\tloading: false,\n\t\t\t\tfetched: false,\n\t\t\t\tqueryParams: {}\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\terror: '',\n\t\t\tqueryDone: JSON.stringify(queryParams)\n\t\t});\n\n\t\trequestDeposits({\n\t\t\t...values,\n\t\t\t...queryParams\n\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdeposits: data.data ? data.data : data,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tfetched: true\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconst message = error.data ? error.data.message : error.message;\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: message\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\tcompleteDeposit = (transaction_id, indexItem) => () => {\n\t\tconst { loadingItem, loading, dismissingItem } = this.state;\n\t\tif (!(dismissingItem || loadingItem || loading)) {\n\t\t\tthis.setState({ loadingItem: true, error: '', indexItem });\n\t\t\tcompleteDeposits({ transaction_id, status: true })\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst { deposits } = this.state;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdeposits: [].concat(\n\t\t\t\t\t\t\tdeposits.slice(0, indexItem),\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tdeposits.slice(indexItem + 1, deposits.length)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tloadingItem: false,\n\t\t\t\t\t\tindexItem: -1\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst message = error.data ? error.data.message : error.message;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloadingItem: false,\n\t\t\t\t\t\terror: message,\n\t\t\t\t\t\tindexItem: -1\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t};\n\n\tdismissDeposit = (deposit_id, dismissed, indexItem) => () => {\n\t\tconst { loadingItem, loading, dismissingItem } = this.state;\n\t\tif (!(dismissingItem || loadingItem || loading)) {\n\t\t\tthis.setState({ dismissingItem: true, error: '', indexItem });\n\t\t\tdismissDeposit(deposit_id, dismissed)\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst { deposits } = this.state;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdeposits: [].concat(\n\t\t\t\t\t\t\tdeposits.slice(0, indexItem),\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tdeposits.slice(indexItem + 1, deposits.length)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdismissingItem: false,\n\t\t\t\t\t\tindexItem: -1\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst message = error.data ? error.data.message : error.message;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdismissingItem: false,\n\t\t\t\t\t\terror: message,\n\t\t\t\t\t\tindexItem: -1\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t};\n\tonSelect = (value, option) => {\n\t\tthis.setState({ searchKey: value });\n\t};\n\n\tonSearch = (value) => {\n\t\tif (value) {\n\t\t\tthis.setState({ searchValue: value.trim() });\n\t\t\tconst values = {};\n\t\t\tvalues[this.state.searchKey] = value.trim();\n\t\t\tconst queryParams = { ...this.props.queryParams };\n\t\t\tdelete queryParams.dismissed;\n\t\t\tdelete queryParams.status;\n\t\t\tthis.requestDeposits(values, queryParams);\n\t\t}\n\t};\n\n\tonRefresh = (requestData = true) => {\n\t\tconst { initialData } = this.props;\n\t\tthis.setState({ searchValue: '', searchKey: 'transaction_id' });\n\t\tif (requestData) {\n\t\t\tthis.requestDeposits(initialData);\n\t\t}\n\t};\n\n\tonCloseErrorAlert = () => {\n\t\tthis.setState({ error: '' });\n\t};\n\n\tonChangeQuery = (key) => (value, option) => {\n\t\tconst queryParams = {\n\t\t\t...this.state.queryParams\n\t\t};\n\t\tif (value) {\n\t\t\tqueryParams[key] = value;\n\t\t} else {\n\t\t\tdelete queryParams[key];\n\t\t}\n\t\tthis.setState({ queryParams }, () => {});\n\t};\n\n\tonClickFilters = () => {\n\t\tthis.requestDeposits({}, this.state.queryParams);\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tdeposits,\n\t\t\tloading,\n\t\t\tfetched,\n\t\t\terror,\n\t\t\tindexItem,\n\t\t\t// searchValue,\n\t\t\tdismissingItem,\n\t\t\tloadingItem,\n\t\t\tqueryParams,\n\t\t\tqueryDone\n\t\t} = this.state;\n\t\tconst { showFilters } = this.props;\n\n\t\tconst {\n\t\t\thideUserColumn,\n\t\t\tqueryParams: { currency, type }\n\t\t} = this.props;\n\t\tconst columns = COLUMNS(currency, type);\n\t\treturn (\n\t\t\t<div className=\"app_container-content\">\n\t\t\t\t<div>\n\t\t\t\t\t{showFilters && (\n\t\t\t\t\t\t<Filters\n\t\t\t\t\t\t\tonChange={this.onChangeQuery}\n\t\t\t\t\t\t\tonClick={this.onClickFilters}\n\t\t\t\t\t\t\thasChanges={queryDone !== JSON.stringify(queryParams)}\n\t\t\t\t\t\t\tparams={queryParams}\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\tfetched={fetched}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<div />\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"app-wrapper\">\n\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\tmessage={error}\n\t\t\t\t\t\t\t\ttype=\"error\"\n\t\t\t\t\t\t\t\tshowIcon\n\t\t\t\t\t\t\t\tonClose={this.onCloseErrorAlert}\n\t\t\t\t\t\t\t\tclosable={true}\n\t\t\t\t\t\t\t\tcloseText=\"Close\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<CSVLink data={deposits} headers={HEADERS}>\n\t\t\t\t\t\t\tDownload transactions\n\t\t\t\t\t\t</CSVLink>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcolumns={hideUserColumn ? columns.slice(1) : columns}\n\t\t\t\t\t\t\tdataSource={deposits.map((deposit, index) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...deposit,\n\t\t\t\t\t\t\t\t\tcompleteDeposit:\n\t\t\t\t\t\t\t\t\t\tindex !== indexItem\n\t\t\t\t\t\t\t\t\t\t\t? this.completeDeposit(\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeposit.transaction_id,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: () => {},\n\t\t\t\t\t\t\t\t\tdismissDeposit:\n\t\t\t\t\t\t\t\t\t\tindex !== indexItem\n\t\t\t\t\t\t\t\t\t\t\t? this.dismissDeposit(\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeposit.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t!deposit.dismissed,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t: () => {},\n\t\t\t\t\t\t\t\t\tupdatingItem: loadingItem && index === indexItem,\n\t\t\t\t\t\t\t\t\tdismissingItem: dismissingItem && index === indexItem\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\texpandedRowRender={renderRowContent}\n\t\t\t\t\t\t\texpandRowByClick={true}\n\t\t\t\t\t\t\trowKey={(data) => {\n\t\t\t\t\t\t\t\treturn data.id;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Transactions;\n"]},"metadata":{},"sourceType":"module"}