{"ast":null,"code":"import moment from 'moment';\nimport { calculatePrice } from '../../../utils/currency';\nexport var getTradeVolumeTotal = function getTradeVolumeTotal(tradeData, prices, pairs) {\n  var totalVolume = 0;\n  Object.keys(tradeData).map(function (month) {\n    var trade = tradeData[month];\n\n    if (trade) {\n      var total = 0;\n      Object.keys(trade).map(function (pair) {\n        var pairValue = pairs[pair] || {};\n        var volumeObj = trade[pair] || {};\n        var pairPrice = calculatePrice(volumeObj.volume, prices[pairValue.pair_base]);\n        total += pairPrice;\n        return total;\n      });\n      totalVolume += total;\n    }\n\n    return month;\n  });\n  return totalVolume;\n};\nexport var getLastMonthVolume = function getLastMonthVolume() {\n  var tradeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var prices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pairs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var month = moment().subtract(1, 'month').format('M');\n  var trade = tradeData[month];\n  var total = 0;\n\n  if (trade) {\n    Object.keys(trade).map(function (pair) {\n      var pairValue = pairs[pair] || {};\n      var volumeObj = trade[pair] || {};\n      var pairPrice = calculatePrice(volumeObj.volume, prices[pairValue.pair_base]);\n      total += pairPrice;\n      return total;\n    });\n  }\n\n  return total;\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Summary/components/utils.js"],"names":["moment","calculatePrice","getTradeVolumeTotal","tradeData","prices","pairs","totalVolume","Object","keys","map","month","trade","total","pair","pairValue","volumeObj","pairPrice","volume","pair_base","getLastMonthVolume","subtract","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAYC,MAAZ,EAAoBC,KAApB,EAA8B;AAChE,MAAIC,WAAW,GAAG,CAAlB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,GAAvB,CAA2B,UAACC,KAAD,EAAW;AACrC,QAAIC,KAAK,GAAGR,SAAS,CAACO,KAAD,CAArB;;AACA,QAAIC,KAAJ,EAAW;AACV,UAAIC,KAAK,GAAG,CAAZ;AACAL,MAAAA,MAAM,CAACC,IAAP,CAAYG,KAAZ,EAAmBF,GAAnB,CAAuB,UAACI,IAAD,EAAU;AAChC,YAAIC,SAAS,GAAGT,KAAK,CAACQ,IAAD,CAAL,IAAe,EAA/B;AACA,YAAIE,SAAS,GAAGJ,KAAK,CAACE,IAAD,CAAL,IAAe,EAA/B;AACA,YAAIG,SAAS,GAAGf,cAAc,CAC7Bc,SAAS,CAACE,MADmB,EAE7Bb,MAAM,CAACU,SAAS,CAACI,SAAX,CAFuB,CAA9B;AAIAN,QAAAA,KAAK,IAAII,SAAT;AACA,eAAOJ,KAAP;AACA,OATD;AAUAN,MAAAA,WAAW,IAAIM,KAAf;AACA;;AACD,WAAOF,KAAP;AACA,GAjBD;AAkBA,SAAOJ,WAAP;AACA,CArBM;AAuBP,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,GAA6C;AAAA,MAA5ChB,SAA4C,uEAAhC,EAAgC;AAAA,MAA5BC,MAA4B,uEAAnB,EAAmB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC9E,MAAMK,KAAK,GAAGV,MAAM,GAClBoB,QADY,CACH,CADG,EACA,OADA,EAEZC,MAFY,CAEL,GAFK,CAAd;AAGA,MAAMV,KAAK,GAAGR,SAAS,CAACO,KAAD,CAAvB;AACA,MAAIE,KAAK,GAAG,CAAZ;;AACA,MAAID,KAAJ,EAAW;AACVJ,IAAAA,MAAM,CAACC,IAAP,CAAYG,KAAZ,EAAmBF,GAAnB,CAAuB,UAACI,IAAD,EAAU;AAChC,UAAIC,SAAS,GAAGT,KAAK,CAACQ,IAAD,CAAL,IAAe,EAA/B;AACA,UAAIE,SAAS,GAAGJ,KAAK,CAACE,IAAD,CAAL,IAAe,EAA/B;AACA,UAAIG,SAAS,GAAGf,cAAc,CAC7Bc,SAAS,CAACE,MADmB,EAE7Bb,MAAM,CAACU,SAAS,CAACI,SAAX,CAFuB,CAA9B;AAIAN,MAAAA,KAAK,IAAII,SAAT;AACA,aAAOJ,KAAP;AACA,KATD;AAUA;;AACD,SAAOA,KAAP;AACA,CAnBM","sourcesContent":["import moment from 'moment';\nimport { calculatePrice } from '../../../utils/currency';\n\nexport const getTradeVolumeTotal = (tradeData, prices, pairs) => {\n\tlet totalVolume = 0;\n\tObject.keys(tradeData).map((month) => {\n\t\tlet trade = tradeData[month];\n\t\tif (trade) {\n\t\t\tlet total = 0;\n\t\t\tObject.keys(trade).map((pair) => {\n\t\t\t\tlet pairValue = pairs[pair] || {};\n\t\t\t\tlet volumeObj = trade[pair] || {};\n\t\t\t\tlet pairPrice = calculatePrice(\n\t\t\t\t\tvolumeObj.volume,\n\t\t\t\t\tprices[pairValue.pair_base]\n\t\t\t\t);\n\t\t\t\ttotal += pairPrice;\n\t\t\t\treturn total;\n\t\t\t});\n\t\t\ttotalVolume += total;\n\t\t}\n\t\treturn month;\n\t});\n\treturn totalVolume;\n};\n\nexport const getLastMonthVolume = (tradeData = {}, prices = {}, pairs = {}) => {\n\tconst month = moment()\n\t\t.subtract(1, 'month')\n\t\t.format('M');\n\tconst trade = tradeData[month];\n\tlet total = 0;\n\tif (trade) {\n\t\tObject.keys(trade).map((pair) => {\n\t\t\tlet pairValue = pairs[pair] || {};\n\t\t\tlet volumeObj = trade[pair] || {};\n\t\t\tlet pairPrice = calculatePrice(\n\t\t\t\tvolumeObj.volume,\n\t\t\t\tprices[pairValue.pair_base]\n\t\t\t);\n\t\t\ttotal += pairPrice;\n\t\t\treturn total;\n\t\t});\n\t}\n\treturn total;\n};\n"]},"metadata":{},"sourceType":"module"}