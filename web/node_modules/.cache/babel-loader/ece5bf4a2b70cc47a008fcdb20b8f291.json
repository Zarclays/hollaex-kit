{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Trade/Chart.js\";\nimport * as React from 'react';\nimport { widget } from '../../charting_library/charting_library.min';\nimport { WHITE_THEME, DARK_THEME } from './ChartConfig';\nimport { getLanguage } from '../../utils/string';\nimport { getChartConfig, getChartSymbol, getChartHistory } from '../../actions/chartAction';\n\nfunction getThemeOverrides() {\n  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'white';\n\n  if (theme === 'white') {\n    return WHITE_THEME;\n  } else {\n    return DARK_THEME;\n  }\n}\n\nvar TVChartContainer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TVChartContainer, _React$PureComponent);\n\n  function TVChartContainer(props) {\n    var _this;\n\n    _classCallCheck(this, TVChartContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TVChartContainer).call(this, props));\n    _this.state = {\n      subs: {},\n      lastBar: {}\n    };\n    return _this;\n  }\n\n  _createClass(TVChartContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var that = this;\n      this.chartConfig = {\n        onReady: function onReady(cb) {\n          getChartConfig().then(function (data) {\n            cb(data);\n          });\n        },\n        searchSymbols: function searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {},\n        resolveSymbol: function resolveSymbol(symbolName, onSymbolResolvedCallback, onResolveErrorCallback) {\n          // expects a symbolInfo object in response\n          // var split_data = symbolName.split(/[-/]/)\n          // var symbol_stub = {\n          // \tname: symbolName,\n          // \tdescription: '',\n          // \ttype: 'crypto',\n          // \tsession: '24x7',\n          // \ttimezone: 'Etc/UTC',\n          // \tticker: symbolName,\n          // \texchange: split_data[0],\n          // \tminmov: 1,\n          // \tpricescale: 100000000,\n          // \thas_intraday: true,\n          // \tintraday_multipliers: ['1', '60'],\n          // \tsupported_resolution:  supportedResolutions,\n          // \tvolume_precision: 8,\n          // \tdata_status: 'streaming',\n          // }\n          // if (split_data[2].match(/USD|EUR|JPY|AUD|GBP|KRW|CNY/)) {\n          // \tsymbol_stub.pricescale = 100\n          // }\n          var increment_price = _this2.props.pairData.increment_price;\n          getChartSymbol(symbolName, increment_price).then(function (data) {\n            onSymbolResolvedCallback(data);\n          }); // onResolveErrorCallback('Not feeling it today')\n        },\n        getBars: function getBars(symbolInfo, resolution, from, to, onHistoryCallback, onErrorCallback, firstDataRequest) {\n          getChartHistory(symbolInfo.ticker, resolution, from, to, firstDataRequest).then(function (_ref) {\n            var data = _ref.data;\n\n            if (data.length) {\n              var bars = data.map(function (bar) {\n                return {\n                  time: new Date(bar.time).getTime(),\n                  //TradingView requires bar time in ms\n                  low: bar.low,\n                  high: bar.high,\n                  open: bar.open,\n                  close: bar.close,\n                  volume: bar.volume\n                };\n              });\n\n              if (firstDataRequest) {\n                that.setState({\n                  lastBar: bars[bars.length - 1]\n                }); // setBars[symbolInfo.ticker] = { lastBar: lastBar }\n              }\n\n              onHistoryCallback(bars, {\n                noData: false\n              });\n            } else {\n              onHistoryCallback(data, {\n                noData: true\n              });\n            }\n          }).catch(function (err) {\n            onErrorCallback(err);\n          });\n        },\n        subscribeBars: function subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback) {\n          that.setState({\n            sub: {\n              uid: subscribeUID,\n              resolution: resolution,\n              symbolInfo: symbolInfo,\n              lastBar: that.state.lastBar,\n              listener: onRealtimeCallback\n            }\n          }); // stream.subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback);\n        },\n        unsubscribeBars: function unsubscribeBars(subscriberUID) {// stream.unsubscribeBars(subscriberUID)\n        },\n        calculateHistoryDepth: function calculateHistoryDepth(resolution, resolutionBack, intervalBack) {\n          //optional\n          // while optional, this makes sure we request 24 hours of minute data at a time\n          // CryptoCompare's minute data endpoint will throw an error if we request data beyond 7 days in the past, and return no data\n          return resolution < 60 ? {\n            resolutionBack: 'D',\n            intervalBack: '1'\n          } : undefined;\n        },\n        getMarks: function getMarks(symbolInfo, startDate, endDate, onDataCallback, resolution) {//optional\n        },\n        getTimeScaleMarks: function getTimeScaleMarks(symbolInfo, startDate, endDate, onDataCallback, resolution) {//optional\n        },\n        getServerTime: function getServerTime(cb) {}\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          activeTheme = _this$props.activeTheme,\n          symbol = _this$props.symbol,\n          containerId = _this$props.containerId,\n          libraryPath = _this$props.libraryPath,\n          interval = _this$props.interval;\n      var widgetOptions = {\n        symbol: symbol,\n        // BEWARE: no trailing slash is expected in feed URL\n        theme: activeTheme === 'white' ? 'light' : 'dark',\n        toolbar_bg: activeTheme === 'white' ? '#ffffff' : '#1f212a',\n        datafeed: this.chartConfig,\n        interval: interval,\n        container_id: containerId,\n        library_path: libraryPath,\n        locale: getLanguage(),\n        withdateranges: true,\n        range: 'ytd',\n        disabled_features: ['use_localstorage_for_settings', 'edit_buttons_in_legend', 'context_menus', 'border_around_the_chart', 'header_symbol_search', 'header_compare', 'header_settings', 'control_bar', 'header_screenshot'],\n        enabled_features: ['items_favoriting', 'support_multicharts'],\n        time_frames: [{\n          text: '1m',\n          resolution: '1m'\n        }, {\n          text: '1h',\n          resolution: '1h'\n        }, {\n          text: '1D',\n          resolution: '1D'\n        }, {\n          text: '1W',\n          resolution: '1W'\n        }, {\n          text: '1M',\n          resolution: '1M'\n        } // // { text: \"YTD\", resolution: \"YTD\" },\n        // { text: \"1Y\", resolution: \"D\" },\n        // { text: \"3Y\", resolution: \"D\" },\n        // { text: \"5Y\", resolution: \"W\" },\n        // { text: \"ALL\", resolution: \"ALL\" },\n        ],\n        charts_storage_url: this.props.chartsStorageUrl,\n        charts_storage_api_version: this.props.chartsStorageApiVersion,\n        client_id: this.props.clientId,\n        user_id: this.props.userId,\n        fullscreen: this.props.fullscreen,\n        autosize: this.props.autosize,\n        studies_overrides: this.props.studiesOverrides,\n        favorites: {\n          chartTypes: ['Area', 'Candles', 'Bars']\n        },\n        loading_screen: activeTheme === 'white' ? {\n          backgroundColor: '#ffffff'\n        } : {\n          backgroundColor: '#1f212a'\n        },\n        custom_css_url: \"\".concat(process.env.PUBLIC_URL, \"/css/chart.css\"),\n        overrides: getThemeOverrides(activeTheme)\n      };\n      var tvWidget = new widget(widgetOptions);\n      this.tvWidget = tvWidget;\n      tvWidget.onChartReady(function () {\n        var button = tvWidget.createButton({\n          align: 'right'\n        }).attr('title', 'Take instant snapshot of your chart. No more paint or other editors to save screenshots - simply click the button and copy the link of the picture.').addClass('apply-common-tooltip screen-button').on('click', function () {\n          return tvWidget.takeScreenshot();\n        });\n        tvWidget.applyOverrides(getThemeOverrides(activeTheme));\n\n        if (activeTheme === 'white') {\n          tvWidget.changeTheme('light');\n        } else {\n          tvWidget.changeTheme('dark');\n        }\n\n        button[0].innerHTML = \"<div class='screen-container'><div class='screen-content'>Share Screenshot</div> <div><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 21 17\\\" width=\\\"21\\\" height=\\\"17\\\"><g fill=\\\"none\\\" stroke=\\\"currentColor\\\"><path d=\\\"M2.5 2.5h3.691a.5.5 0 0 0 .447-.276l.586-1.171A1 1 0 0 1 8.118.5h4.764a1 1 0 0 1 .894.553l.586 1.17a.5.5 0 0 0 .447.277H18.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-16a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z\\\"></path><circle cx=\\\"10.5\\\" cy=\\\"9.5\\\" r=\\\"4\\\"></circle></g></svg></div></div>\";\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.activeTheme !== nextProps.activeTheme) {\n        if (nextProps.activeTheme === 'white') {\n          this.tvWidget.changeTheme('light');\n          this.tvWidget.applyOverrides(getThemeOverrides(nextProps.activeTheme));\n        } else {\n          this.tvWidget.changeTheme('dark');\n          this.tvWidget.applyOverrides(getThemeOverrides(nextProps.activeTheme));\n        }\n      } else if (nextProps.tradeHistory && nextProps.tradeHistory.length && this.state.sub) {\n        this.updateBar(nextProps.tradeHistory[0]);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.tvWidget !== null) {\n        this.tvWidget.remove();\n        this.tvWidget = null;\n      }\n    }\n  }, {\n    key: \"updateBar\",\n    value: function updateBar(data) {\n      var sub = this.state.sub;\n      var lastBar = sub.lastBar,\n          resolution = sub.resolution;\n      var coeff = 0;\n\n      if (resolution.includes('60')) {\n        // 1 hour in minutes === 60\n        coeff = 60 * 60 * 1000;\n      } else if (resolution.includes('D')) {\n        // 1 day in minutes === 1440\n        coeff = 60 * 60 * 24 * 1000;\n      } else if (resolution.includes('W')) {\n        // 1 week in minutes === 10080\n        coeff = 60 * 60 * 24 * 7 * 1000;\n      }\n\n      var lastTradeTime = new Date(data.timestamp).getTime();\n      var rounded = Math.floor(lastTradeTime / coeff) * coeff;\n\n      var _lastBar;\n\n      if (rounded > lastBar.time) {\n        // create a new candle, use last close as open\n        _lastBar = {\n          time: rounded,\n          open: lastBar.close,\n          high: lastBar.close,\n          low: lastBar.close,\n          close: data.price,\n          volume: data.size\n        };\n      } else {\n        // update lastBar candle!\n        if (data.price < lastBar.low) {\n          lastBar.low = data.price;\n        } else if (data.price > lastBar.high) {\n          lastBar.high = data.price;\n        }\n\n        lastBar.volume += data.size;\n        lastBar.close = data.price;\n        _lastBar = lastBar;\n      }\n\n      sub.listener(_lastBar);\n      sub.lastBar = _lastBar;\n      this.setState({\n        sub: sub\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: this.props.containerId,\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'relative',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TVChartContainer;\n}(React.PureComponent);\n\nTVChartContainer.defaultProps = {\n  symbol: 'eth-eur',\n  // the trading tab we are in should be passed here\n  interval: 'D',\n  containerId: 'tv_chart_container',\n  libraryPath: '/charting_library/',\n  // chartsStorageUrl: 'https://saveload.tradingview.com',\n  chartsStorageApiVersion: '1.1',\n  clientId: 'tradingview.com',\n  userId: 'public_user_id',\n  fullscreen: false,\n  autosize: true,\n  studiesOverrides: {},\n  time_frames: [{\n    text: '1D',\n    resolution: '1'\n  }, {\n    text: '5D',\n    resolution: '5'\n  }, {\n    text: '3M',\n    resolution: '60'\n  }, {\n    text: '6M',\n    resolution: '120'\n  }, {\n    text: '1m',\n    resolution: '30'\n  }, // { text: \"YTD\", resolution: \"YTD\" },\n  {\n    text: '1Y',\n    resolution: 'D'\n  }, {\n    text: '3Y',\n    resolution: 'D'\n  }, {\n    text: '5Y',\n    resolution: 'W'\n  } // { text: \"ALL\", resolution: \"ALL\" },\n  ]\n};\nexport default TVChartContainer;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Trade/Chart.js"],"names":["React","widget","WHITE_THEME","DARK_THEME","getLanguage","getChartConfig","getChartSymbol","getChartHistory","getThemeOverrides","theme","TVChartContainer","props","state","subs","lastBar","that","chartConfig","onReady","cb","then","data","searchSymbols","userInput","exchange","symbolType","onResultReadyCallback","resolveSymbol","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","increment_price","pairData","getBars","symbolInfo","resolution","from","to","onHistoryCallback","onErrorCallback","firstDataRequest","ticker","length","bars","map","bar","time","Date","getTime","low","high","open","close","volume","setState","noData","catch","err","subscribeBars","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","sub","uid","listener","unsubscribeBars","subscriberUID","calculateHistoryDepth","resolutionBack","intervalBack","undefined","getMarks","startDate","endDate","onDataCallback","getTimeScaleMarks","getServerTime","activeTheme","symbol","containerId","libraryPath","interval","widgetOptions","toolbar_bg","datafeed","container_id","library_path","locale","withdateranges","range","disabled_features","enabled_features","time_frames","text","charts_storage_url","chartsStorageUrl","charts_storage_api_version","chartsStorageApiVersion","client_id","clientId","user_id","userId","fullscreen","autosize","studies_overrides","studiesOverrides","favorites","chartTypes","loading_screen","backgroundColor","custom_css_url","process","env","PUBLIC_URL","overrides","tvWidget","onChartReady","button","createButton","align","attr","addClass","on","takeScreenshot","applyOverrides","changeTheme","innerHTML","nextProps","tradeHistory","updateBar","remove","coeff","includes","lastTradeTime","timestamp","rounded","Math","floor","_lastBar","price","size","width","height","position","display","justifyContent","alignItems","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { widget } from '../../charting_library/charting_library.min';\nimport { WHITE_THEME, DARK_THEME } from './ChartConfig';\nimport { getLanguage } from '../../utils/string';\nimport {\n\tgetChartConfig,\n\tgetChartSymbol,\n\tgetChartHistory\n} from '../../actions/chartAction';\n\nfunction getThemeOverrides(theme = 'white') {\n\tif (theme === 'white') {\n\t\treturn WHITE_THEME;\n\t} else {\n\t\treturn DARK_THEME;\n\t}\n}\n\nclass TVChartContainer extends React.PureComponent {\n\tstatic defaultProps = {\n\t\tsymbol: 'eth-eur', // the trading tab we are in should be passed here\n\t\tinterval: 'D',\n\t\tcontainerId: 'tv_chart_container',\n\t\tlibraryPath: '/charting_library/',\n\t\t// chartsStorageUrl: 'https://saveload.tradingview.com',\n\t\tchartsStorageApiVersion: '1.1',\n\t\tclientId: 'tradingview.com',\n\t\tuserId: 'public_user_id',\n\t\tfullscreen: false,\n\t\tautosize: true,\n\t\tstudiesOverrides: {},\n\t\ttime_frames: [\n\t\t\t{ text: '1D', resolution: '1' },\n\t\t\t{ text: '5D', resolution: '5' },\n\t\t\t{ text: '3M', resolution: '60' },\n\t\t\t{ text: '6M', resolution: '120' },\n\t\t\t{ text: '1m', resolution: '30' },\n\t\t\t// { text: \"YTD\", resolution: \"YTD\" },\n\t\t\t{ text: '1Y', resolution: 'D' },\n\t\t\t{ text: '3Y', resolution: 'D' },\n\t\t\t{ text: '5Y', resolution: 'W' }\n\t\t\t// { text: \"ALL\", resolution: \"ALL\" },\n\t\t]\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsubs: {},\n\t\t\tlastBar: {}\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tvar that = this;\n\t\tthis.chartConfig = {\n\t\t\tonReady: (cb) => {\n\t\t\t\tgetChartConfig().then((data) => {\n\t\t\t\t\tcb(data);\n\t\t\t\t});\n\t\t\t},\n\t\t\tsearchSymbols: (\n\t\t\t\tuserInput,\n\t\t\t\texchange,\n\t\t\t\tsymbolType,\n\t\t\t\tonResultReadyCallback\n\t\t\t) => {},\n\t\t\tresolveSymbol: (\n\t\t\t\tsymbolName,\n\t\t\t\tonSymbolResolvedCallback,\n\t\t\t\tonResolveErrorCallback\n\t\t\t) => {\n\t\t\t\t// expects a symbolInfo object in response\n\t\t\t\t// var split_data = symbolName.split(/[-/]/)\n\t\t\t\t// var symbol_stub = {\n\t\t\t\t// \tname: symbolName,\n\t\t\t\t// \tdescription: '',\n\t\t\t\t// \ttype: 'crypto',\n\t\t\t\t// \tsession: '24x7',\n\t\t\t\t// \ttimezone: 'Etc/UTC',\n\t\t\t\t// \tticker: symbolName,\n\t\t\t\t// \texchange: split_data[0],\n\t\t\t\t// \tminmov: 1,\n\t\t\t\t// \tpricescale: 100000000,\n\t\t\t\t// \thas_intraday: true,\n\t\t\t\t// \tintraday_multipliers: ['1', '60'],\n\t\t\t\t// \tsupported_resolution:  supportedResolutions,\n\t\t\t\t// \tvolume_precision: 8,\n\t\t\t\t// \tdata_status: 'streaming',\n\t\t\t\t// }\n\n\t\t\t\t// if (split_data[2].match(/USD|EUR|JPY|AUD|GBP|KRW|CNY/)) {\n\t\t\t\t// \tsymbol_stub.pricescale = 100\n\t\t\t\t// }\n\t\t\t\tconst { increment_price } = this.props.pairData;\n\t\t\t\tgetChartSymbol(symbolName, increment_price).then((data) => {\n\t\t\t\t\tonSymbolResolvedCallback(data);\n\t\t\t\t});\n\n\t\t\t\t// onResolveErrorCallback('Not feeling it today')\n\t\t\t},\n\t\t\tgetBars: function(\n\t\t\t\tsymbolInfo,\n\t\t\t\tresolution,\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tonHistoryCallback,\n\t\t\t\tonErrorCallback,\n\t\t\t\tfirstDataRequest\n\t\t\t) {\n\t\t\t\tgetChartHistory(\n\t\t\t\t\tsymbolInfo.ticker,\n\t\t\t\t\tresolution,\n\t\t\t\t\tfrom,\n\t\t\t\t\tto,\n\t\t\t\t\tfirstDataRequest\n\t\t\t\t)\n\t\t\t\t\t.then(({ data }) => {\n\t\t\t\t\t\tif (data.length) {\n\t\t\t\t\t\t\tconst bars = data.map((bar) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttime: new Date(bar.time).getTime(), //TradingView requires bar time in ms\n\t\t\t\t\t\t\t\t\tlow: bar.low,\n\t\t\t\t\t\t\t\t\thigh: bar.high,\n\t\t\t\t\t\t\t\t\topen: bar.open,\n\t\t\t\t\t\t\t\t\tclose: bar.close,\n\t\t\t\t\t\t\t\t\tvolume: bar.volume\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (firstDataRequest) {\n\t\t\t\t\t\t\t\tthat.setState({\n\t\t\t\t\t\t\t\t\tlastBar: bars[bars.length - 1]\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// setBars[symbolInfo.ticker] = { lastBar: lastBar }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonHistoryCallback(bars, { noData: false });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tonHistoryCallback(data, { noData: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tonErrorCallback(err);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tsubscribeBars: (\n\t\t\t\tsymbolInfo,\n\t\t\t\tresolution,\n\t\t\t\tonRealtimeCallback,\n\t\t\t\tsubscribeUID,\n\t\t\t\tonResetCacheNeededCallback\n\t\t\t) => {\n\t\t\t\tthat.setState({\n\t\t\t\t\tsub: {\n\t\t\t\t\t\tuid: subscribeUID,\n\t\t\t\t\t\tresolution,\n\t\t\t\t\t\tsymbolInfo,\n\t\t\t\t\t\tlastBar: that.state.lastBar,\n\t\t\t\t\t\tlistener: onRealtimeCallback\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t// stream.subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscribeUID, onResetCacheNeededCallback);\n\t\t\t},\n\t\t\tunsubscribeBars: (subscriberUID) => {\n\t\t\t\t// stream.unsubscribeBars(subscriberUID)\n\t\t\t},\n\t\t\tcalculateHistoryDepth: (resolution, resolutionBack, intervalBack) => {\n\t\t\t\t//optional\n\t\t\t\t// while optional, this makes sure we request 24 hours of minute data at a time\n\t\t\t\t// CryptoCompare's minute data endpoint will throw an error if we request data beyond 7 days in the past, and return no data\n\t\t\t\treturn resolution < 60\n\t\t\t\t\t? { resolutionBack: 'D', intervalBack: '1' }\n\t\t\t\t\t: undefined;\n\t\t\t},\n\t\t\tgetMarks: (\n\t\t\t\tsymbolInfo,\n\t\t\t\tstartDate,\n\t\t\t\tendDate,\n\t\t\t\tonDataCallback,\n\t\t\t\tresolution\n\t\t\t) => {\n\t\t\t\t//optional\n\t\t\t},\n\t\t\tgetTimeScaleMarks: (\n\t\t\t\tsymbolInfo,\n\t\t\t\tstartDate,\n\t\t\t\tendDate,\n\t\t\t\tonDataCallback,\n\t\t\t\tresolution\n\t\t\t) => {\n\t\t\t\t//optional\n\t\t\t},\n\t\t\tgetServerTime: (cb) => {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tactiveTheme,\n\t\t\tsymbol,\n\t\t\tcontainerId,\n\t\t\tlibraryPath,\n\t\t\tinterval\n\t\t} = this.props;\n\t\tconst widgetOptions = {\n\t\t\tsymbol: symbol,\n\t\t\t// BEWARE: no trailing slash is expected in feed URL\n\t\t\ttheme: activeTheme === 'white' ? 'light' : 'dark',\n\t\t\ttoolbar_bg: activeTheme === 'white' ? '#ffffff' : '#1f212a',\n\t\t\tdatafeed: this.chartConfig,\n\t\t\tinterval: interval,\n\t\t\tcontainer_id: containerId,\n\t\t\tlibrary_path: libraryPath,\n\n\t\t\tlocale: getLanguage(),\n\t\t\twithdateranges: true,\n\t\t\trange: 'ytd',\n\t\t\tdisabled_features: [\n\t\t\t\t'use_localstorage_for_settings',\n\t\t\t\t'edit_buttons_in_legend',\n\t\t\t\t'context_menus',\n\t\t\t\t'border_around_the_chart',\n\t\t\t\t'header_symbol_search',\n\t\t\t\t'header_compare',\n\t\t\t\t'header_settings',\n\t\t\t\t'control_bar',\n\t\t\t\t'header_screenshot'\n\t\t\t],\n\t\t\tenabled_features: ['items_favoriting', 'support_multicharts'],\n\t\t\ttime_frames: [\n\t\t\t\t{ text: '1m', resolution: '1m' },\n\t\t\t\t{ text: '1h', resolution: '1h' },\n\t\t\t\t{ text: '1D', resolution: '1D' },\n\t\t\t\t{ text: '1W', resolution: '1W' },\n\t\t\t\t{ text: '1M', resolution: '1M' }\n\t\t\t\t// // { text: \"YTD\", resolution: \"YTD\" },\n\t\t\t\t// { text: \"1Y\", resolution: \"D\" },\n\t\t\t\t// { text: \"3Y\", resolution: \"D\" },\n\t\t\t\t// { text: \"5Y\", resolution: \"W\" },\n\t\t\t\t// { text: \"ALL\", resolution: \"ALL\" },\n\t\t\t],\n\t\t\tcharts_storage_url: this.props.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: this.props.chartsStorageApiVersion,\n\t\t\tclient_id: this.props.clientId,\n\t\t\tuser_id: this.props.userId,\n\t\t\tfullscreen: this.props.fullscreen,\n\t\t\tautosize: this.props.autosize,\n\t\t\tstudies_overrides: this.props.studiesOverrides,\n\t\t\tfavorites: {\n\t\t\t\tchartTypes: ['Area', 'Candles', 'Bars']\n\t\t\t},\n\t\t\tloading_screen:\n\t\t\t\tactiveTheme === 'white'\n\t\t\t\t\t? { backgroundColor: '#ffffff' }\n\t\t\t\t\t: { backgroundColor: '#1f212a' },\n\t\t\tcustom_css_url: `${process.env.PUBLIC_URL}/css/chart.css`,\n\t\t\toverrides: getThemeOverrides(activeTheme)\n\t\t};\n\n\t\tconst tvWidget = new widget(widgetOptions);\n\t\tthis.tvWidget = tvWidget;\n\n\t\ttvWidget.onChartReady(() => {\n\t\t\tconst button = tvWidget\n\t\t\t\t.createButton({ align: 'right' })\n\t\t\t\t.attr(\n\t\t\t\t\t'title',\n\t\t\t\t\t'Take instant snapshot of your chart. No more paint or other editors to save screenshots - simply click the button and copy the link of the picture.'\n\t\t\t\t)\n\t\t\t\t.addClass('apply-common-tooltip screen-button')\n\t\t\t\t.on('click', () => tvWidget.takeScreenshot());\n\t\t\ttvWidget.applyOverrides(getThemeOverrides(activeTheme));\n\t\t\tif (activeTheme === 'white') {\n\t\t\t\ttvWidget.changeTheme('light');\n\t\t\t} else {\n\t\t\t\ttvWidget.changeTheme('dark');\n\t\t\t}\n\n\t\t\tbutton[0].innerHTML = `<div class='screen-container'><div class='screen-content'>Share Screenshot</div> <div><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21 17\" width=\"21\" height=\"17\"><g fill=\"none\" stroke=\"currentColor\"><path d=\"M2.5 2.5h3.691a.5.5 0 0 0 .447-.276l.586-1.171A1 1 0 0 1 8.118.5h4.764a1 1 0 0 1 .894.553l.586 1.17a.5.5 0 0 0 .447.277H18.5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-16a2 2 0 0 1-2-2v-10a2 2 0 0 1 2-2z\"></path><circle cx=\"10.5\" cy=\"9.5\" r=\"4\"></circle></g></svg></div></div>`;\n\t\t});\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (this.props.activeTheme !== nextProps.activeTheme) {\n\t\t\tif (nextProps.activeTheme === 'white') {\n\t\t\t\tthis.tvWidget.changeTheme('light');\n\t\t\t\tthis.tvWidget.applyOverrides(\n\t\t\t\t\tgetThemeOverrides(nextProps.activeTheme)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.tvWidget.changeTheme('dark');\n\t\t\t\tthis.tvWidget.applyOverrides(\n\t\t\t\t\tgetThemeOverrides(nextProps.activeTheme)\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tnextProps.tradeHistory &&\n\t\t\tnextProps.tradeHistory.length &&\n\t\t\tthis.state.sub\n\t\t) {\n\t\t\tthis.updateBar(nextProps.tradeHistory[0]);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.tvWidget !== null) {\n\t\t\tthis.tvWidget.remove();\n\t\t\tthis.tvWidget = null;\n\t\t}\n\t}\n\n\tupdateBar(data) {\n\t\tconst { sub } = this.state;\n\t\tlet { lastBar, resolution } = sub;\n\t\tlet coeff = 0;\n\t\tif (resolution.includes('60')) {\n\t\t\t// 1 hour in minutes === 60\n\t\t\tcoeff = 60 * 60 * 1000;\n\t\t} else if (resolution.includes('D')) {\n\t\t\t// 1 day in minutes === 1440\n\t\t\tcoeff = 60 * 60 * 24 * 1000;\n\t\t} else if (resolution.includes('W')) {\n\t\t\t// 1 week in minutes === 10080\n\t\t\tcoeff = 60 * 60 * 24 * 7 * 1000;\n\t\t}\n\n\t\tconst lastTradeTime = new Date(data.timestamp).getTime();\n\t\tlet rounded = Math.floor(lastTradeTime / coeff) * coeff;\n\t\tvar _lastBar;\n\n\t\tif (rounded > lastBar.time) {\n\t\t\t// create a new candle, use last close as open\n\t\t\t_lastBar = {\n\t\t\t\ttime: rounded,\n\t\t\t\topen: lastBar.close,\n\t\t\t\thigh: lastBar.close,\n\t\t\t\tlow: lastBar.close,\n\t\t\t\tclose: data.price,\n\t\t\t\tvolume: data.size\n\t\t\t};\n\t\t} else {\n\t\t\t// update lastBar candle!\n\t\t\tif (data.price < lastBar.low) {\n\t\t\t\tlastBar.low = data.price;\n\t\t\t} else if (data.price > lastBar.high) {\n\t\t\t\tlastBar.high = data.price;\n\t\t\t}\n\n\t\t\tlastBar.volume += data.size;\n\t\t\tlastBar.close = data.price;\n\t\t\t_lastBar = lastBar;\n\t\t}\n\t\tsub.listener(_lastBar);\n\t\tsub.lastBar = _lastBar;\n\t\tthis.setState({\n\t\t\tsub: sub\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.props.containerId}\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center'\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default TVChartContainer;\n"]},"metadata":{},"sourceType":"module"}