{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Deposit/index.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport { ICONS, BALANCE_ERROR } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport { getCurrencyFromName } from '../../utils/currency';\nimport { openContactForm, setSnackNotification } from '../../actions/appActions';\nimport { Button, MobileBarBack } from '../../components';\nimport { renderInformation, renderTitleSection } from '../Wallet/components';\nimport { generateBaseInformation, renderContent } from './utils';\n\nvar Deposit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Deposit, _Component);\n\n  function Deposit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Deposit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Deposit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      depositPrice: 0,\n      currency: '',\n      checked: false,\n      copied: false\n    };\n\n    _this.setCurrency = function (currencyName) {\n      var currency = getCurrencyFromName(currencyName);\n\n      if (currency) {\n        _this.setState({\n          currency: currency,\n          checked: false\n        }, function () {\n          _this.validateRoute(_this.props.routeParams.currency, _this.props.crypto_wallet, _this.props.coins);\n        });\n      } else {\n        _this.props.router.push('/wallet');\n      }\n    };\n\n    _this.validateRoute = function (currency, crypto_wallet, coins) {\n      if (coins[currency] && !crypto_wallet[currency]) {\n        _this.props.router.push('/wallet');\n      } else if (currency) {\n        _this.setState({\n          checked: true\n        });\n      }\n    };\n\n    _this.onCopy = function () {\n      _this.props.setSnackNotification({\n        icon: ICONS.COPY_NOTIFICATION,\n        content: STRINGS.COPY_SUCCESS_TEXT\n      });\n    };\n\n    _this.onGoBack = function () {\n      _this.props.router.push('/wallet');\n    };\n\n    return _this;\n  }\n\n  _createClass(Deposit, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.quoteData.error === BALANCE_ERROR) {\n        this.setState({\n          depositPrice: this.props.quoteData.data.price\n        });\n      }\n\n      if (this.props.verification_level) {\n        this.validateRoute(this.props.routeParams.currency, this.props.crypto_wallet, this.props.coins);\n      }\n\n      this.setCurrency(this.props.routeParams.currency);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n        this.setCurrency(nextProps.routeParams.currency);\n      } else if (!this.state.checked) {\n        if (nextProps.verification_level) {\n          this.validateRoute(nextProps.routeParams.currency, nextProps.crypto_wallet, this.props.coins);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          crypto_wallet = _this$props.crypto_wallet,\n          openContactForm = _this$props.openContactForm,\n          balance = _this$props.balance,\n          coins = _this$props.coins;\n      var _this$state = this.state,\n          currency = _this$state.currency,\n          checked = _this$state.checked,\n          copied = _this$state.copied;\n\n      if (!id || !currency || !checked) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      var mobileCopyAddress = crypto_wallet[\"\".concat(currency.toLowerCase())];\n\n      if (currency && currency === 'xrp') {\n        var temp = mobileCopyAddress.split(':');\n        mobileCopyAddress = temp[0] ? temp[0] : mobileCopyAddress;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, isMobile && React.createElement(MobileBarBack, {\n        onBackClick: this.onGoBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"presentation_container  apply_rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, !isMobile && renderTitleSection(currency, 'deposit', ICONS.DEPOSIT_BITCOIN, coins), React.createElement(\"div\", {\n        className: classnames('inner_container', 'with_border_top', 'with_border_bottom'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, renderInformation(currency, balance, openContactForm, generateBaseInformation, coins, 'deposit'), renderContent(currency, crypto_wallet, coins, this.onCopy), isMobile && React.createElement(CopyToClipboard, {\n        text: mobileCopyAddress,\n        onCopy: function onCopy() {\n          return _this2.setState({\n            copied: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onCopy,\n        label: copied ? STRINGS.SUCCESFUL_COPY : STRINGS.COPY_ADDRESS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Deposit;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    id: store.user.id,\n    crypto_wallet: store.user.crypto_wallet,\n    balance: store.user.balance,\n    activeLanguage: store.app.language,\n    quoteData: store.orderbook.quoteData,\n    coins: store.app.coins\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    openContactForm: bindActionCreators(openContactForm, dispatch),\n    setSnackNotification: bindActionCreators(setSnackNotification, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Deposit);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Deposit/index.js"],"names":["React","Component","classnames","CopyToClipboard","bindActionCreators","connect","isMobile","ICONS","BALANCE_ERROR","STRINGS","getCurrencyFromName","openContactForm","setSnackNotification","Button","MobileBarBack","renderInformation","renderTitleSection","generateBaseInformation","renderContent","Deposit","state","depositPrice","currency","checked","copied","setCurrency","currencyName","setState","validateRoute","props","routeParams","crypto_wallet","coins","router","push","onCopy","icon","COPY_NOTIFICATION","content","COPY_SUCCESS_TEXT","onGoBack","quoteData","error","data","price","verification_level","nextProps","id","balance","mobileCopyAddress","toLowerCase","temp","split","DEPOSIT_BITCOIN","SUCCESFUL_COPY","COPY_ADDRESS","mapStateToProps","store","user","activeLanguage","app","language","orderbook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport { ICONS, BALANCE_ERROR } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport { getCurrencyFromName } from '../../utils/currency';\n\nimport { openContactForm, setSnackNotification } from '../../actions/appActions';\n\nimport { Button, MobileBarBack } from '../../components';\nimport { renderInformation, renderTitleSection } from '../Wallet/components';\n\nimport { generateBaseInformation, renderContent } from './utils';\n\nclass Deposit extends Component {\n\tstate = {\n\t\tdepositPrice: 0,\n\t\tcurrency: '',\n\t\tchecked: false,\n\t\tcopied: false\n\t};\n\n\tcomponentWillMount() {\n\t\tif (this.props.quoteData.error === BALANCE_ERROR) {\n\t\t\tthis.setState({ depositPrice: this.props.quoteData.data.price });\n\t\t}\n\t\tif (this.props.verification_level) {\n\t\t\tthis.validateRoute(\n\t\t\t\tthis.props.routeParams.currency,\n\t\t\t\tthis.props.crypto_wallet,\n\t\t\t\tthis.props.coins\n\t\t\t);\n\t\t}\n\t\tthis.setCurrency(this.props.routeParams.currency);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n\t\t\tthis.setCurrency(nextProps.routeParams.currency);\n\t\t} else if (!this.state.checked) {\n\t\t\tif (nextProps.verification_level) {\n\t\t\t\tthis.validateRoute(\n\t\t\t\t\tnextProps.routeParams.currency,\n\t\t\t\t\tnextProps.crypto_wallet,\n\t\t\t\t\tthis.props.coins\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetCurrency = (currencyName) => {\n\t\tconst currency = getCurrencyFromName(currencyName);\n\t\tif (currency) {\n\t\t\tthis.setState({ currency, checked: false }, () => {\n\t\t\t\tthis.validateRoute(\n\t\t\t\t\tthis.props.routeParams.currency,\n\t\t\t\t\tthis.props.crypto_wallet,\n\t\t\t\t\tthis.props.coins\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.props.router.push('/wallet');\n\t\t}\n\t};\n\n\tvalidateRoute = (currency, crypto_wallet, coins) => {\n\t\tif (coins[currency] && !crypto_wallet[currency]) {\n\t\t\tthis.props.router.push('/wallet');\n\t\t} else if (currency) {\n\t\t\tthis.setState({ checked: true });\n\t\t}\n\t};\n\n\tonCopy = () => {\n\t\tthis.props.setSnackNotification({\n\t\t\ticon: ICONS.COPY_NOTIFICATION,\n\t\t\tcontent: STRINGS.COPY_SUCCESS_TEXT\n\t\t});\n\t};\n\n\tonGoBack = () => {\n\t\tthis.props.router.push('/wallet');\n\t};\n\n\trender() {\n\t\tconst { id, crypto_wallet, openContactForm, balance, coins } = this.props;\n\t\tconst { currency, checked, copied } = this.state;\n\n\t\tif (!id || !currency || !checked) {\n\t\t\treturn <div />;\n\t\t}\n\t\tlet mobileCopyAddress = crypto_wallet[`${currency.toLowerCase()}`];\n\t\tif (currency && currency === 'xrp') {\n\t\t\tconst temp = mobileCopyAddress.split(':');\n\t\t\tmobileCopyAddress = temp[0] ? temp[0] : mobileCopyAddress;\n\t\t }\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{isMobile && <MobileBarBack onBackClick={this.onGoBack}>\n\t\t\t\t</MobileBarBack> }\n\t\t\t\t<div className=\"presentation_container  apply_rtl\">\n\t\t\t\t\t{!isMobile &&\n\t\t\t\t\t\trenderTitleSection(currency, 'deposit', ICONS.DEPOSIT_BITCOIN, coins)}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t'inner_container',\n\t\t\t\t\t\t\t'with_border_top',\n\t\t\t\t\t\t\t'with_border_bottom'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderInformation(\n\t\t\t\t\t\t\tcurrency,\n\t\t\t\t\t\t\tbalance,\n\t\t\t\t\t\t\topenContactForm,\n\t\t\t\t\t\t\tgenerateBaseInformation,\n\t\t\t\t\t\t\tcoins,\n\t\t\t\t\t\t\t'deposit'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{renderContent(currency, crypto_wallet, coins, this.onCopy)}\n\t\t\t\t\t\t{isMobile && (\n\t\t\t\t\t\t\t<CopyToClipboard\n\t\t\t\t\t\t\t\ttext={mobileCopyAddress}\n\t\t\t\t\t\t\t\tonCopy={() => this.setState({ copied: true })}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={this.onCopy}\n\t\t\t\t\t\t\t\t\tlabel={copied ? STRINGS.SUCCESFUL_COPY : STRINGS.COPY_ADDRESS}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tid: store.user.id,\n\tcrypto_wallet: store.user.crypto_wallet,\n\tbalance: store.user.balance,\n\tactiveLanguage: store.app.language,\n\tquoteData: store.orderbook.quoteData,\n\tcoins: store.app.coins\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\topenContactForm: bindActionCreators(openContactForm, dispatch),\n\tsetSnackNotification: bindActionCreators(setSnackNotification, dispatch)\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Deposit);\n"]},"metadata":{},"sourceType":"module"}