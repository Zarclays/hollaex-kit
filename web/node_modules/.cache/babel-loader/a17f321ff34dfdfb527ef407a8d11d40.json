{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Form/FormFields/DropdownField.js\";\nimport React, { Component } from 'react';\nimport EventListener from 'react-event-listener';\nimport classnames from 'classnames';\nimport keycode from 'keycode';\nimport ReactSVG from 'react-svg';\nimport FieldWrapper from './FieldWrapper';\nimport STRINGS from '../../../config/localizedStrings';\n\nvar DropdownField =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropdownField, _Component);\n\n  function DropdownField() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropdownField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownField)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false,\n      visited: false,\n      selectedItem: undefined,\n      filter: ''\n    };\n\n    _this.onToogleOpen = function (event) {\n      event.preventDefault();\n\n      if (!_this.props.disabled) {\n        _this.onChangeOpen(!_this.state.isOpen);\n\n        if (_this.input && _this.props.autocomplete) {\n          setTimeout(function () {\n            _this.input.focus();\n          }, 150);\n        }\n      }\n    };\n\n    _this.onChangeOpen = function () {\n      var isOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      _this.setState({\n        isOpen: isOpen,\n        visited: true\n      });\n    };\n\n    _this.onSelectOption = function (option) {\n      var change = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return function () {\n        if (option.value === undefined) {\n          _this.setState({\n            isOpen: false,\n            filter: ''\n          });\n        } else {\n          _this.setState({\n            selectedItem: option,\n            isOpen: false,\n            filter: ''\n          });\n\n          if (change) {\n            _this.props.input.onChange(option.value);\n          }\n        }\n      };\n    };\n\n    _this.setValue = function (value) {\n      var change = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var option = _this.props.options.find(function (option) {\n        return option.value === value;\n      });\n\n      if (option) {\n        _this.onSelectOption(option, change)();\n      } else {\n        _this.onChangeOpen(false);\n      }\n    };\n\n    _this.setValueByLabel = function (label) {\n      var option = _this.props.options.find(_this.filterOption(label));\n\n      if (option) {\n        _this.onSelectOption(option)();\n      } else {\n        _this.onChangeOpen(false);\n      }\n    };\n\n    _this.renderIcon = function (_ref) {\n      var _ref$icon = _ref.icon,\n          icon = _ref$icon === void 0 ? '' : _ref$icon,\n          _ref$label = _ref.label,\n          label = _ref$label === void 0 ? '' : _ref$label;\n\n      if (icon && typeof icon === 'string') {\n        return icon.indexOf('.svg') > 0 ? React.createElement(ReactSVG, {\n          path: icon,\n          alt: label,\n          wrapperClassName: classnames(\"icon\", \"option-icon\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }) : React.createElement(\"img\", {\n          className: \"icon\",\n          src: icon,\n          alt: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      }\n\n      return icon;\n    };\n\n    _this.renderOption = function (option, index) {\n      return React.createElement(\"div\", {\n        id: \"\".concat(_this.props.input.name, \"-\").concat(option.value, \"-\").concat(index),\n        key: \"\".concat(_this.props.input.name, \"-\").concat(option.value, \"-\").concat(index),\n        onClick: _this.onSelectOption(option),\n        className: classnames('dropdown-option', {\n          pointer: !_this.props.disabled\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, _this.renderIcon(option), option.label);\n    };\n\n    _this.renderOptions = function (options) {\n      return React.createElement(\"div\", {\n        className: classnames('dropdown-options-wrapper'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, options.length > 0 ? options.map(_this.renderOption) : _this.renderOption({\n        value: undefined,\n        label: STRINGS.NO_OPTIONS\n      }, 0));\n    };\n\n    _this.clickAwayListener = function (event) {\n      if (_this.state.isOpen && !event.target.id && event.target.className.indexOf('dropdown') === -1) {\n        _this.onChangeOpen(false);\n      }\n    };\n\n    _this.onChangeAutocomplete = function (event) {\n      var filter = event.target.value;\n\n      _this.setState({\n        filter: filter\n      });\n    };\n\n    _this.filterOption = function (filter) {\n      var filterLC = filter.toLowerCase();\n      return function (option) {\n        var label = option.label.toLowerCase();\n        return label.indexOf(filterLC) !== -1;\n      };\n    };\n\n    _this.setRefInput = function (el) {\n      _this.input = el;\n    };\n\n    _this.onKeyDownHandler = function (event) {\n      switch (keycode(event)) {\n        case 'esc':\n          _this.onChangeOpen(false);\n\n          break;\n\n        case 'enter':\n          _this.setValueByLabel(_this.state.filter);\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DropdownField, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.input.value || this.props.input.value === false) {\n        this.setValue(this.props.input.value);\n      } else if (this.props.defaultValue || this.props.defaultValue === false) {\n        this.setValue(this.props.defaultValue, true);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.input.value !== this.props.input.value) {\n        this.setValue(nextProps.input.value);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          options = _this$props.options,\n          placeholder = _this$props.placeholder,\n          autocomplete = _this$props.autocomplete,\n          disabled = _this$props.disabled;\n      var _this$state = this.state,\n          isOpen = _this$state.isOpen,\n          selectedItem = _this$state.selectedItem,\n          filter = _this$state.filter,\n          visited = _this$state.visited;\n      var filteredOptions = autocomplete ? options.filter(this.filterOption(filter)) : options;\n      return React.createElement(FieldWrapper, Object.assign({}, this.props, {\n        focused: isOpen,\n        visited: visited,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(EventListener, {\n        target: \"document\",\n        onClick: this.clickAwayListener,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), autocomplete && isOpen && React.createElement(EventListener, {\n        target: \"document\",\n        onKeyDown: this.onKeyDownHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classnames('dropdown-content', {\n          'dropdown-triangle': !disabled,\n          disabled: disabled\n        }),\n        onClick: this.onToogleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, autocomplete && React.createElement(\"input\", {\n        id: \"input-autocomplete\",\n        className: classnames('input_field-input', {\n          hidden: !isOpen\n        }),\n        type: \"text\",\n        onChange: this.onChangeAutocomplete,\n        placeholder: placeholder,\n        ref: this.setRefInput,\n        value: filter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), selectedItem && !isOpen ? this.renderOption(selectedItem) : React.createElement(\"div\", {\n        className: classnames('dropdown-placeholder placeholder', {\n          hidden: autocomplete && isOpen\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, placeholder)), isOpen && this.renderOptions(filteredOptions));\n    }\n  }]);\n\n  return DropdownField;\n}(Component);\n\nDropdownField.defaultProps = {\n  autocomplete: false\n};\nexport default DropdownField;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Form/FormFields/DropdownField.js"],"names":["React","Component","EventListener","classnames","keycode","ReactSVG","FieldWrapper","STRINGS","DropdownField","state","isOpen","visited","selectedItem","undefined","filter","onToogleOpen","event","preventDefault","props","disabled","onChangeOpen","input","autocomplete","setTimeout","focus","setState","onSelectOption","option","change","value","onChange","setValue","options","find","setValueByLabel","label","filterOption","renderIcon","icon","indexOf","renderOption","index","name","pointer","renderOptions","length","map","NO_OPTIONS","clickAwayListener","target","id","className","onChangeAutocomplete","filterLC","toLowerCase","setRefInput","el","onKeyDownHandler","defaultValue","nextProps","placeholder","filteredOptions","hidden","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport EventListener from 'react-event-listener';\nimport classnames from 'classnames';\nimport keycode from 'keycode';\nimport ReactSVG from 'react-svg'\nimport FieldWrapper from './FieldWrapper';\nimport STRINGS from '../../../config/localizedStrings';\n\nclass DropdownField extends Component {\n\tstate = {\n\t\tisOpen: false,\n\t\tvisited: false,\n\t\tselectedItem: undefined,\n\t\tfilter: ''\n\t};\n\n\tcomponentWillMount() {\n\t\tif (this.props.input.value || this.props.input.value === false) {\n\t\t\tthis.setValue(this.props.input.value);\n\t\t} else if (this.props.defaultValue || this.props.defaultValue === false) {\n\t\t\tthis.setValue(this.props.defaultValue, true);\n\t\t}\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.input.value !== this.props.input.value) {\n\t\t\tthis.setValue(nextProps.input.value);\n\t\t}\n\t}\n\n\tonToogleOpen = (event) => {\n\t\tevent.preventDefault();\n\t\tif (!this.props.disabled) {\n\t\t\tthis.onChangeOpen(!this.state.isOpen);\n\t\t\tif (this.input && this.props.autocomplete) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.input.focus();\n\t\t\t\t}, 150);\n\t\t\t}\n\t\t}\n\t};\n\n\tonChangeOpen = (isOpen = false) => {\n\t\tthis.setState({ isOpen, visited: true });\n\t};\n\n\tonSelectOption = (option, change = true) => () => {\n\t\tif (option.value === undefined) {\n\t\t\tthis.setState({ isOpen: false, filter: '' });\n\t\t} else {\n\t\t\tthis.setState({ selectedItem: option, isOpen: false, filter: '' });\n\t\t\tif (change) {\n\t\t\t\tthis.props.input.onChange(option.value);\n\t\t\t}\n\t\t}\n\t};\n\n\tsetValue = (value, change = false) => {\n\t\tconst option = this.props.options.find((option) => option.value === value);\n\t\tif (option) {\n\t\t\tthis.onSelectOption(option, change)();\n\t\t} else {\n\t\t\tthis.onChangeOpen(false);\n\t\t}\n\t};\n\n\tsetValueByLabel = (label) => {\n\t\tconst option = this.props.options.find(this.filterOption(label));\n\t\tif (option) {\n\t\t\tthis.onSelectOption(option)();\n\t\t} else {\n\t\t\tthis.onChangeOpen(false);\n\t\t}\n\t};\n\n\trenderIcon = ({ icon = '', label = '' }) => {\n\t\tif (icon && typeof icon === 'string') {\n\t\t\treturn icon.indexOf('.svg') > 0\n\t\t\t\t? <ReactSVG path={icon} alt={label} wrapperClassName={classnames(\"icon\", \"option-icon\")} />\n\t\t\t\t: <img className=\"icon\" src={icon} alt={label} />;\n\t\t}\n\t\treturn icon;\n\t};\n\n\trenderOption = (option, index) => (\n\t\t<div\n\t\t\tid={`${this.props.input.name}-${option.value}-${index}`}\n\t\t\tkey={`${this.props.input.name}-${option.value}-${index}`}\n\t\t\tonClick={this.onSelectOption(option)}\n\t\t\tclassName={classnames('dropdown-option', {\n\t\t\t\tpointer: !this.props.disabled\n\t\t\t})}\n\t\t>\n\t\t\t{this.renderIcon(option)}\n\t\t\t{option.label}\n\t\t</div>\n\t);\n\n\trenderOptions = (options) => (\n\t\t<div className={classnames('dropdown-options-wrapper')}>\n\t\t\t{options.length > 0\n\t\t\t\t? options.map(this.renderOption)\n\t\t\t\t: this.renderOption({ value: undefined, label: STRINGS.NO_OPTIONS }, 0)}\n\t\t</div>\n\t);\n\n\tclickAwayListener = (event) => {\n\t\tif (\n\t\t\tthis.state.isOpen &&\n\t\t\t!event.target.id &&\n\t\t\tevent.target.className.indexOf('dropdown') === -1\n\t\t) {\n\t\t\tthis.onChangeOpen(false);\n\t\t}\n\t};\n\n\tonChangeAutocomplete = (event) => {\n\t\tconst filter = event.target.value;\n\t\tthis.setState({ filter });\n\t};\n\n\tfilterOption = (filter) => {\n\t\tconst filterLC = filter.toLowerCase();\n\t\treturn (option) => {\n\t\t\tconst label = option.label.toLowerCase();\n\t\t\treturn label.indexOf(filterLC) !== -1;\n\t\t};\n\t};\n\n\tsetRefInput = (el) => {\n\t\tthis.input = el;\n\t};\n\n\tonKeyDownHandler = (event) => {\n\t\tswitch (keycode(event)) {\n\t\t\tcase 'esc':\n\t\t\t\tthis.onChangeOpen(false);\n\t\t\t\tbreak;\n\t\t\tcase 'enter':\n\t\t\t\tthis.setValueByLabel(this.state.filter);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\trender() {\n\t\tconst { options, placeholder, autocomplete, disabled } = this.props;\n\t\tconst { isOpen, selectedItem, filter, visited } = this.state;\n\n\t\tconst filteredOptions = autocomplete\n\t\t\t? options.filter(this.filterOption(filter))\n\t\t\t: options;\n\t\treturn (\n\t\t\t<FieldWrapper {...this.props} focused={isOpen} visited={visited}>\n\t\t\t\t<EventListener target=\"document\" onClick={this.clickAwayListener} />\n\t\t\t\t{autocomplete &&\n\t\t\t\t\tisOpen && (\n\t\t\t\t\t\t<EventListener\n\t\t\t\t\t\t\ttarget=\"document\"\n\t\t\t\t\t\t\tonKeyDown={this.onKeyDownHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t<div\n\t\t\t\t\tclassName={classnames('dropdown-content', {\n\t\t\t\t\t\t'dropdown-triangle': !disabled,\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t})}\n\t\t\t\t\tonClick={this.onToogleOpen}\n\t\t\t\t>\n\t\t\t\t\t{autocomplete && (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"input-autocomplete\"\n\t\t\t\t\t\t\tclassName={classnames('input_field-input', { hidden: !isOpen })}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={this.onChangeAutocomplete}\n\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\tref={this.setRefInput}\n\t\t\t\t\t\t\tvalue={filter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{selectedItem && !isOpen ? (\n\t\t\t\t\t\tthis.renderOption(selectedItem)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classnames('dropdown-placeholder placeholder', {\n\t\t\t\t\t\t\t\thidden: autocomplete && isOpen\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{placeholder}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{isOpen && this.renderOptions(filteredOptions)}\n\t\t\t</FieldWrapper>\n\t\t);\n\t}\n}\n\nDropdownField.defaultProps = {\n\tautocomplete: false\n};\nexport default DropdownField;\n"]},"metadata":{},"sourceType":"module"}