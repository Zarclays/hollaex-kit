{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/CsvDownload/index.js\";\nimport React from 'react';\nimport { CSVLink as ReactCsvDownaload } from 'react-csv';\nvar SEPARATOR = ';';\nvar EXTENSION = '.csv';\n\nvar generateFilename = function generateFilename() {\n  var filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  if (!filename) {\n    return \"data\".concat(EXTENSION);\n  } else if (filename.indexOf(EXTENSION) > 0) {\n    return filename;\n  } else {\n    return \"\".concat(filename).concat(EXTENSION);\n  }\n};\n\nvar processHeaders = function processHeaders(headers) {\n  return headers.filter(function (_ref) {\n    var exportToCsv = _ref.exportToCsv;\n    return exportToCsv;\n  }).map(function (_ref2) {\n    var label = _ref2.label;\n    return label;\n  });\n};\n\nvar processData = function processData(headers, data) {\n  return data.map(function (item) {\n    return headers.filter(function (_ref3) {\n      var exportToCsv = _ref3.exportToCsv;\n      return exportToCsv;\n    }).map(function (_ref4) {\n      var key = _ref4.key,\n          exportToCsv = _ref4.exportToCsv;\n      return exportToCsv(item);\n    });\n  });\n};\n\nvar CSVDownload = function CSVDownload(_ref5) {\n  var children = _ref5.children,\n      data = _ref5.data,\n      headers = _ref5.headers,\n      filename = _ref5.filename;\n  return React.createElement(ReactCsvDownaload, {\n    filename: generateFilename(filename),\n    data: processData(headers, data),\n    headers: processHeaders(headers),\n    target: \"_blank\",\n    separator: SEPARATOR,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, children);\n};\n\nCSVDownload.defaultProps = {\n  data: [],\n  headers: []\n};\nexport default CSVDownload;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/CsvDownload/index.js"],"names":["React","CSVLink","ReactCsvDownaload","SEPARATOR","EXTENSION","generateFilename","filename","indexOf","processHeaders","headers","filter","exportToCsv","map","label","processData","data","item","key","CSVDownload","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAO,IAAIC,iBAApB,QAA6C,WAA7C;AAEA,IAAMC,SAAS,GAAG,GAAlB;AACA,IAAMC,SAAS,GAAG,MAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AAC3C,MAAI,CAACA,QAAL,EAAe;AACd,yBAAcF,SAAd;AACA,GAFD,MAEO,IAAIE,QAAQ,CAACC,OAAT,CAAiBH,SAAjB,IAA8B,CAAlC,EAAqC;AAC3C,WAAOE,QAAP;AACA,GAFM,MAEA;AACN,qBAAUA,QAAV,SAAqBF,SAArB;AACA;AACD,CARD;;AAUA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;AAAA,SACtBA,OAAO,CAACC,MAAR,CAAe;AAAA,QAAGC,WAAH,QAAGA,WAAH;AAAA,WAAqBA,WAArB;AAAA,GAAf,EAAiDC,GAAjD,CAAqD;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAf;AAAA,GAArD,CADsB;AAAA,CAAvB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACL,OAAD,EAAUM,IAAV;AAAA,SACnBA,IAAI,CAACH,GAAL,CAAS,UAACI,IAAD;AAAA,WACRP,OAAO,CACLC,MADF,CACS;AAAA,UAAGC,WAAH,SAAGA,WAAH;AAAA,aAAqBA,WAArB;AAAA,KADT,EAEEC,GAFF,CAEM;AAAA,UAAGK,GAAH,SAAGA,GAAH;AAAA,UAAQN,WAAR,SAAQA,WAAR;AAAA,aAA0BA,WAAW,CAACK,IAAD,CAArC;AAAA,KAFN,CADQ;AAAA,GAAT,CADmB;AAAA,CAApB;;AAOA,IAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaJ,IAAb,SAAaA,IAAb;AAAA,MAAmBN,OAAnB,SAAmBA,OAAnB;AAAA,MAA4BH,QAA5B,SAA4BA,QAA5B;AAAA,SACnB,oBAAC,iBAAD;AACC,IAAA,QAAQ,EAAED,gBAAgB,CAACC,QAAD,CAD3B;AAEC,IAAA,IAAI,EAAEQ,WAAW,CAACL,OAAD,EAAUM,IAAV,CAFlB;AAGC,IAAA,OAAO,EAAEP,cAAc,CAACC,OAAD,CAHxB;AAIC,IAAA,MAAM,EAAC,QAJR;AAKC,IAAA,SAAS,EAAEN,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEgB,QAPF,CADmB;AAAA,CAApB;;AAYAD,WAAW,CAACE,YAAZ,GAA2B;AAC1BL,EAAAA,IAAI,EAAE,EADoB;AAE1BN,EAAAA,OAAO,EAAE;AAFiB,CAA3B;AAKA,eAAeS,WAAf","sourcesContent":["import React from 'react';\nimport { CSVLink as ReactCsvDownaload } from 'react-csv';\n\nconst SEPARATOR = ';';\nconst EXTENSION = '.csv';\n\nconst generateFilename = (filename = '') => {\n\tif (!filename) {\n\t\treturn `data${EXTENSION}`;\n\t} else if (filename.indexOf(EXTENSION) > 0) {\n\t\treturn filename;\n\t} else {\n\t\treturn `${filename}${EXTENSION}`;\n\t}\n};\n\nconst processHeaders = (headers) =>\n\theaders.filter(({ exportToCsv }) => exportToCsv).map(({ label }) => label);\n\nconst processData = (headers, data) =>\n\tdata.map((item) =>\n\t\theaders\n\t\t\t.filter(({ exportToCsv }) => exportToCsv)\n\t\t\t.map(({ key, exportToCsv }) => exportToCsv(item))\n\t);\n\nconst CSVDownload = ({ children, data, headers, filename }) => (\n\t<ReactCsvDownaload\n\t\tfilename={generateFilename(filename)}\n\t\tdata={processData(headers, data)}\n\t\theaders={processHeaders(headers)}\n\t\ttarget=\"_blank\"\n\t\tseparator={SEPARATOR}\n\t>\n\t\t{children}\n\t</ReactCsvDownaload>\n);\n\nCSVDownload.defaultProps = {\n\tdata: [],\n\theaders: []\n};\n\nexport default CSVDownload;\n"]},"metadata":{},"sourceType":"module"}