{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Notification/Order.js\";\nimport React from 'react';\nimport math from 'mathjs';\nimport { connect } from 'react-redux';\nimport { ICONS, BASE_CURRENCY, CURRENCY_PRICE_FORMAT, DEFAULT_COIN_DATA } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport { formatBtcAmount, formatToCurrency } from '../../utils/currency';\nimport { NotificationWraper, NotificationContent, InformationRow } from './Notification';\nvar SIDE_BUY = 'buy';\nexport var getTitleAndIcon = function getTitleAndIcon(type, _ref) {\n  var side = _ref.side,\n      filled = _ref.filled;\n  var data = {\n    icon: '',\n    title: '',\n    onBack: true\n  };\n\n  if (type === 'order_added') {\n    if (filled === 0) {\n      data.icon = side === SIDE_BUY ? ICONS.TRADE_FILLED_SUCESSFUL : ICONS.TRADE_FILLED_SUCESSFUL;\n      data.title = STRINGS.formatString(STRINGS.ORDER_TITLE_CREATED, STRINGS.SIDES_VALUES[side]);\n    } else {\n      data.icon = side === SIDE_BUY ? ICONS.TRADE_PARTIALLY_FILLED : ICONS.TRADE_PARTIALLY_FILLED;\n      data.title = STRINGS.formatString(STRINGS.ORDER_TITLE_PARTIALLY_FILLED, React.createElement(\"span\", {\n        className: \"text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, STRINGS.SIDES_VALUES[side]));\n    }\n  } else if (type === 'order_filled' || type === 'order_partialy_filled') {\n    data.icon = side === SIDE_BUY ? ICONS.TRADE_FILLED_SUCESSFUL : ICONS.TRADE_FILLED_SUCESSFUL;\n    data.title = STRINGS.formatString(STRINGS.ORDER_TITLE_FULLY_FILLED, React.createElement(\"span\", {\n      className: \"text-capitalize\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, STRINGS.SIDES_VALUES[side]));\n  }\n\n  return data;\n};\nexport var generateRows = function generateRows(type, order, pairs, coins) {\n  var rows = [];\n  var pair = pairs[order.symbol];\n\n  var _ref2 = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA,\n      min = _ref2.min;\n\n  var baseValue = coins[pair.pair_base] || DEFAULT_COIN_DATA;\n  var payValue = coins[pair.pair_2] || DEFAULT_COIN_DATA;\n  var btcValue = coins['btc'] || DEFAULT_COIN_DATA;\n\n  if (type === 'order_added' && order.filled === 0) {\n    rows.push({\n      label: STRINGS.SIZE,\n      value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatBtcAmount(order.size), baseValue.symbol.toUpperCase())\n    });\n    rows.push({\n      label: STRINGS.PRICE,\n      value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatToCurrency(order.price, min), payValue.symbol.toUpperCase())\n    });\n  } else {\n    var size = math.fraction(order.size);\n    var filled = math.fraction(order.filled);\n    var orderValue = math.multiply(filled, math.fraction(order.price));\n    var remaining = math.subtract(size, filled);\n    rows.push({\n      label: order.side === SIDE_BUY ? STRINGS.ORDER_BOUGHT : STRINGS.ORDER_SOLD,\n      value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatBtcAmount(order.filled), baseValue.symbol.toUpperCase())\n    });\n    rows.push({\n      label: STRINGS.PRICE,\n      value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatToCurrency(order.price, min), payValue.symbol.toUpperCase())\n    });\n    rows.push({\n      label: order.side === SIDE_BUY ? STRINGS.ORDER_SPENT : STRINGS.ORDER_RECEIVED,\n      value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatToCurrency(orderValue, min), payValue.symbol.toUpperCase())\n    });\n\n    if (type === 'order_added') {\n      rows.push({\n        label: STRINGS.REMAINING,\n        value: STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatBtcAmount(remaining), btcValue.symbol.toUpperCase())\n      });\n    }\n  }\n\n  return rows;\n};\nexport var OrderDisplay = function OrderDisplay(_ref3) {\n  var rows = _ref3.rows;\n  return React.createElement(NotificationContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, rows.map(function (row, index) {\n    return React.createElement(InformationRow, Object.assign({}, row, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar OrderNotification = function OrderNotification(_ref4) {\n  var type = _ref4.type,\n      data = _ref4.data,\n      pairs = _ref4.pairs,\n      coins = _ref4.coins,\n      onClose = _ref4.onClose;\n  var notificationProps = getTitleAndIcon(type, data);\n  var rows = generateRows(type, data, pairs, coins);\n  return React.createElement(NotificationWraper, Object.assign({}, notificationProps, {\n    onClose: onClose,\n    className: \"order-notification\",\n    compressOnMobile: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(OrderDisplay, {\n    rows: rows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pairs: state.app.pairs,\n    coins: state.app.coins\n  };\n};\n\nexport default connect(mapStateToProps)(OrderNotification);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Notification/Order.js"],"names":["React","math","connect","ICONS","BASE_CURRENCY","CURRENCY_PRICE_FORMAT","DEFAULT_COIN_DATA","STRINGS","formatBtcAmount","formatToCurrency","NotificationWraper","NotificationContent","InformationRow","SIDE_BUY","getTitleAndIcon","type","side","filled","data","icon","title","onBack","TRADE_FILLED_SUCESSFUL","formatString","ORDER_TITLE_CREATED","SIDES_VALUES","TRADE_PARTIALLY_FILLED","ORDER_TITLE_PARTIALLY_FILLED","ORDER_TITLE_FULLY_FILLED","generateRows","order","pairs","coins","rows","pair","symbol","min","baseValue","pair_base","payValue","pair_2","btcValue","push","label","SIZE","value","size","toUpperCase","PRICE","price","fraction","orderValue","multiply","remaining","subtract","ORDER_BOUGHT","ORDER_SOLD","ORDER_SPENT","ORDER_RECEIVED","REMAINING","OrderDisplay","map","row","index","OrderNotification","onClose","notificationProps","mapStateToProps","state","app"],"mappings":"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","sourcesContent":["import React from 'react';\nimport math from 'mathjs';\nimport { connect } from 'react-redux';\nimport { ICONS, BASE_CURRENCY, CURRENCY_PRICE_FORMAT, DEFAULT_COIN_DATA } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\nimport { formatBtcAmount, formatToCurrency } from '../../utils/currency';\nimport {\n\tNotificationWraper,\n\tNotificationContent,\n\tInformationRow\n} from './Notification';\n\nconst SIDE_BUY = 'buy';\n\nexport const getTitleAndIcon = (type, { side, filled }) => {\n\tconst data = {\n\t\ticon: '',\n\t\ttitle: '',\n\t\tonBack: true,\n\t};\n\n\tif (type === 'order_added') {\n\t\tif (filled === 0) {\n\t\t\tdata.icon =\n\t\t\t\tside === SIDE_BUY\n\t\t\t\t\t? ICONS.TRADE_FILLED_SUCESSFUL\n\t\t\t\t\t: ICONS.TRADE_FILLED_SUCESSFUL;\n\t\t\tdata.title = STRINGS.formatString(\n\t\t\t\tSTRINGS.ORDER_TITLE_CREATED,\n\t\t\t\tSTRINGS.SIDES_VALUES[side]\n\t\t\t);\n\t\t} else {\n\t\t\tdata.icon =\n\t\t\t\tside === SIDE_BUY\n\t\t\t\t\t? ICONS.TRADE_PARTIALLY_FILLED\n\t\t\t\t\t: ICONS.TRADE_PARTIALLY_FILLED;\n\t\t\tdata.title = STRINGS.formatString(\n\t\t\t\tSTRINGS.ORDER_TITLE_PARTIALLY_FILLED,\n\t\t\t\t<span className=\"text-capitalize\">{STRINGS.SIDES_VALUES[side]}</span>\n\t\t\t);\n\t\t}\n\t} else if (type === 'order_filled' || type === 'order_partialy_filled') {\n\t\tdata.icon =\n\t\t\tside === SIDE_BUY\n\t\t\t\t? ICONS.TRADE_FILLED_SUCESSFUL\n\t\t\t\t: ICONS.TRADE_FILLED_SUCESSFUL;\n\t\tdata.title = STRINGS.formatString(\n\t\t\tSTRINGS.ORDER_TITLE_FULLY_FILLED,\n\t\t\t<span className=\"text-capitalize\">{STRINGS.SIDES_VALUES[side]}</span>\n\t\t);\n\t}\n\n\treturn data;\n};\n\nexport const generateRows = (type, order, pairs, coins) => {\n\tconst rows = [];\n\tconst pair = pairs[order.symbol];\n\tconst { min } = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\tconst baseValue = coins[pair.pair_base] || DEFAULT_COIN_DATA;\n\tconst payValue = coins[pair.pair_2] || DEFAULT_COIN_DATA;\n\tconst btcValue = coins['btc'] || DEFAULT_COIN_DATA;\n\n\tif (type === 'order_added' && order.filled === 0) {\n\t\trows.push({\n\t\t\tlabel: STRINGS.SIZE,\n\t\t\tvalue: STRINGS.formatString(\n\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\tformatBtcAmount(order.size),\n\t\t\t\tbaseValue.symbol.toUpperCase()\n\t\t\t)\n\t\t});\n\t\trows.push({\n\t\t\tlabel: STRINGS.PRICE,\n\t\t\tvalue: STRINGS.formatString(\n\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\tformatToCurrency(order.price, min),\n\t\t\t\tpayValue.symbol.toUpperCase()\n\t\t\t)\n\t\t});\n\t} else {\n\t\tconst size = math.fraction(order.size);\n\t\tconst filled = math.fraction(order.filled);\n\t\tconst orderValue = math.multiply(filled, math.fraction(order.price));\n\t\tconst remaining = math.subtract(size, filled);\n\n\t\trows.push({\n\t\t\tlabel:\n\t\t\t\torder.side === SIDE_BUY ? STRINGS.ORDER_BOUGHT : STRINGS.ORDER_SOLD,\n\t\t\tvalue: STRINGS.formatString(\n\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\tformatBtcAmount(order.filled),\n\t\t\t\tbaseValue.symbol.toUpperCase()\n\t\t\t)\n\t\t});\n\t\trows.push({\n\t\t\tlabel: STRINGS.PRICE,\n\t\t\tvalue: STRINGS.formatString(\n\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\tformatToCurrency(order.price, min),\n\t\t\t\tpayValue.symbol.toUpperCase()\n\t\t\t)\n\t\t});\n\t\trows.push({\n\t\t\tlabel:\n\t\t\t\torder.side === SIDE_BUY ? STRINGS.ORDER_SPENT : STRINGS.ORDER_RECEIVED,\n\t\t\tvalue: STRINGS.formatString(\n\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\tformatToCurrency(orderValue, min),\n\t\t\t\tpayValue.symbol.toUpperCase()\n\t\t\t)\n\t\t});\n\n\t\tif (type === 'order_added') {\n\t\t\trows.push({\n\t\t\t\tlabel: STRINGS.REMAINING,\n\t\t\t\tvalue: STRINGS.formatString(\n\t\t\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\t\t\tformatBtcAmount(remaining),\n\t\t\t\t\tbtcValue.symbol.toUpperCase()\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\t}\n\n\treturn rows;\n};\n\nexport const OrderDisplay = ({ rows }) => {\n\treturn (\n\t\t<NotificationContent>\n\t\t\t{rows.map((row, index) => <InformationRow {...row} key={index} />)}\n\t\t</NotificationContent>\n\t);\n};\n\nconst OrderNotification = ({ type, data, pairs, coins, onClose }) => {\n\tconst notificationProps = getTitleAndIcon(type, data);\n\tconst rows = generateRows(type, data, pairs, coins);\n\n\treturn (\n\t\t<NotificationWraper\n\t\t\t{...notificationProps}\n\t\t\tonClose={onClose}\n\t\t\tclassName=\"order-notification\"\n\t\t\tcompressOnMobile={true}\n\t\t>\n\t\t\t<OrderDisplay rows={rows} />\n\t\t\t{/*<Button label=\"Go back to trade\" />*/}\n\t\t</NotificationWraper>\n\t);\n};\n\nconst mapStateToProps = state => ({\n\tpairs: state.app.pairs,\n\tcoins: state.app.coins,\n});\n\nexport default connect(mapStateToProps)(OrderNotification);\n"]},"metadata":{},"sourceType":"module"}