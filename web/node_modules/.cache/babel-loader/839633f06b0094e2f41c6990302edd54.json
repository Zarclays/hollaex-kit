{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Logins/index.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Table, Spin } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport { requestUserLogins } from './actions';\nimport { SubmissionError } from 'redux-form';\nimport Moment from 'react-moment';\nvar INITIAL_STATE = {\n  tradeHistory: '',\n  loading: true\n};\n\nvar formatDate = function formatDate(value) {\n  return React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, value);\n};\n\nvar LOGIN_COLUMNS = [{\n  title: 'IP',\n  dataIndex: 'ip',\n  key: 'ip'\n}, {\n  title: 'Device',\n  dataIndex: 'device',\n  key: 'device'\n}, {\n  title: 'Domain',\n  dataIndex: 'domain',\n  key: 'domain'\n}, {\n  title: 'Time',\n  dataIndex: 'timestamp',\n  key: 'timestamp',\n  render: formatDate\n}];\nvar SCV_LOGIN_COLUMNS = [{\n  label: 'IP',\n  dataIndex: 'ip',\n  key: 'ip'\n}, {\n  label: 'Device',\n  dataIndex: 'device',\n  key: 'device'\n}, {\n  label: 'Domain',\n  dataIndex: 'domain',\n  key: 'domain'\n}, {\n  label: 'Time',\n  dataIndex: 'timestamp',\n  key: 'timestamp'\n}];\n\nvar Logins =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Logins, _Component);\n\n  function Logins() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Logins);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Logins)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = INITIAL_STATE;\n\n    _this.componentWillMount = function () {\n      if (_this.props.userId) {\n        _this.handleUserLogins(_this.props.userId);\n      }\n    };\n\n    _this.handleUserLogins = function (userId) {\n      requestUserLogins(userId).then(function (res) {\n        if (res) {\n          _this.setState({\n            logins: res.data,\n            loading: false\n          });\n        }\n      }).catch(function (err) {\n        if (err.status === 403) {\n          _this.setState({\n            loading: false\n          });\n        }\n\n        throw new SubmissionError({\n          _error: err.data.message\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Logins, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          logins = _this$state.logins,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"app_container-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Spin, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Row, {\n        gutter: 16,\n        style: {\n          marginTop: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        filename: 'logins-history.csv',\n        data: logins ? logins : 'No Data',\n        headers: SCV_LOGIN_COLUMNS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Download table\"), React.createElement(\"span\", {\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Number of logins:\", logins ? logins.length : null), React.createElement(Table, {\n        columns: LOGIN_COLUMNS,\n        dataSource: logins ? logins : 'No Data',\n        rowKey: function rowKey(data) {\n          return data.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Logins;\n}(Component);\n\nexport default Logins;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Logins/index.js"],"names":["React","Component","Row","Col","Table","Spin","CSVLink","requestUserLogins","SubmissionError","Moment","INITIAL_STATE","tradeHistory","loading","formatDate","value","LOGIN_COLUMNS","title","dataIndex","key","render","SCV_LOGIN_COLUMNS","label","Logins","state","componentWillMount","props","userId","handleUserLogins","then","res","setState","logins","data","catch","err","status","_error","message","marginTop","float","length","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Table, Spin } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport { requestUserLogins } from './actions';\n\nimport { SubmissionError } from 'redux-form';\n\nimport Moment from 'react-moment';\n\nconst INITIAL_STATE = {\n\ttradeHistory: '',\n\tloading: true\n};\n\nconst formatDate = (value) => {\n\treturn <Moment format=\"YYYY/MM/DD HH:mm\">{value}</Moment>;\n};\n\nconst LOGIN_COLUMNS = [\n\t{ title: 'IP', dataIndex: 'ip', key: 'ip' },\n\t{ title: 'Device', dataIndex: 'device', key: 'device' },\n\t{ title: 'Domain', dataIndex: 'domain', key: 'domain' },\n\t{\n\t\ttitle: 'Time',\n\t\tdataIndex: 'timestamp',\n\t\tkey: 'timestamp',\n\t\trender: formatDate\n\t}\n];\nconst SCV_LOGIN_COLUMNS = [\n\t{ label: 'IP', dataIndex: 'ip', key: 'ip' },\n\t{ label: 'Device', dataIndex: 'device', key: 'device' },\n\t{ label: 'Domain', dataIndex: 'domain', key: 'domain' },\n\t{ label: 'Time', dataIndex: 'timestamp', key: 'timestamp' }\n];\n\nclass Logins extends Component {\n\tstate = INITIAL_STATE;\n\n\tcomponentWillMount = () => {\n\t\tif (this.props.userId) {\n\t\t\tthis.handleUserLogins(this.props.userId);\n\t\t}\n\t};\n\n\thandleUserLogins = (userId) => {\n\t\trequestUserLogins(userId)\n\t\t\t.then((res) => {\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tlogins: res.data,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.status === 403) {\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t}\n\t\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { logins, loading } = this.state;\n\n\t\tif (loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"app_container-content\">\n\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Row gutter={16} style={{ marginTop: 16 }}>\n\t\t\t\t<Col>\n\t\t\t\t\t<CSVLink\n\t\t\t\t\t\tfilename={'logins-history.csv'}\n\t\t\t\t\t\tdata={logins ? logins : 'No Data'}\n\t\t\t\t\t\theaders={SCV_LOGIN_COLUMNS}\n\t\t\t\t\t>\n\t\t\t\t\t\tDownload table\n\t\t\t\t\t</CSVLink>\n\t\t\t\t\t<span style={{ float: 'right' }}>\n\t\t\t\t\t\tNumber of logins:{logins ? logins.length : null}\n\t\t\t\t\t</span>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcolumns={LOGIN_COLUMNS}\n\t\t\t\t\t\tdataSource={logins ? logins : 'No Data'}\n\t\t\t\t\t\trowKey={(data) => {\n\t\t\t\t\t\t\treturn data.id;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default Logins;\n"]},"metadata":{},"sourceType":"module"}