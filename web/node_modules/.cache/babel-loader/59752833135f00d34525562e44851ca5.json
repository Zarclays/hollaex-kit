{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Table/TableBody.js\";\nimport React from 'react';\nimport classnames from 'classnames';\n\nvar RENDER_CELL = function RENDER_CELL(row, key, cellIndex) {\n  return React.createElement(\"td\", {\n    key: cellIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, row[key]);\n};\n\nvar renderRow = function renderRow() {\n  var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var cancelDelayData = arguments.length > 1 ? arguments[1] : undefined;\n  return function (row, rowIndex) {\n    var isRemoveData = cancelDelayData.filter(function (data) {\n      return data === row.id;\n    });\n    return React.createElement(\"tr\", {\n      className: classnames('table_body-row', {\n        'cancel-row-color': !!isRemoveData.length\n      }),\n      key: \"row_\".concat(rowIndex),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, headers.map(function (_ref, cellIndex) {\n      var key = _ref.key,\n          _ref$renderCell = _ref.renderCell,\n          renderCell = _ref$renderCell === void 0 ? RENDER_CELL : _ref$renderCell;\n      return renderCell(row, key, cellIndex);\n    }));\n  };\n};\n\nvar TableBody = function TableBody(_ref2) {\n  var withIcon = _ref2.withIcon,\n      data = _ref2.data,\n      headers = _ref2.headers,\n      cancelDelayData = _ref2.cancelDelayData;\n  return React.createElement(\"tbody\", {\n    className: classnames('table_body-wrapper', {\n      with_icon: withIcon || false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, data.map(renderRow(headers, cancelDelayData)));\n};\n\nexport default TableBody;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Table/TableBody.js"],"names":["React","classnames","RENDER_CELL","row","key","cellIndex","renderRow","headers","cancelDelayData","rowIndex","isRemoveData","filter","data","id","length","map","renderCell","TableBody","withIcon","with_icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,GAAN,EAAWC,SAAX;AAAA,SAAyB;AAAI,IAAA,GAAG,EAAEA,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,GAAG,CAACC,GAAD,CAAxB,CAAzB;AAAA,CAApB;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,MAACC,OAAD,uEAAW,EAAX;AAAA,MAAeC,eAAf;AAAA,SAAmC,UAACL,GAAD,EAAMM,QAAN,EAAmB;AACvE,QAAMC,YAAY,GAAGF,eAAe,CAACG,MAAhB,CAAuB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKT,GAAG,CAACU,EAAjB;AAAA,KAA3B,CAArB;AACD,WACE;AAAI,MAAA,SAAS,EAAEZ,UAAU,CAAC,gBAAD,EAAmB;AAAC,4BAAoB,CAAC,CAACS,YAAY,CAACI;AAApC,OAAnB,CAAzB;AAA2F,MAAA,GAAG,gBAASL,QAAT,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCF,OAAO,CAACQ,GAAR,CAAY,gBAAoCV,SAApC;AAAA,UAAGD,GAAH,QAAGA,GAAH;AAAA,iCAAQY,UAAR;AAAA,UAAQA,UAAR,gCAAqBd,WAArB;AAAA,aACZc,UAAU,CAACb,GAAD,EAAMC,GAAN,EAAWC,SAAX,CADE;AAAA,KAAZ,CADD,CADF;AAOC,GATiB;AAAA,CAAlB;;AAWA,IAAMY,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaN,IAAb,SAAaA,IAAb;AAAA,MAAmBL,OAAnB,SAAmBA,OAAnB;AAAA,MAA4BC,eAA5B,SAA4BA,eAA5B;AAAA,SACjB;AACC,IAAA,SAAS,EAAEP,UAAU,CAAC,oBAAD,EAAuB;AAC3CkB,MAAAA,SAAS,EAAED,QAAQ,IAAI;AADoB,KAAvB,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEN,IAAI,CAACG,GAAL,CAAST,SAAS,CAACC,OAAD,EAAUC,eAAV,CAAlB,CALF,CADiB;AAAA,CAAlB;;AASA,eAAeS,SAAf","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nconst RENDER_CELL = (row, key, cellIndex) => <td key={cellIndex}>{row[key]}</td>;\n\nconst renderRow = (headers = [], cancelDelayData) => (row, rowIndex) => {\n\tconst isRemoveData = cancelDelayData.filter(data => data === row.id);\nreturn (\n\t\t<tr className={classnames('table_body-row', {'cancel-row-color': !!isRemoveData.length}) } key={`row_${rowIndex}`}>\n\t\t{headers.map(({ key, renderCell = RENDER_CELL }, cellIndex) =>\n\t\t\trenderCell(row, key, cellIndex)\n\t\t)}\n\t</tr> \n\t);\n}\n\nconst TableBody = ({ withIcon, data, headers, cancelDelayData }) => \n\t<tbody\n\t\tclassName={classnames('table_body-wrapper', {\n\t\t\twith_icon: withIcon || false\n\t\t})}\n\t>\n\t\t{data.map(renderRow(headers, cancelDelayData))}\n\t</tbody> \n\nexport default TableBody;\n"]},"metadata":{},"sourceType":"module"}