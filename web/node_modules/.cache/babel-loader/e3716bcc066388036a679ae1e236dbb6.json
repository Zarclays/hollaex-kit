{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/ElapsedTimer/index.js\";\nimport React, { Component } from 'react';\nimport ReactSVG from 'react-svg';\nimport STRINGS from '../../config/localizedStrings';\nimport { ICONS } from '../../config/constants';\nvar timerInterval = '';\n\nvar ElapsedTimer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ElapsedTimer, _Component);\n\n  function ElapsedTimer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ElapsedTimer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ElapsedTimer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      seconds: _this.props.timeoutSeconds - 1\n    };\n\n    _this.startTimer = function () {\n      timerInterval = setInterval(function () {\n        _this.setState({\n          seconds: _this.state.seconds - 1\n        });\n      }, _this.props.intervalSeconds * 1000);\n    };\n\n    _this.endTimer = function () {\n      if (timerInterval) {\n        clearInterval(timerInterval);\n      }\n\n      _this.setState({\n        seconds: _this.props.timeoutSeconds\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ElapsedTimer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.isLoading) {\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.isLoading !== nextProps.isLoading) {\n        if (nextProps.isLoading) {\n          this.startTimer();\n        } else {\n          this.endTimer();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (nextState.seconds === 0) {\n        this.props.timeoutCallback();\n        this.endTimer();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.endTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          timerText = _this$props.timerText;\n\n      if (!isLoading) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"elapsed-timer-wrapper mb-4 d-flex align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timer-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, timerText, React.createElement(\"span\", {\n        className: \"timer-time mx-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.seconds, \" \", STRINGS.SECONDS)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ReactSVG, {\n        path: ICONS.PENDING_TIMER,\n        wrapperClassName: \"timer-svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ElapsedTimer;\n}(Component);\n\nElapsedTimer.defaultProps = {\n  isLoading: false,\n  timeoutSeconds: 60,\n  timerText: '',\n  intervalSeconds: 1\n};\nexport default ElapsedTimer;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/ElapsedTimer/index.js"],"names":["React","Component","ReactSVG","STRINGS","ICONS","timerInterval","ElapsedTimer","state","seconds","props","timeoutSeconds","startTimer","setInterval","setState","intervalSeconds","endTimer","clearInterval","isLoading","nextProps","nextState","timeoutCallback","timerText","SECONDS","PENDING_TIMER","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AAEA,IAAIC,aAAa,GAAG,EAApB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWC,cAAX,GAA4B;AADjC,K;;UA+BRC,U,GAAa,YAAM;AACfN,MAAAA,aAAa,GAAGO,WAAW,CAAC,YAAM;AAC9B,cAAKC,QAAL,CAAc;AAAEL,UAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAAX,GAAqB;AAAhC,SAAd;AACH,OAF0B,EAExB,MAAKC,KAAL,CAAWK,eAAX,GAA6B,IAFL,CAA3B;AAGH,K;;UAEDC,Q,GAAW,YAAM;AACb,UAAIV,aAAJ,EAAmB;AACfW,QAAAA,aAAa,CAACX,aAAD,CAAb;AACH;;AACD,YAAKQ,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWC;AAAtB,OAAd;AACH,K;;;;;;;wCAtCmB;AAChB,UAAI,KAAKD,KAAL,CAAWQ,SAAf,EAA0B;AACtB,aAAKN,UAAL;AACH;AACJ;;;8CAEyBO,S,EAAW;AACjC,UAAI,KAAKT,KAAL,CAAWQ,SAAX,KAAyBC,SAAS,CAACD,SAAvC,EAAkD;AAC9C,YAAIC,SAAS,CAACD,SAAd,EAAyB;AACrB,eAAKN,UAAL;AACH,SAFD,MAEO;AACH,eAAKI,QAAL;AACH;AACJ;AACJ;;;wCAEmBG,S,EAAWC,S,EAAW;AACtC,UAAIA,SAAS,CAACX,OAAV,KAAsB,CAA1B,EAA6B;AACzB,aAAKC,KAAL,CAAWW,eAAX;AACA,aAAKL,QAAL;AACH;AACJ;;;2CAEsB;AACnB,WAAKA,QAAL;AACH;;;6BAeQ;AAAA,wBAC4B,KAAKN,KADjC;AAAA,UACGQ,SADH,eACGA,SADH;AAAA,UACcI,SADd,eACcA,SADd;;AAEL,UAAI,CAACJ,SAAL,EAAgB;AACZ,eAAO,IAAP;AACH;;AACD,aACI;AAAK,QAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKI,SADL,EAEI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmC,KAAKd,KAAL,CAAWC,OAA9C,OAAwDL,OAAO,CAACmB,OAAhE,CAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAElB,KAAK,CAACmB,aAAtB;AAAqC,QAAA,gBAAgB,EAAC,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,CADJ;AAWH;;;;EA7DsBtB,S;;AAgE3BK,YAAY,CAACkB,YAAb,GAA4B;AACxBP,EAAAA,SAAS,EAAE,KADa;AAExBP,EAAAA,cAAc,EAAE,EAFQ;AAGxBW,EAAAA,SAAS,EAAE,EAHa;AAIxBP,EAAAA,eAAe,EAAE;AAJO,CAA5B;AAOA,eAAeR,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactSVG from 'react-svg';\n\nimport STRINGS from '../../config/localizedStrings';\nimport { ICONS } from '../../config/constants';\n\nlet timerInterval = '';\n\nclass ElapsedTimer extends Component {\n    state = {\n        seconds: this.props.timeoutSeconds - 1\n    }\n\n    componentDidMount() {\n        if (this.props.isLoading) {\n            this.startTimer();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.isLoading !== nextProps.isLoading) {\n            if (nextProps.isLoading) {\n                this.startTimer();\n            } else {\n                this.endTimer();\n            }\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (nextState.seconds === 0) {\n            this.props.timeoutCallback();\n            this.endTimer();\n        }\n    }\n    \n    componentWillUnmount() {\n        this.endTimer();\n    }\n\n    startTimer = () => {\n        timerInterval = setInterval(() => {\n            this.setState({ seconds: this.state.seconds - 1 });\n        }, this.props.intervalSeconds * 1000);\n    };\n\n    endTimer = () => {\n        if (timerInterval) {\n            clearInterval(timerInterval);\n        }\n        this.setState({ seconds: this.props.timeoutSeconds })\n    };\n\n    render() {\n        const { isLoading, timerText } = this.props;\n        if (!isLoading) {\n            return null;\n        }\n        return (\n            <div className=\"elapsed-timer-wrapper mb-4 d-flex align-items-center\">\n                <div className=\"timer-text\">\n                    {timerText}\n                    <span className=\"timer-time mx-1\">{this.state.seconds} {STRINGS.SECONDS}</span>\n                </div>\n                <div>\n                    <ReactSVG path={ICONS.PENDING_TIMER} wrapperClassName=\"timer-svg\" />\n                </div>\n            </div>\n        );\n    }\n}\n\nElapsedTimer.defaultProps = {\n    isLoading: false,\n    timeoutSeconds: 60,\n    timerText: '',\n    intervalSeconds: 1\n}\n\nexport default ElapsedTimer;"]},"metadata":{},"sourceType":"module"}