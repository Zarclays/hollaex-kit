{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/ResetPassword/index.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { SubmissionError } from 'redux-form';\nimport { resetPassword } from '../../actions/authAction';\nimport ResetPasswordForm from './ResetPasswordForm';\nimport ResetPasswordSuccess from './ResetPasswordSuccess';\nimport { IconTitle, Dialog } from '../../components';\nimport { ContactForm } from '../';\nimport { FLEX_CENTER_CLASSES, ICONS } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\n\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResetPassword, _Component);\n\n  function ResetPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResetPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResetPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      success: false,\n      showContactForm: false\n    };\n\n    _this.onSubmitResetPassword = function (_ref) {\n      var password = _ref.password;\n      var code = _this.props.params.code;\n      var values = {\n        code: code,\n        new_password: password\n      };\n      return resetPassword(values).then(function (res) {\n        _this.setState({\n          success: true\n        });\n      }).catch(function (error) {\n        var errors = {};\n\n        if (error.response) {\n          var _error$response$data$ = error.response.data.message,\n              message = _error$response$data$ === void 0 ? '' : _error$response$data$;\n\n          if (message.toLowerCase().indexOf('password') > -1) {\n            // TODO set error in constants for language\n            errors.password = message;\n          } else {\n            errors._error = message || error.message;\n          }\n        } else {\n          errors._error = error.message;\n        }\n\n        throw new SubmissionError(errors);\n      });\n    };\n\n    _this.onOpenDialog = function () {\n      _this.setState({\n        showContactForm: true\n      });\n    };\n\n    _this.onCloseDialog = function () {\n      _this.setState({\n        showContactForm: false\n      });\n    };\n\n    _this.onClickLogin = function () {\n      _this.props.router.replace('login');\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          languageClasses = _this$props.languageClasses,\n          activeTheme = _this$props.activeTheme;\n      var _this$state = this.state,\n          success = _this$state.success,\n          showContactForm = _this$state.showContactForm;\n\n      if (success) {\n        return React.createElement(ResetPasswordSuccess, {\n          onClick: this.onClickLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'f-1'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'auth_wrapper', 'w-100'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(IconTitle, {\n        iconPath: ICONS.SET_NEW_PASSWORD,\n        text: STRINGS.RESET_PASSWORD.TITLE,\n        textType: \"title\",\n        underline: true,\n        className: \"w-100\",\n        subtitle: STRINGS.RESET_PASSWORD.SUBTITLE,\n        useSvg: true,\n        actionProps: {\n          text: STRINGS.HELP_TEXT,\n          iconPath: ICONS.BLUE_QUESTION,\n          onClick: this.onOpenDialog,\n          useSvg: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['flex-column', 'auth_form-wrapper', 'w-100'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ResetPasswordForm, {\n        onSubmit: this.onSubmitResetPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        isOpen: showContactForm,\n        label: \"contact-modal\",\n        onCloseDialog: this.onCloseDialog,\n        shouldCloseOnOverlayClick: false,\n        style: {\n          'z-index': 100\n        },\n        className: classnames(languageClasses),\n        showCloseText: false,\n        theme: activeTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ContactForm, {\n        onSubmitSuccess: this.onCloseDialog,\n        onClose: this.onCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ResetPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    activeTheme: store.app.theme\n  };\n};\n\nexport default connect(mapStateToProps)(ResetPassword);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/ResetPassword/index.js"],"names":["React","Component","classnames","connect","SubmissionError","resetPassword","ResetPasswordForm","ResetPasswordSuccess","IconTitle","Dialog","ContactForm","FLEX_CENTER_CLASSES","ICONS","STRINGS","ResetPassword","state","success","showContactForm","onSubmitResetPassword","password","code","props","params","values","new_password","then","res","setState","catch","error","errors","response","data","message","toLowerCase","indexOf","_error","onOpenDialog","onCloseDialog","onClickLogin","router","replace","languageClasses","activeTheme","SET_NEW_PASSWORD","RESET_PASSWORD","TITLE","SUBTITLE","text","HELP_TEXT","iconPath","BLUE_QUESTION","onClick","useSvg","mapStateToProps","store","app","theme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { SubmissionError } from 'redux-form';\nimport { resetPassword } from '../../actions/authAction';\nimport ResetPasswordForm from './ResetPasswordForm';\nimport ResetPasswordSuccess from './ResetPasswordSuccess';\nimport { IconTitle, Dialog } from '../../components';\nimport { ContactForm } from '../';\nimport { FLEX_CENTER_CLASSES, ICONS } from '../../config/constants';\nimport STRINGS from '../../config/localizedStrings';\n\nclass ResetPassword extends Component {\n\tstate = {\n\t\tsuccess: false,\n\t\tshowContactForm: false\n\t};\n\n\tonSubmitResetPassword = ({ password }) => {\n\t\tconst { code } = this.props.params;\n\t\tconst values = {\n\t\t\tcode,\n\t\t\tnew_password: password\n\t\t};\n\t\treturn resetPassword(values)\n\t\t\t.then((res) => {\n\t\t\t\tthis.setState({ success: true });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconst errors = {};\n\t\t\t\tif (error.response) {\n\t\t\t\t\tconst { message = '' } = error.response.data;\n\t\t\t\t\tif (message.toLowerCase().indexOf('password') > -1) {\n\t\t\t\t\t\t// TODO set error in constants for language\n\t\t\t\t\t\terrors.password = message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors._error = message || error.message;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\terrors._error = error.message;\n\t\t\t\t}\n\t\t\t\tthrow new SubmissionError(errors);\n\t\t\t});\n\t};\n\n\tonOpenDialog = () => {\n\t\tthis.setState({ showContactForm: true });\n\t};\n\n\tonCloseDialog = () => {\n\t\tthis.setState({ showContactForm: false });\n\t};\n\n\tonClickLogin = () => {\n\t\tthis.props.router.replace('login');\n\t};\n\n\trender() {\n\t\tconst { languageClasses, activeTheme } = this.props;\n\t\tconst { success, showContactForm } = this.state;\n\n\t\tif (success) {\n\t\t\treturn <ResetPasswordSuccess onClick={this.onClickLogin} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={classnames(...FLEX_CENTER_CLASSES, 'flex-column', 'f-1')}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t...FLEX_CENTER_CLASSES,\n\t\t\t\t\t\t'flex-column',\n\t\t\t\t\t\t'auth_wrapper',\n\t\t\t\t\t\t'w-100'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<IconTitle\n\t\t\t\t\t\ticonPath={ICONS.SET_NEW_PASSWORD}\n\t\t\t\t\t\ttext={STRINGS.RESET_PASSWORD.TITLE}\n\t\t\t\t\t\ttextType=\"title\"\n\t\t\t\t\t\tunderline={true}\n\t\t\t\t\t\tclassName=\"w-100\"\n\t\t\t\t\t\tsubtitle={STRINGS.RESET_PASSWORD.SUBTITLE}\n\t\t\t\t\t\tuseSvg={true}\n\t\t\t\t\t\tactionProps={{\n\t\t\t\t\t\t\ttext: STRINGS.HELP_TEXT,\n\t\t\t\t\t\t\ticonPath: ICONS.BLUE_QUESTION,\n\t\t\t\t\t\t\tonClick: this.onOpenDialog,\n\t\t\t\t\t\t\tuseSvg: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t...FLEX_CENTER_CLASSES,\n\t\t\t\t\t\t\t'flex-column',\n\t\t\t\t\t\t\t'auth_form-wrapper',\n\t\t\t\t\t\t\t'w-100'\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ResetPasswordForm onSubmit={this.onSubmitResetPassword} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpen={showContactForm}\n\t\t\t\t\tlabel=\"contact-modal\"\n\t\t\t\t\tonCloseDialog={this.onCloseDialog}\n\t\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\t\tstyle={{ 'z-index': 100 }}\n\t\t\t\t\tclassName={classnames(languageClasses)}\n\t\t\t\t\tshowCloseText={false}\n\t\t\t\t\ttheme={activeTheme}\n\t\t\t\t>\n\t\t\t\t\t<ContactForm\n\t\t\t\t\t\tonSubmitSuccess={this.onCloseDialog}\n\t\t\t\t\t\tonClose={this.onCloseDialog}\n\t\t\t\t\t/>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tactiveTheme: store.app.theme\n});\n\nexport default connect(mapStateToProps)(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}