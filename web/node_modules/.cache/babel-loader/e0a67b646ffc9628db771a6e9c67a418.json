{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Chat/ChatMessageList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { cloneDeep } from 'lodash';\nimport { ChatMessage } from './';\nimport { Loader } from '../';\nimport { isLoggedIn } from '../../utils/token';\nimport { isMobile } from 'react-device-detect';\n\nvar ChatMessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatMessageList, _Component);\n\n  function ChatMessageList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatMessageList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatMessageList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      containerHeight: 0\n    };\n\n    _this.shouldScroll = function (prevProps) {\n      var lastMsg = cloneDeep(_this.props.messages).pop();\n      return lastMsg && (_this.scrollbarsRef.getValues().top > 0.95 || _this.props.username === lastMsg.username) || !isMobile && prevProps.chatIsClosed && prevProps.chatIsClosed !== _this.props.chatIsClosed || !prevProps.chatInitialized && prevProps.chatInitialized !== _this.props.chatInitialized || !prevProps.userInitialized && prevProps.userInitialized !== _this.props.userInitialized;\n    };\n\n    _this.scrollToBottom = function () {\n      if (_this.scrollbarsRef.container.clientHeight < _this.state.containerHeight) {\n        _this.setState({\n          containerHeight: _this.scrollbarsRef.container.clientHeight\n        });\n\n        _this.scrollbarsRef.scrollToBottom();\n      }\n    };\n\n    _this.scrollUpdate = function (values) {\n      _this.scrollToBottom();\n    };\n\n    _this.setScrollbarsRef = function (el) {\n      if (el) {\n        _this.scrollbarsRef = el;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatMessageList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.shouldScroll(prevProps)) {\n        this.scrollbarsRef.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        containerHeight: this.scrollbarsRef.container.clientHeight\n      });\n\n      if (isMobile) {\n        this.scrollbarsRef.scrollToBottom();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          messages = _this$props.messages,\n          userType = _this$props.userType,\n          chatInitialized = _this$props.chatInitialized,\n          userInitialized = _this$props.userInitialized,\n          usernameInitalized = _this$props.usernameInitalized,\n          removeMessage = _this$props.removeMessage;\n      return React.createElement(Scrollbars, {\n        ref: this.setScrollbarsRef,\n        className: classnames('d-flex', 'flex-row', 'flex-column', 'chat-message-list'),\n        renderThumbVertical: function renderThumbVertical(_ref) {\n          var style = _ref.style,\n              props = _objectWithoutProperties(_ref, [\"style\"]);\n\n          return React.createElement(\"div\", Object.assign({}, props, {\n            style: _objectSpread({}, style, {\n              backgroundColor: '#333333',\n              opacity: '1'\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }));\n        },\n        renderView: function renderView(props) {\n          return React.createElement(\"div\", Object.assign({}, props, {\n            className: \"view\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }));\n        },\n        onUpdate: this.scrollUpdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, chatInitialized && usernameInitalized || !usernameInitalized && userInitialized || chatInitialized && !isLoggedIn() ? messages.map(function (_ref2, index) {\n        var id = _ref2.id,\n            username = _ref2.username,\n            to = _ref2.to,\n            messageType = _ref2.messageType,\n            message = _ref2.message,\n            timestamp = _ref2.timestamp,\n            verification_level = _ref2.verification_level;\n        return React.createElement(ChatMessage, {\n          key: index,\n          id: id,\n          username: username,\n          ownMessage: username === _this2.props.username,\n          to: to,\n          userType: userType,\n          verification_level: verification_level,\n          messageType: messageType,\n          messageContent: message,\n          removeMessage: removeMessage,\n          timestamp: timestamp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }) : React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatMessageList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    activeTheme: store.app.theme\n  };\n};\n\nexport default connect(mapStateToProps)(ChatMessageList);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Chat/ChatMessageList.js"],"names":["React","Component","connect","classnames","Scrollbars","cloneDeep","ChatMessage","Loader","isLoggedIn","isMobile","ChatMessageList","state","containerHeight","shouldScroll","prevProps","lastMsg","props","messages","pop","scrollbarsRef","getValues","top","username","chatIsClosed","chatInitialized","userInitialized","scrollToBottom","container","clientHeight","setState","scrollUpdate","values","setScrollbarsRef","el","userType","usernameInitalized","removeMessage","style","backgroundColor","opacity","map","index","id","to","messageType","message","timestamp","verification_level","mapStateToProps","store","activeTheme","app","theme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport  { cloneDeep } from 'lodash';\nimport { ChatMessage } from './';\nimport { Loader } from '../';\nimport { isLoggedIn } from '../../utils/token';\nimport { isMobile } from 'react-device-detect';\n\nclass ChatMessageList extends Component {\n\tstate = {\n\t\tcontainerHeight: 0\n\t};\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif(this.shouldScroll(prevProps)) {\n\t\t\tthis.scrollbarsRef.scrollToBottom();\n\t\t}\n\t}\n\n\tshouldScroll = prevProps => {\n\t\tconst lastMsg = cloneDeep(this.props.messages).pop();\n\t\treturn ((lastMsg && ((this.scrollbarsRef.getValues().top > 0.95) || (this.props.username === lastMsg.username)))  || \n\t\t(!isMobile && prevProps.chatIsClosed && (prevProps.chatIsClosed !== this.props.chatIsClosed)) ||\n\t\t(!prevProps.chatInitialized && (prevProps.chatInitialized !== this.props.chatInitialized)) ||\n\t\t(!prevProps.userInitialized && (prevProps.userInitialized !== this.props.userInitialized)))\n\t}\n\tscrollToBottom = () => {\n\t\tif (\n\t\t\tthis.scrollbarsRef.container.clientHeight < this.state.containerHeight\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tcontainerHeight: this.scrollbarsRef.container.clientHeight\n\t\t\t});\n\t\t\tthis.scrollbarsRef.scrollToBottom();\n\t\t}\n\t};\n\n\tscrollUpdate = (values) => {\n\t\tthis.scrollToBottom();\n\t};\n\n\tsetScrollbarsRef = (el) => {\n\t\tif (el) {\n\t\t\tthis.scrollbarsRef = el;\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tcontainerHeight: this.scrollbarsRef.container.clientHeight\n\t\t});\n\t\tif(isMobile){\n\t\t\tthis.scrollbarsRef.scrollToBottom();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tmessages,\n\t\t\tuserType,\n\t\t\tchatInitialized,\n\t\t\tuserInitialized,\n\t\t\tusernameInitalized,\n\t\t\tremoveMessage\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Scrollbars\n\t\t\t\tref={this.setScrollbarsRef}\n\t\t\t\tclassName={classnames(\n\t\t\t\t\t'd-flex',\n\t\t\t\t\t'flex-row',\n\t\t\t\t\t'flex-column',\n\t\t\t\t\t'chat-message-list'\n\t\t\t\t)}\n\t\t\t\trenderThumbVertical={({ style, ...props }) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t\tbackgroundColor: '#333333',\n\t\t\t\t\t\t\topacity: '1'\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\trenderView={(props) => <div {...props} className=\"view\" />}\n\t\t\t\tonUpdate={this.scrollUpdate}\n\t\t\t>\n\t\t\t\t{(chatInitialized && usernameInitalized) ||\n\t\t\t\t(!usernameInitalized && userInitialized) ||\n\t\t\t\t(chatInitialized && !isLoggedIn()) ? (\n\t\t\t\t\tmessages.map(({ id, username, to, messageType, message, timestamp, verification_level }, index) => (\n\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\townMessage={username === this.props.username}\n\t\t\t\t\t\t\tto={to}\n\t\t\t\t\t\t\tuserType={userType}\n\t\t\t\t\t\t\tverification_level={verification_level}\n\t\t\t\t\t\t\tmessageType={messageType}\n\t\t\t\t\t\t\tmessageContent={message}\n\t\t\t\t\t\t\tremoveMessage={removeMessage}\n\t\t\t\t\t\t\ttimestamp={timestamp}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<Loader />\n\t\t\t\t)}\n\t\t\t</Scrollbars>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tactiveTheme: store.app.theme\n});\n\nexport default connect(mapStateToProps)(ChatMessageList);\n"]},"metadata":{},"sourceType":"module"}