{"ast":null,"code":"import Cookies from 'universal-cookie';\nimport math from 'mathjs';\nimport numbro from 'numbro';\nimport moment from 'moment-timezone'; // import jwtDecode from 'jwt-decode';\n// import { getToken, setToken, removeToken } from './token';\n\nimport { // TOKEN_KEY,\n// TOKEN_MAX_AGE,\n// TOKEN_EMAIL,\nTIME_ZONE } from '../config/constants';\nvar cookies = new Cookies();\nexport var getEmail = function getEmail() {\n  return cookies.get('token::email');\n};\nexport { default as request, requestAuthenticated } from './request';\nexport var formatDate = function formatDate(date) {\n  return moment(date).tz(TIME_ZONE).format('YYYY/MM/DD HH:mm');\n};\nexport var getFormat = function getFormat() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var fullFormat = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (fullFormat) {\n    return {\n      digit: 8,\n      format: '0,0.[00000000]'\n    };\n  } else if (min % 1) {\n    var point = min.toString().split('.')[1];\n    var res = point.split('').map(function (val) {\n      return 0;\n    }).join('');\n    return {\n      digit: point.length,\n      format: \"0,0.[\".concat(res, \"]\")\n    };\n  } else {\n    return {\n      digit: 4,\n      format: \"0,0.[0000]\"\n    };\n  }\n};\nexport var formatCurrency = function formatCurrency() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var fullFormat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var formatObj = getFormat(min, fullFormat);\n  return numbro(roundNumber(amount, formatObj.digit)).format(formatObj.format);\n};\nexport var roundNumber = function roundNumber() {\n  var number = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n\n  if (number === 0) {\n    return 0;\n  } else if (decimals > 0) {\n    var multipliedNumber = math.multiply(math.fraction(number), math.pow(10, decimals));\n    var dividedNumber = math.divide(math.floor(multipliedNumber), math.pow(10, decimals));\n    return math.number(dividedNumber);\n  } else {\n    return math.floor(number);\n  }\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/utils/index.js"],"names":["Cookies","math","numbro","moment","TIME_ZONE","cookies","getEmail","get","default","request","requestAuthenticated","formatDate","date","tz","format","getFormat","min","fullFormat","digit","point","toString","split","res","map","val","join","length","formatCurrency","amount","formatObj","roundNumber","number","decimals","multipliedNumber","multiply","fraction","pow","dividedNumber","divide","floor"],"mappings":"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","sourcesContent":["import Cookies from 'universal-cookie';\nimport math from 'mathjs';\nimport numbro from 'numbro';\nimport moment from 'moment-timezone';\n// import jwtDecode from 'jwt-decode';\n// import { getToken, setToken, removeToken } from './token';\nimport {\n\t// TOKEN_KEY,\n\t// TOKEN_MAX_AGE,\n\t// TOKEN_EMAIL,\n\tTIME_ZONE\n} from '../config/constants';\n\nconst cookies = new Cookies();\n\nexport const getEmail = () => cookies.get('token::email');\n\nexport { default as request, requestAuthenticated } from './request';\n\nexport const formatDate = (date) => {\n\treturn moment(date)\n\t\t.tz(TIME_ZONE)\n\t\t.format('YYYY/MM/DD HH:mm');\n};\n\nexport const getFormat = (min = 0, fullFormat) => {\n\tif (fullFormat) {\n\t\treturn { digit: 8, format: '0,0.[00000000]' };\n\t} else if (min % 1) {\n\t\tlet point = min.toString().split('.')[1];\n\t\tlet res = point\n\t\t\t.split('')\n\t\t\t.map((val) => 0)\n\t\t\t.join('');\n\t\treturn { digit: point.length, format: `0,0.[${res}]` };\n\t} else {\n\t\treturn { digit: 4, format: `0,0.[0000]` };\n\t}\n};\n\nexport const formatCurrency = (amount = 0, min = 0, fullFormat = false) => {\n\tlet formatObj = getFormat(min, fullFormat);\n\treturn numbro(roundNumber(amount, formatObj.digit)).format(formatObj.format);\n};\n\nexport const roundNumber = (number = 0, decimals = 4) => {\n\tif (number === 0) {\n\t\treturn 0;\n\t} else if (decimals > 0) {\n\t\tconst multipliedNumber = math.multiply(\n\t\t\tmath.fraction(number),\n\t\t\tmath.pow(10, decimals)\n\t\t);\n\t\tconst dividedNumber = math.divide(\n\t\t\tmath.floor(multipliedNumber),\n\t\t\tmath.pow(10, decimals)\n\t\t);\n\t\treturn math.number(dividedNumber);\n\t} else {\n\t\treturn math.floor(number);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}