{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Withdraw/form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector, reset, SubmissionError, stopSubmit } from 'redux-form';\nimport math from 'mathjs';\nimport { Button, Dialog, OtpForm, Loader } from '../../components';\nimport renderFields from '../../components/Form/factoryFields';\nimport { setWithdrawEmailConfirmation, setWithdrawNotificationError } from './notifications';\nimport { BASE_CURRENCY } from '../../config/constants';\nimport { calculateBaseFee } from './utils';\nimport STRINGS from '../../config/localizedStrings';\nimport ReviewModalContent from './ReviewModalContent';\nexport var FORM_NAME = 'WithdrawCryptocurrencyForm';\nvar selector = formValueSelector(FORM_NAME);\n\nvar validate = function validate(values, props) {\n  var errors = {};\n  var amount = math.fraction(values.amount || 0);\n  var fee = math.fraction(values.fee || 0);\n  var balance = math.fraction(props.balanceAvailable || 0);\n  var totalTransaction = math.add(fee, amount);\n\n  if (math.larger(totalTransaction, balance)) {\n    errors.amount = STRINGS.formatString(STRINGS.WITHDRAWALS_LOWER_BALANCE, math.number(totalTransaction));\n  }\n\n  return errors;\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dialogIsOpen: false,\n      dialogOtpOpen: false,\n      otp_code: ''\n    };\n\n    _this.onOpenDialog = function (ev) {\n      if (ev && ev.preventDefault) {\n        ev.preventDefault();\n      }\n\n      _this.setState({\n        dialogIsOpen: true\n      });\n    };\n\n    _this.onCloseDialog = function (ev) {\n      if (ev && ev.preventDefault) {\n        ev.preventDefault();\n      }\n\n      _this.setState({\n        dialogIsOpen: false,\n        dialogOtpOpen: false\n      });\n    };\n\n    _this.onAcceptDialog = function () {\n      if (_this.props.otp_enabled) {\n        _this.setState({\n          dialogOtpOpen: true\n        });\n      } else {\n        _this.onCloseDialog(); // this.props.submit();\n\n\n        var values = _this.props.data;\n        return _this.props.onSubmit(_objectSpread({}, values, {\n          amount: math.eval(values.amount),\n          fee: values.fee ? math.eval(values.fee) : 0\n        })).then(function (response) {\n          _this.props.onSubmitSuccess(_objectSpread({}, response.data, {\n            currency: _this.props.currency\n          }), _this.props.dispatch);\n\n          return response;\n        }).catch(function (err) {\n          var error = _objectSpread({\n            _error: err.message\n          }, err.errors);\n\n          _this.props.onSubmitFail(err.errors || err, _this.props.dispatch);\n\n          _this.onCloseDialog();\n\n          _this.props.dispatch(stopSubmit(FORM_NAME, error)); // throw new SubmissionError(error);\n\n        });\n      }\n    };\n\n    _this.onConfirmEmail = function () {\n      _this.onCloseDialog();\n\n      _this.props.router.push('/wallet');\n    };\n\n    _this.onSubmitOtp = function (_ref) {\n      var _ref$otp_code = _ref.otp_code,\n          otp_code = _ref$otp_code === void 0 ? '' : _ref$otp_code;\n      var values = _this.props.data;\n      return _this.props.onSubmit(_objectSpread({}, values, {\n        amount: math.eval(values.amount),\n        fee: values.fee ? math.eval(values.fee) : 0,\n        otp_code: otp_code\n      })).then(function (response) {\n        _this.onCloseDialog();\n\n        _this.props.onSubmitSuccess(_objectSpread({}, response.data, {\n          currency: _this.props.currency\n        }), _this.props.dispatch);\n\n        return response;\n      }).catch(function (err) {\n        if (err instanceof SubmissionError) {\n          if (err.errors && !err.errors.otp_code) {\n            var error = _objectSpread({\n              _error: err.message\n            }, err.errors);\n\n            _this.props.onSubmitFail(err.errors, _this.props.dispatch);\n\n            _this.onCloseDialog();\n\n            _this.props.dispatch(stopSubmit(FORM_NAME, error));\n          }\n\n          throw err;\n        } else {\n          var _error = {\n            _error: err.message\n          };\n\n          _this.props.onSubmitFail(_error, _this.props.dispatch);\n\n          _this.onCloseDialog();\n\n          _this.props.dispatch(stopSubmit(FORM_NAME, _error));\n\n          throw new SubmissionError(_error);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.currency !== this.props.currency) {\n        nextProps.dispatch(reset(FORM_NAME));\n      }\n\n      if (!nextProps.submitting && nextProps.submitting !== this.props.submitting) {\n        this.onCloseDialog();\n      }\n\n      if (nextProps.currency === BASE_CURRENCY && (nextProps.data.amount !== this.props.data.amount || nextProps.currency === BASE_CURRENCY && nextProps.amount !== this.props.currency)) {\n        var fee = calculateBaseFee(nextProps.data.amount);\n\n        if (fee !== nextProps.data.fee) {\n          nextProps.change('fee', fee);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          submitting = _this$props.submitting,\n          pristine = _this$props.pristine,\n          error = _this$props.error,\n          valid = _this$props.valid,\n          initialValues = _this$props.initialValues,\n          currency = _this$props.currency,\n          data = _this$props.data,\n          openContactForm = _this$props.openContactForm,\n          formValues = _this$props.formValues,\n          currentPrice = _this$props.currentPrice,\n          activeTheme = _this$props.activeTheme,\n          coins = _this$props.coins;\n      var _this$state = this.state,\n          dialogIsOpen = _this$state.dialogIsOpen,\n          dialogOtpOpen = _this$state.dialogOtpOpen;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, renderFields(formValues), error && React.createElement(\"div\", {\n        className: \"warning_text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, error), React.createElement(Button, {\n        label: STRINGS.WITHDRAWALS_BUTTON_TEXT,\n        disabled: pristine || submitting || !valid,\n        onClick: this.onOpenDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        isOpen: dialogIsOpen,\n        label: \"withdraw-modal\",\n        onCloseDialog: this.onCloseDialog,\n        shouldCloseOnOverlayClick: dialogOtpOpen,\n        theme: activeTheme,\n        showCloseText: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, dialogOtpOpen ? React.createElement(OtpForm, {\n        onSubmit: this.onSubmitOtp,\n        onClickHelp: openContactForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }) : !submitting ? React.createElement(ReviewModalContent, {\n        coins: coins,\n        currency: currency,\n        data: data,\n        price: currentPrice,\n        onClickAccept: this.onAcceptDialog,\n        onClickCancel: this.onCloseDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }) : React.createElement(Loader, {\n        relative: true,\n        background: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nvar WithdrawForm = reduxForm({\n  form: FORM_NAME,\n  onSubmitFail: setWithdrawNotificationError,\n  onSubmitSuccess: function onSubmitSuccess(data, dispatch) {\n    dispatch(reset(FORM_NAME));\n    setWithdrawEmailConfirmation(data, dispatch);\n  },\n  enableReinitialize: true,\n  validate: validate\n})(Form);\n\nvar mapStateToForm = function mapStateToForm(state) {\n  return {\n    data: selector(state, 'address', 'amount', 'fee'),\n    activeTheme: state.app.theme,\n    coins: state.app.coins\n  };\n};\n\nvar WithdrawFormWithValues = connect(mapStateToForm)(WithdrawForm);\nexport default WithdrawFormWithValues;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Withdraw/form.js"],"names":["React","Component","connect","reduxForm","formValueSelector","reset","SubmissionError","stopSubmit","math","Button","Dialog","OtpForm","Loader","renderFields","setWithdrawEmailConfirmation","setWithdrawNotificationError","BASE_CURRENCY","calculateBaseFee","STRINGS","ReviewModalContent","FORM_NAME","selector","validate","values","props","errors","amount","fraction","fee","balance","balanceAvailable","totalTransaction","add","larger","formatString","WITHDRAWALS_LOWER_BALANCE","number","Form","state","dialogIsOpen","dialogOtpOpen","otp_code","onOpenDialog","ev","preventDefault","setState","onCloseDialog","onAcceptDialog","otp_enabled","data","onSubmit","eval","then","response","onSubmitSuccess","currency","dispatch","catch","err","error","_error","message","onSubmitFail","onConfirmEmail","router","push","onSubmitOtp","nextProps","submitting","change","handleSubmit","pristine","valid","initialValues","openContactForm","formValues","currentPrice","activeTheme","coins","WITHDRAWALS_BUTTON_TEXT","WithdrawForm","form","enableReinitialize","mapStateToForm","app","theme","WithdrawFormWithValues"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n\treduxForm,\n\tformValueSelector,\n\treset,\n\tSubmissionError,\n\tstopSubmit\n} from 'redux-form';\nimport math from 'mathjs';\nimport { Button, Dialog, OtpForm, Loader } from '../../components';\nimport renderFields from '../../components/Form/factoryFields';\nimport {\n\tsetWithdrawEmailConfirmation,\n\tsetWithdrawNotificationError\n} from './notifications';\nimport { BASE_CURRENCY } from '../../config/constants';\nimport { calculateBaseFee } from './utils';\n\nimport STRINGS from '../../config/localizedStrings';\n\nimport ReviewModalContent from './ReviewModalContent';\n\nexport const FORM_NAME = 'WithdrawCryptocurrencyForm';\n\nconst selector = formValueSelector(FORM_NAME);\n\nconst validate = (values, props) => {\n\tconst errors = {};\n\tconst amount = math.fraction(values.amount || 0);\n\tconst fee = math.fraction(values.fee || 0);\n\tconst balance = math.fraction(props.balanceAvailable || 0);\n\n\tconst totalTransaction = math.add(fee, amount);\n\tif (math.larger(totalTransaction, balance)) {\n\t\terrors.amount = STRINGS.formatString(\n\t\t\tSTRINGS.WITHDRAWALS_LOWER_BALANCE,\n\t\t\tmath.number(totalTransaction)\n\t\t);\n\t}\n\n\treturn errors;\n};\n\nclass Form extends Component {\n\tstate = {\n\t\tdialogIsOpen: false,\n\t\tdialogOtpOpen: false,\n\t\totp_code: ''\n\t};\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.currency !== this.props.currency) {\n\t\t\tnextProps.dispatch(reset(FORM_NAME));\n\t\t}\n\t\tif (\n\t\t\t!nextProps.submitting &&\n\t\t\tnextProps.submitting !== this.props.submitting\n\t\t) {\n\t\t\tthis.onCloseDialog();\n\t\t}\n\n\t\tif (\n\t\t\tnextProps.currency === BASE_CURRENCY &&\n\t\t\t(nextProps.data.amount !== this.props.data.amount ||\n\t\t\t\t(nextProps.currency === BASE_CURRENCY &&\n\t\t\t\t\tnextProps.amount !== this.props.currency))\n\t\t) {\n\t\t\tconst fee = calculateBaseFee(nextProps.data.amount);\n\t\t\tif (fee !== nextProps.data.fee) {\n\t\t\t\tnextProps.change('fee', fee);\n\t\t\t}\n\t\t}\n\t}\n\n\tonOpenDialog = (ev) => {\n\t\tif (ev && ev.preventDefault) {\n\t\t\tev.preventDefault();\n\t\t}\n\t\tthis.setState({ dialogIsOpen: true });\n\t};\n\n\tonCloseDialog = (ev) => {\n\t\tif (ev && ev.preventDefault) {\n\t\t\tev.preventDefault();\n\t\t}\n\t\tthis.setState({ dialogIsOpen: false, dialogOtpOpen: false });\n\t};\n\n\tonAcceptDialog = () => {\n\t\tif (this.props.otp_enabled) {\n\t\t\tthis.setState({ dialogOtpOpen: true });\n\t\t} else {\n\t\t\tthis.onCloseDialog();\n\t\t\t// this.props.submit();\n\t\t\tconst values = this.props.data;\n\t\t\treturn this.props\n\t\t\t\t.onSubmit({\n\t\t\t\t\t...values,\n\t\t\t\t\tamount: math.eval(values.amount),\n\t\t\t\t\tfee: values.fee ? math.eval(values.fee) : 0,\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.props.onSubmitSuccess(\n\t\t\t\t\t\t{ ...response.data, currency: this.props.currency },\n\t\t\t\t\t\tthis.props.dispatch\n\t\t\t\t\t);\n\t\t\t\t\treturn response;\n\t\t\t\t}).catch(err => {\n\t\t\t\t\tconst error = { _error: err.message, ...err.errors };\n\t\t\t\t\tthis.props.onSubmitFail(err.errors || err, this.props.dispatch);\n\t\t\t\t\tthis.onCloseDialog();\n\t\t\t\t\tthis.props.dispatch(stopSubmit(FORM_NAME, error));\n\t\t\t\t\t// throw new SubmissionError(error);\n\t\t\t\t})\n\t\t}\n\t};\n\n\tonConfirmEmail = () => {\n\t\tthis.onCloseDialog();\n\t\tthis.props.router.push('/wallet');\n\t};\n\n\tonSubmitOtp = ({ otp_code = '' }) => {\n\t\tconst values = this.props.data;\n\t\treturn this.props\n\t\t\t.onSubmit({\n\t\t\t\t...values,\n\t\t\t\tamount: math.eval(values.amount),\n\t\t\t\tfee: values.fee ? math.eval(values.fee) : 0,\n\t\t\t\totp_code\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.onCloseDialog();\n\t\t\t\tthis.props.onSubmitSuccess(\n\t\t\t\t\t{ ...response.data, currency: this.props.currency },\n\t\t\t\t\tthis.props.dispatch\n\t\t\t\t);\n\t\t\t\treturn response;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err instanceof SubmissionError) {\n\t\t\t\t\tif (err.errors && !err.errors.otp_code) {\n\t\t\t\t\t\tconst error = { _error: err.message, ...err.errors };\n\t\t\t\t\t\tthis.props.onSubmitFail(err.errors, this.props.dispatch);\n\t\t\t\t\t\tthis.onCloseDialog();\n\t\t\t\t\t\tthis.props.dispatch(stopSubmit(FORM_NAME, error));\n\t\t\t\t\t}\n\t\t\t\t\tthrow err;\n\t\t\t\t} else {\n\t\t\t\t\tconst error = { _error: err.message };\n\t\t\t\t\tthis.props.onSubmitFail(error, this.props.dispatch);\n\t\t\t\t\tthis.onCloseDialog();\n\t\t\t\t\tthis.props.dispatch(stopSubmit(FORM_NAME, error));\n\t\t\t\t\tthrow new SubmissionError(error);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\thandleSubmit,\n\t\t\tsubmitting,\n\t\t\tpristine,\n\t\t\terror,\n\t\t\tvalid,\n\t\t\tinitialValues, // eslint-disable-line\n\t\t\tcurrency,\n\t\t\tdata,\n\t\t\topenContactForm,\n\t\t\tformValues,\n\t\t\tcurrentPrice,\n\t\t\tactiveTheme,\n\t\t\tcoins\n\t\t} = this.props;\n\n\t\tconst { dialogIsOpen, dialogOtpOpen } = this.state;\n\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t{renderFields(formValues)}\n\t\t\t\t{error && <div className=\"warning_text\">{error}</div>}\n\t\t\t\t<Button\n\t\t\t\t\tlabel={STRINGS.WITHDRAWALS_BUTTON_TEXT}\n\t\t\t\t\tdisabled={pristine || submitting || !valid}\n\t\t\t\t\tonClick={this.onOpenDialog}\n\t\t\t\t/>\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpen={dialogIsOpen}\n\t\t\t\t\tlabel=\"withdraw-modal\"\n\t\t\t\t\tonCloseDialog={this.onCloseDialog}\n\t\t\t\t\tshouldCloseOnOverlayClick={dialogOtpOpen}\n\t\t\t\t\ttheme={activeTheme}\n\t\t\t\t\tshowCloseText={false}\n\t\t\t\t>\n\t\t\t\t\t{dialogOtpOpen ? (\n\t\t\t\t\t\t<OtpForm\n\t\t\t\t\t\t\tonSubmit={this.onSubmitOtp}\n\t\t\t\t\t\t\tonClickHelp={openContactForm}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : !submitting ? (\n\t\t\t\t\t\t<ReviewModalContent\n\t\t\t\t\t\t\tcoins={coins}\n\t\t\t\t\t\t\tcurrency={currency}\n\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\tprice={currentPrice}\n\t\t\t\t\t\t\tonClickAccept={this.onAcceptDialog}\n\t\t\t\t\t\t\tonClickCancel={this.onCloseDialog}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<Loader relative={true} background={false} />\n\t\t\t\t\t)}\n\t\t\t\t</Dialog>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nconst WithdrawForm = reduxForm({\n\tform: FORM_NAME,\n\tonSubmitFail: setWithdrawNotificationError,\n\tonSubmitSuccess: (data, dispatch) => {\n\t\tdispatch(reset(FORM_NAME));\n\t\tsetWithdrawEmailConfirmation(data, dispatch);\n\t},\n\tenableReinitialize: true,\n\tvalidate\n})(Form);\n\nconst mapStateToForm = (state) => ({\n\tdata: selector(state, 'address', 'amount', 'fee'),\n\tactiveTheme: state.app.theme,\n\tcoins: state.app.coins\n});\n\nconst WithdrawFormWithValues = connect(mapStateToForm)(WithdrawForm);\n\nexport default WithdrawFormWithValues;\n"]},"metadata":{},"sourceType":"module"}