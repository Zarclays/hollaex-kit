{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/BlockchainTransaction/index.js\";\nimport React, { Component } from 'react';\nimport { Icon, Spin, Alert } from 'antd';\nimport { AdminHocForm } from '../../../components';\nimport { validateRequired } from '../../../components/AdminForm/validations';\nimport { checkTransaction } from './actions';\nvar Form = AdminHocForm('TRANSACTION_FORM', 'transaction-form');\n\nvar BlockchainTransaction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlockchainTransaction, _Component);\n\n  function BlockchainTransaction() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BlockchainTransaction);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BlockchainTransaction)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {},\n      loading: false,\n      error: ''\n    };\n\n    _this.onSubmit = function (_ref) {\n      var currency = _ref.currency,\n          _ref$transaction_id = _ref.transaction_id,\n          transaction_id = _ref$transaction_id === void 0 ? '' : _ref$transaction_id,\n          _ref$address = _ref.address,\n          address = _ref$address === void 0 ? '' : _ref$address;\n\n      _this.setState({\n        error: '',\n        loading: true,\n        data: {}\n      });\n\n      return checkTransaction(currency, transaction_id, address).then(function (data) {\n        _this.setState({\n          data: data,\n          loading: false\n        });\n      }).catch(function (_ref2) {\n        var err = _ref2.err;\n\n        _this.setState({\n          error: err.message,\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BlockchainTransaction, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          data = _this$state.data,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        className: \"app_container-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" CHECK BLOCKCHAIN TRANSACTIONS \"), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        buttonText: \"Check\",\n        fields: {\n          currency: {\n            type: 'select',\n            placeholder: 'Coin',\n            label: 'Coin',\n            validate: [validateRequired],\n            options: [{\n              label: 'BITCOIN (BTC)',\n              value: 'btc'\n            }, {\n              label: 'ETHEREUM (ETH)',\n              value: 'eth'\n            }, {\n              label: 'BITCOINCASH (BCH)',\n              value: 'bch'\n            }, {\n              label: 'RIPPLE} (XRP)',\n              value: 'xrp'\n            }]\n          },\n          transaction_id: {\n            type: 'input',\n            placeholder: 'Transaction Id',\n            validate: [validateRequired],\n            prefix: React.createElement(Icon, {\n              type: \"appstore-o\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            })\n          },\n          address: {\n            type: 'input',\n            placeholder: 'Address',\n            prefix: React.createElement(Icon, {\n              type: \"qrcode\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58\n              },\n              __self: this\n            })\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"m-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, loading && React.createElement(Spin, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), error && React.createElement(Alert, {\n        message: \"Error\",\n        description: error,\n        type: \"error\",\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), Object.keys(data).length > 0 && React.createElement(\"div\", {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        message: data.message,\n        type: \"success\",\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        message: \"Deposit\",\n        className: \"m-top\",\n        description: React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, JSON.stringify(data.deposit, null, 2)),\n        type: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Alert, {\n        message: \"User\",\n        className: \"m-top\",\n        description: React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, JSON.stringify(data.user, null, 2)),\n        type: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return BlockchainTransaction;\n}(Component);\n\nexport default BlockchainTransaction;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/BlockchainTransaction/index.js"],"names":["React","Component","Icon","Spin","Alert","AdminHocForm","validateRequired","checkTransaction","Form","BlockchainTransaction","state","data","loading","error","onSubmit","currency","transaction_id","address","setState","then","catch","err","message","type","placeholder","label","validate","options","value","prefix","Object","keys","length","JSON","stringify","deposit","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Icon, Spin, Alert } from 'antd';\n\nimport { AdminHocForm } from '../../../components';\nimport { validateRequired } from '../../../components/AdminForm/validations';\nimport { checkTransaction } from './actions';\n\nconst Form = AdminHocForm('TRANSACTION_FORM', 'transaction-form');\n\nclass BlockchainTransaction extends Component {\n\tstate = {\n\t\tdata: {},\n\t\tloading: false,\n\t\terror: ''\n\t};\n\n\tonSubmit = ({ currency, transaction_id = '', address = '' }) => {\n\t\tthis.setState({ error: '', loading: true, data: {} });\n\t\treturn checkTransaction(currency, transaction_id, address)\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ data, loading: false });\n\t\t\t})\n\t\t\t.catch(({ err }) => {\n\t\t\t\tthis.setState({ error: err.message, loading: false });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { error, data, loading } = this.state;\n\t\treturn (\n\t\t\t<div className=\"app_container-content\">\n\t\t\t\t<h1> CHECK BLOCKCHAIN TRANSACTIONS </h1>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\tbuttonText=\"Check\"\n\t\t\t\t\tfields={{\n\t\t\t\t\t\tcurrency: {\n\t\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\t\tplaceholder: 'Coin',\n\t\t\t\t\t\t\tlabel: 'Coin',\n\t\t\t\t\t\t\tvalidate: [validateRequired],\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ label: 'BITCOIN (BTC)', value: 'btc' },\n\t\t\t\t\t\t\t\t{ label: 'ETHEREUM (ETH)', value: 'eth' },\n\t\t\t\t\t\t\t\t{ label: 'BITCOINCASH (BCH)', value: 'bch' },\n\t\t\t\t\t\t\t\t{ label: 'RIPPLE} (XRP)', value: 'xrp' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransaction_id: {\n\t\t\t\t\t\t\ttype: 'input',\n\t\t\t\t\t\t\tplaceholder: 'Transaction Id',\n\t\t\t\t\t\t\tvalidate: [validateRequired],\n\t\t\t\t\t\t\tprefix: <Icon type=\"appstore-o\" />\n\t\t\t\t\t\t},\n\t\t\t\t\t\taddress: {\n\t\t\t\t\t\t\ttype: 'input',\n\t\t\t\t\t\t\tplaceholder: 'Address',\n\t\t\t\t\t\t\tprefix: <Icon type=\"qrcode\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className=\"m-top\">\n\t\t\t\t\t{loading && <Spin size=\"large\" />}\n\t\t\t\t\t{error && (\n\t\t\t\t\t\t<Alert message=\"Error\" description={error} type=\"error\" showIcon />\n\t\t\t\t\t)}\n\t\t\t\t\t{Object.keys(data).length > 0 && (\n\t\t\t\t\t\t<div className=\"w-100\">\n\t\t\t\t\t\t\t<Alert message={data.message} type=\"success\" showIcon />\n\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\tmessage=\"Deposit\"\n\t\t\t\t\t\t\t\tclassName=\"m-top\"\n\t\t\t\t\t\t\t\tdescription={<pre>{JSON.stringify(data.deposit, null, 2)}</pre>}\n\t\t\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\tmessage=\"User\"\n\t\t\t\t\t\t\t\tclassName=\"m-top\"\n\t\t\t\t\t\t\t\tdescription={<pre>{JSON.stringify(data.user, null, 2)}</pre>}\n\t\t\t\t\t\t\t\ttype=\"info\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BlockchainTransaction;\n"]},"metadata":{},"sourceType":"module"}