{"ast":null,"code":"import _defineProperty from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Summary/components/SummaryRequirements.js\";\nimport React from 'react';\nimport ReactSvg from 'react-svg';\nimport classnames from 'classnames';\nimport { Link } from 'react-router';\nimport moment from 'moment';\nimport { Button } from '../../../components';\nimport { ICONS, TRADE_ACCOUNT_UPGRADE_MONTH, TRADING_VOLUME_CHART_LIMITS, BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../../config/constants';\nimport STRINGS from '../../../config/localizedStrings';\n\nvar SucessStatus = function SucessStatus(_ref) {\n  var isAccountDetails = _ref.isAccountDetails;\n  return React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, isAccountDetails && React.createElement(\"div\", {\n    className: \"requirement-verified mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, STRINGS.USER_VERIFICATION.COMPLETED.toUpperCase()), React.createElement(ReactSvg, {\n    path: ICONS.GREEN_CHECK,\n    wrapperClassName: \"requirement-stauts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nvar IncompleteStatus = function IncompleteStatus(_ref2) {\n  var isAccountDetails = _ref2.isAccountDetails;\n  return React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, isAccountDetails ? React.createElement(\"div\", {\n    className: \"requirement-incomplete mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, STRINGS.USER_VERIFICATION.INCOMPLETED.toUpperCase()) : React.createElement(ReactSvg, {\n    path: ICONS.VERIFICATION_INCOMPLETE,\n    wrapperClassName: \"requirement-stauts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nvar PendingStatus = function PendingStatus(_ref3) {\n  var isAccountDetails = _ref3.isAccountDetails;\n  return React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ReactSvg, {\n    path: ICONS.VERIFICATION_PENDING,\n    wrapperClassName: \"requirement-stauts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n};\n\nvar RejectedStatus = function RejectedStatus(_ref4) {\n  var isAccountDetails = _ref4.isAccountDetails;\n  return React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(ReactSvg, {\n    path: ICONS.VERIFICATION_REJECTED,\n    wrapperClassName: \"requirement-stauts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\n\nvar checkBankVerification = function checkBankVerification() {\n  var bank_account = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var id_data = arguments.length > 1 ? arguments[1] : undefined;\n  var bank_status = 0;\n\n  if (bank_account.length) {\n    if (bank_account.filter(function (data) {\n      return data.status === 3;\n    }).length) {\n      bank_status = 3;\n    } else if (bank_account.filter(function (data) {\n      return data.status === 1;\n    }).length) {\n      bank_status = 1;\n    } else if (bank_account.filter(function (data) {\n      return data.status === 2;\n    }).length) {\n      bank_status = 2;\n    }\n\n    if (id_data.status !== 3) {\n      bank_status = 1;\n    }\n\n    if (bank_account.length === bank_account.filter(function (data) {\n      return data.status === 0;\n    }).length) {\n      bank_status = 0;\n    }\n  }\n\n  return bank_status;\n};\n\nvar checkMonth = function checkMonth(currentDate, month) {\n  var diffMonth = moment().diff(moment(currentDate), 'months');\n  return diffMonth >= month;\n};\n\nvar getRequirements = function getRequirements(user, level, lastMonthVolume, coins) {\n  var _user$userData = user.userData,\n      address = _user$userData.address,\n      phone_number = _user$userData.phone_number,\n      _user$userData$id_dat = _user$userData.id_data,\n      id_data = _user$userData$id_dat === void 0 ? {} : _user$userData$id_dat,\n      bank_account = _user$userData.bank_account;\n  var bank_verified = checkBankVerification(bank_account, id_data);\n\n  var _ref5 = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA,\n      _ref5$symbol = _ref5.symbol,\n      symbol = _ref5$symbol === void 0 ? '' : _ref5$symbol;\n\n  var identity = address.country ? id_data.status && id_data.status === 3 ? 3 : 1 : 1;\n  var verificationObj = {\n    level_1: {},\n    level_2: {\n      '1': {\n        title: STRINGS.USER_VERIFICATION.TITLE_USER_DOCUMENTATION,\n        completed: identity === 3 ? true : false,\n        status: identity\n      },\n      '2': {\n        title: STRINGS.USER_VERIFICATION.TITLE_ID_DOCUMENTS,\n        completed: id_data.status === 3,\n        status: id_data.status\n      },\n      '3': {\n        title: STRINGS.USER_VERIFICATION.TITLE_MOBILE,\n        completed: !!phone_number,\n        status: phone_number ? 3 : 0\n      },\n      '4': {\n        title: STRINGS.USER_VERIFICATION.CONNECT_BANK_ACCOUNT,\n        completed: bank_verified === 3 ? true : false,\n        status: bank_verified\n      }\n    },\n    level_3: {\n      '1': {\n        title: STRINGS.formatString(STRINGS.SUMMARY.ACCOUNT_AGE_OF_MONTHS, TRADE_ACCOUNT_UPGRADE_MONTH[0]).join(' '),\n        completed: checkMonth(user.created_at, TRADE_ACCOUNT_UPGRADE_MONTH[0])\n      },\n      '2': {\n        title: STRINGS.formatString(STRINGS.SUMMARY.TRADING_VOLUME_EQUIVALENT, TRADING_VOLUME_CHART_LIMITS[0], symbol.toUpperCase()).join(' '),\n        completed: TRADING_VOLUME_CHART_LIMITS[0] <= lastMonthVolume\n      }\n    },\n    level_4: {\n      '1': {\n        title: STRINGS.formatString(STRINGS.SUMMARY.ACCOUNT_AGE_OF_MONTHS, TRADE_ACCOUNT_UPGRADE_MONTH[1]).join(' '),\n        completed: checkMonth(user.created_at, TRADE_ACCOUNT_UPGRADE_MONTH[1])\n      },\n      '2': {\n        title: STRINGS.formatString(STRINGS.SUMMARY.TRADING_VOLUME_EQUIVALENT, TRADING_VOLUME_CHART_LIMITS[1], symbol.toUpperCase()).join(' '),\n        completed: TRADING_VOLUME_CHART_LIMITS[1] <= lastMonthVolume\n      }\n    }\n  };\n  return verificationObj[\"level_\".concat(level)];\n};\n\nvar getStatusClass = function getStatusClass(status_code, completed) {\n  switch (status_code) {\n    case 0:\n      return 'requirement-not-verified';\n\n    case 1:\n      return 'requirement-pending';\n\n    case 2:\n      return 'requirement-rejected';\n\n    case 3:\n      return 'requirement-verified';\n\n    default:\n      if (status_code === undefined && completed === false) {\n        return 'requirement-not-verified';\n      }\n\n      return '';\n  }\n};\n\nvar getAllCompleted = function getAllCompleted(requirement) {\n  return Object.keys(requirement).length === Object.keys(requirement).filter(function (key) {\n    return requirement[key].completed;\n  }).length;\n};\n\nvar getStatusIcon = function getStatusIcon(reqObj, isAccountDetails) {\n  if (isAccountDetails) {\n    return reqObj.completed ? React.createElement(SucessStatus, {\n      isAccountDetails: isAccountDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }) : React.createElement(IncompleteStatus, {\n      isAccountDetails: isAccountDetails,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    });\n  } else {\n    switch (reqObj.status) {\n      case 0:\n        return React.createElement(IncompleteStatus, {\n          isAccountDetails: isAccountDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(PendingStatus, {\n          isAccountDetails: isAccountDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(RejectedStatus, {\n          isAccountDetails: isAccountDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(SucessStatus, {\n          isAccountDetails: isAccountDetails,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        });\n\n      default:\n        if (reqObj.status === undefined && reqObj.completed === false) {\n          return React.createElement(IncompleteStatus, {\n            isAccountDetails: isAccountDetails,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          });\n        }\n\n        return '';\n    }\n  }\n};\n\nvar SummaryRequirements = function SummaryRequirements(_ref6) {\n  var coins = _ref6.coins,\n      user = _ref6.user,\n      _ref6$isAccountDetail = _ref6.isAccountDetails,\n      isAccountDetails = _ref6$isAccountDetail === void 0 ? false : _ref6$isAccountDetail,\n      _ref6$contentClassNam = _ref6.contentClassName,\n      contentClassName = _ref6$contentClassNam === void 0 ? '' : _ref6$contentClassNam,\n      verificationLevel = _ref6.verificationLevel,\n      lastMonthVolume = _ref6.lastMonthVolume,\n      onUpgradeAccount = _ref6.onUpgradeAccount;\n  var _user$userData2 = user.userData,\n      phone_number = _user$userData2.phone_number,\n      address = _user$userData2.address,\n      _user$userData2$id_da = _user$userData2.id_data,\n      id_data = _user$userData2$id_da === void 0 ? {} : _user$userData2$id_da,\n      _user$userData2$bank_ = _user$userData2.bank_account,\n      bank_account = _user$userData2$bank_ === void 0 ? [] : _user$userData2$bank_;\n  var selectedLevel = isAccountDetails ? verificationLevel || user.verification_level : 2;\n  var requirement = getRequirements(user, selectedLevel, lastMonthVolume, coins);\n  var requirementResolved = getAllCompleted(requirement);\n  return React.createElement(\"div\", {\n    className: \"d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, !isAccountDetails && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(ReactSvg, {\n    path: ICONS.VERIFICATION_DOC_STATUS,\n    wrapperClassName: \"requirement-doc-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classnames(contentClassName, 'requirements-content-text', 'summary-content-txt'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, Object.keys(requirement).map(function (step, index) {\n    var reqObj = requirement[step];\n    return React.createElement(\"div\", {\n      key: index,\n      className: classnames('d-flex', 'justify-content-between', _defineProperty({}, getStatusClass(reqObj.status, reqObj.completed), !isAccountDetails)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"\".concat(step, \". \").concat(reqObj.title)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, getStatusIcon(reqObj, isAccountDetails)));\n  })), !isAccountDetails && !user.otp_enabled && React.createElement(\"div\", {\n    className: \"trade-account-link mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/security\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, STRINGS.SUMMARY.ACTIVE_2FA_SECURITY.toUpperCase())), !isAccountDetails && (!address.country || id_data.status !== 3 || !phone_number || !bank_account.filter(function (acc) {\n    return acc.status === 3;\n  }).length) ? React.createElement(\"div\", {\n    className: \"trade-account-link mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/verification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, STRINGS.USER_VERIFICATION.GOTO_VERIFICATION.toUpperCase())) : null, isAccountDetails ? React.createElement(\"div\", {\n    className: \"mt-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: STRINGS.SUMMARY.REQUEST_ACCOUNT_UPGRADE,\n    disabled: !requirementResolved,\n    onClick: onUpgradeAccount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  })) : null));\n};\n\nexport default SummaryRequirements;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Summary/components/SummaryRequirements.js"],"names":["React","ReactSvg","classnames","Link","moment","Button","ICONS","TRADE_ACCOUNT_UPGRADE_MONTH","TRADING_VOLUME_CHART_LIMITS","BASE_CURRENCY","DEFAULT_COIN_DATA","STRINGS","SucessStatus","isAccountDetails","USER_VERIFICATION","COMPLETED","toUpperCase","GREEN_CHECK","IncompleteStatus","INCOMPLETED","VERIFICATION_INCOMPLETE","PendingStatus","VERIFICATION_PENDING","RejectedStatus","VERIFICATION_REJECTED","checkBankVerification","bank_account","id_data","bank_status","length","filter","data","status","checkMonth","currentDate","month","diffMonth","diff","getRequirements","user","level","lastMonthVolume","coins","userData","address","phone_number","bank_verified","symbol","identity","country","verificationObj","level_1","level_2","title","TITLE_USER_DOCUMENTATION","completed","TITLE_ID_DOCUMENTS","TITLE_MOBILE","CONNECT_BANK_ACCOUNT","level_3","formatString","SUMMARY","ACCOUNT_AGE_OF_MONTHS","join","created_at","TRADING_VOLUME_EQUIVALENT","level_4","getStatusClass","status_code","undefined","getAllCompleted","requirement","Object","keys","key","getStatusIcon","reqObj","SummaryRequirements","contentClassName","verificationLevel","onUpgradeAccount","selectedLevel","verification_level","requirementResolved","VERIFICATION_DOC_STATUS","map","step","index","otp_enabled","ACTIVE_2FA_SECURITY","acc","GOTO_VERIFICATION","REQUEST_ACCOUNT_UPGRADE"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactSvg from 'react-svg';\nimport classnames from 'classnames';\nimport { Link } from 'react-router';\nimport moment from 'moment';\n\nimport { Button } from '../../../components';\nimport {\n\tICONS,\n\tTRADE_ACCOUNT_UPGRADE_MONTH,\n\tTRADING_VOLUME_CHART_LIMITS,\n\tBASE_CURRENCY,\n\tDEFAULT_COIN_DATA\n} from '../../../config/constants';\nimport STRINGS from '../../../config/localizedStrings';\n\nconst SucessStatus = ({ isAccountDetails }) => (\n\t<div className=\"d-flex\">\n\t\t{isAccountDetails && (\n\t\t\t<div className=\"requirement-verified mr-2\">\n\t\t\t\t{STRINGS.USER_VERIFICATION.COMPLETED.toUpperCase()}\n\t\t\t</div>\n\t\t)}\n\t\t<ReactSvg\n\t\t\tpath={ICONS.GREEN_CHECK}\n\t\t\twrapperClassName=\"requirement-stauts\"\n\t\t/>\n\t</div>\n);\n\nconst IncompleteStatus = ({ isAccountDetails }) => (\n\t<div className=\"d-flex\">\n\t\t{isAccountDetails ? (\n\t\t\t<div className=\"requirement-incomplete mr-2\">\n\t\t\t\t{STRINGS.USER_VERIFICATION.INCOMPLETED.toUpperCase()}\n\t\t\t</div>\n\t\t) : (\n\t\t\t<ReactSvg\n\t\t\t\tpath={ICONS.VERIFICATION_INCOMPLETE}\n\t\t\t\twrapperClassName=\"requirement-stauts\"\n\t\t\t/>\n\t\t)}\n\t</div>\n);\n\nconst PendingStatus = ({ isAccountDetails }) => (\n\t<div className=\"d-flex\">\n\t\t<ReactSvg\n\t\t\tpath={ICONS.VERIFICATION_PENDING}\n\t\t\twrapperClassName=\"requirement-stauts\"\n\t\t/>\n\t</div>\n);\n\nconst RejectedStatus = ({ isAccountDetails }) => (\n\t<div className=\"d-flex\">\n\t\t<ReactSvg\n\t\t\tpath={ICONS.VERIFICATION_REJECTED}\n\t\t\twrapperClassName=\"requirement-stauts\"\n\t\t/>\n\t</div>\n);\n\nconst checkBankVerification = (bank_account = [], id_data) => {\n\tlet bank_status = 0;\n\tif (bank_account.length) {\n\t\tif (bank_account.filter((data) => data.status === 3).length) {\n\t\t\tbank_status = 3;\n\t\t} else if (bank_account.filter((data) => data.status === 1).length) {\n\t\t\tbank_status = 1;\n\t\t} else if (bank_account.filter((data) => data.status === 2).length) {\n\t\t\tbank_status = 2;\n\t\t}\n\t\tif (id_data.status !== 3) {\n\t\t\tbank_status = 1;\n\t\t}\n\t\tif (\n\t\t\tbank_account.length ===\n\t\t\tbank_account.filter((data) => data.status === 0).length\n\t\t) {\n\t\t\tbank_status = 0;\n\t\t}\n\t}\n\treturn bank_status;\n};\n\nconst checkMonth = (currentDate, month) => {\n\tconst diffMonth = moment().diff(moment(currentDate), 'months');\n\treturn diffMonth >= month;\n};\n\nconst getRequirements = (user, level, lastMonthVolume, coins) => {\n\tconst { address, phone_number, id_data = {}, bank_account } = user.userData;\n\tconst bank_verified = checkBankVerification(bank_account, id_data);\n\tconst { symbol = '' } = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\tconst identity = address.country\n\t\t? id_data.status && id_data.status === 3\n\t\t\t? 3\n\t\t\t: 1\n\t\t: 1;\n\tconst verificationObj = {\n\t\tlevel_1: {},\n\t\tlevel_2: {\n\t\t\t'1': {\n\t\t\t\ttitle: STRINGS.USER_VERIFICATION.TITLE_USER_DOCUMENTATION,\n\t\t\t\tcompleted: identity === 3 ? true : false,\n\t\t\t\tstatus: identity\n\t\t\t},\n\t\t\t'2': {\n\t\t\t\ttitle: STRINGS.USER_VERIFICATION.TITLE_ID_DOCUMENTS,\n\t\t\t\tcompleted: id_data.status === 3,\n\t\t\t\tstatus: id_data.status\n\t\t\t},\n\t\t\t'3': {\n\t\t\t\ttitle: STRINGS.USER_VERIFICATION.TITLE_MOBILE,\n\t\t\t\tcompleted: !!phone_number,\n\t\t\t\tstatus: phone_number ? 3 : 0\n\t\t\t},\n\t\t\t'4': {\n\t\t\t\ttitle: STRINGS.USER_VERIFICATION.CONNECT_BANK_ACCOUNT,\n\t\t\t\tcompleted: bank_verified === 3 ? true : false,\n\t\t\t\tstatus: bank_verified\n\t\t\t}\n\t\t},\n\t\tlevel_3: {\n\t\t\t'1': {\n\t\t\t\ttitle: STRINGS.formatString(\n\t\t\t\t\tSTRINGS.SUMMARY.ACCOUNT_AGE_OF_MONTHS,\n\t\t\t\t\tTRADE_ACCOUNT_UPGRADE_MONTH[0]\n\t\t\t\t).join(' '),\n\t\t\t\tcompleted: checkMonth(\n\t\t\t\t\tuser.created_at,\n\t\t\t\t\tTRADE_ACCOUNT_UPGRADE_MONTH[0]\n\t\t\t\t)\n\t\t\t},\n\t\t\t'2': {\n\t\t\t\ttitle: STRINGS.formatString(\n\t\t\t\t\tSTRINGS.SUMMARY.TRADING_VOLUME_EQUIVALENT,\n\t\t\t\t\tTRADING_VOLUME_CHART_LIMITS[0],\n\t\t\t\t\tsymbol.toUpperCase()\n\t\t\t\t).join(' '),\n\t\t\t\tcompleted: TRADING_VOLUME_CHART_LIMITS[0] <= lastMonthVolume\n\t\t\t}\n\t\t},\n\t\tlevel_4: {\n\t\t\t'1': {\n\t\t\t\ttitle: STRINGS.formatString(\n\t\t\t\t\tSTRINGS.SUMMARY.ACCOUNT_AGE_OF_MONTHS,\n\t\t\t\t\tTRADE_ACCOUNT_UPGRADE_MONTH[1]\n\t\t\t\t).join(' '),\n\t\t\t\tcompleted: checkMonth(\n\t\t\t\t\tuser.created_at,\n\t\t\t\t\tTRADE_ACCOUNT_UPGRADE_MONTH[1]\n\t\t\t\t)\n\t\t\t},\n\t\t\t'2': {\n\t\t\t\ttitle: STRINGS.formatString(\n\t\t\t\t\tSTRINGS.SUMMARY.TRADING_VOLUME_EQUIVALENT,\n\t\t\t\t\tTRADING_VOLUME_CHART_LIMITS[1],\n\t\t\t\t\tsymbol.toUpperCase()\n\t\t\t\t).join(' '),\n\t\t\t\tcompleted: TRADING_VOLUME_CHART_LIMITS[1] <= lastMonthVolume\n\t\t\t}\n\t\t}\n\t};\n\treturn verificationObj[`level_${level}`];\n};\n\nconst getStatusClass = (status_code, completed) => {\n\tswitch (status_code) {\n\t\tcase 0:\n\t\t\treturn 'requirement-not-verified';\n\t\tcase 1:\n\t\t\treturn 'requirement-pending';\n\t\tcase 2:\n\t\t\treturn 'requirement-rejected';\n\t\tcase 3:\n\t\t\treturn 'requirement-verified';\n\t\tdefault:\n\t\t\tif (status_code === undefined && completed === false) {\n\t\t\t\treturn 'requirement-not-verified';\n\t\t\t}\n\t\t\treturn '';\n\t}\n};\n\nconst getAllCompleted = (requirement) => {\n\treturn (\n\t\tObject.keys(requirement).length ===\n\t\tObject.keys(requirement).filter((key) => requirement[key].completed)\n\t\t\t.length\n\t);\n};\n\nconst getStatusIcon = (reqObj, isAccountDetails) => {\n\tif (isAccountDetails) {\n\t\treturn reqObj.completed ? (\n\t\t\t<SucessStatus isAccountDetails={isAccountDetails} />\n\t\t) : (\n\t\t\t<IncompleteStatus isAccountDetails={isAccountDetails} />\n\t\t);\n\t} else {\n\t\tswitch (reqObj.status) {\n\t\t\tcase 0:\n\t\t\t\treturn <IncompleteStatus isAccountDetails={isAccountDetails} />;\n\t\t\tcase 1:\n\t\t\t\treturn <PendingStatus isAccountDetails={isAccountDetails} />;\n\t\t\tcase 2:\n\t\t\t\treturn <RejectedStatus isAccountDetails={isAccountDetails} />;\n\t\t\tcase 3:\n\t\t\t\treturn <SucessStatus isAccountDetails={isAccountDetails} />;\n\t\t\tdefault:\n\t\t\t\tif (reqObj.status === undefined && reqObj.completed === false) {\n\t\t\t\t\treturn <IncompleteStatus isAccountDetails={isAccountDetails} />;\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t}\n\t}\n};\n\nconst SummaryRequirements = ({\n\tcoins,\n\tuser,\n\tisAccountDetails = false,\n\tcontentClassName = '',\n\tverificationLevel,\n\tlastMonthVolume,\n\tonUpgradeAccount\n}) => {\n\tconst {\n\t\tphone_number,\n\t\taddress,\n\t\tid_data = {},\n\t\tbank_account = []\n\t} = user.userData;\n\tconst selectedLevel = isAccountDetails\n\t\t? verificationLevel || user.verification_level\n\t\t: 2;\n\tconst requirement = getRequirements(user, selectedLevel, lastMonthVolume, coins);\n\tlet requirementResolved = getAllCompleted(requirement);\n\treturn (\n\t\t<div className=\"d-flex\">\n\t\t\t{!isAccountDetails && (\n\t\t\t\t<div>\n\t\t\t\t\t<ReactSvg\n\t\t\t\t\t\tpath={ICONS.VERIFICATION_DOC_STATUS}\n\t\t\t\t\t\twrapperClassName=\"requirement-doc-icon\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div\n\t\t\t\tclassName={classnames(\n\t\t\t\t\tcontentClassName,\n\t\t\t\t\t'requirements-content-text',\n\t\t\t\t\t'summary-content-txt'\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<div className=\"my-2\">\n\t\t\t\t\t{Object.keys(requirement).map((step, index) => {\n\t\t\t\t\t\tlet reqObj = requirement[step];\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t\t\t'd-flex',\n\t\t\t\t\t\t\t\t\t'justify-content-between',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t[getStatusClass(\n\t\t\t\t\t\t\t\t\t\t\treqObj.status,\n\t\t\t\t\t\t\t\t\t\t\treqObj.completed\n\t\t\t\t\t\t\t\t\t\t)]: !isAccountDetails\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>{`${step}. ${reqObj.title}`}</div>\n\t\t\t\t\t\t\t\t<div>{getStatusIcon(reqObj, isAccountDetails)}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t{!isAccountDetails && !user.otp_enabled && (\n\t\t\t\t\t<div className=\"trade-account-link mb-2\">\n\t\t\t\t\t\t<Link to=\"/security\">\n\t\t\t\t\t\t\t{STRINGS.SUMMARY.ACTIVE_2FA_SECURITY.toUpperCase()}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{!isAccountDetails &&\n\t\t\t\t(!address.country ||\n\t\t\t\t\tid_data.status !== 3 ||\n\t\t\t\t\t!phone_number ||\n\t\t\t\t\t!bank_account.filter((acc) => acc.status === 3).length) ? (\n\t\t\t\t\t<div className=\"trade-account-link mb-2\">\n\t\t\t\t\t\t<Link to=\"/verification\">\n\t\t\t\t\t\t\t{STRINGS.USER_VERIFICATION.GOTO_VERIFICATION.toUpperCase()}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t{isAccountDetails ? (\n\t\t\t\t\t<div className=\"mt-2\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={STRINGS.SUMMARY.REQUEST_ACCOUNT_UPGRADE}\n\t\t\t\t\t\t\tdisabled={!requirementResolved}\n\t\t\t\t\t\t\tonClick={onUpgradeAccount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SummaryRequirements;\n"]},"metadata":{},"sourceType":"module"}