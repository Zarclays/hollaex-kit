{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/Verification/index.js\";\nimport React, { Component } from 'react';\nimport { SubmissionError } from 'redux-form';\nimport { performVerificationLevelUpdate, verifyData, revokeData } from './actions';\nimport { Card, Input } from 'antd';\nimport { AdminHocForm } from '../../../components';\nimport { validateRequired, validateRange } from '../../../components/AdminForm/validations';\nimport DataDisplay, { renderRowImages, renderRowInformation } from './DataDisplay';\nimport './index.css';\nimport { isSupport, isSupervisor } from '../../../utils/token';\nimport { formatTimestampGregorian, formatTimestampFarsi, DATETIME_FORMAT, DATETIME_FORMAT_FA } from '../../../utils/date';\nvar VERIFICATION_LEVELS_SUPPORT = ['1', '2', '3'];\nvar VERIFICATION_LEVELS_ADMIN = VERIFICATION_LEVELS_SUPPORT.concat(['4', '5', '6']);\nvar IDForm = AdminHocForm('ID_DATA_FORM');\nvar IDRevokeForm = AdminHocForm('ID_DATA_REVOKE_FORM'); // const BankRevokeForm = HocForm('BANK_DATA_REVOKE_FORM');\n\nvar VerificationForm = AdminHocForm('VERIFICATION_FORM');\n\nvar Verification =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Verification, _Component);\n\n  function Verification(props) {\n    var _this;\n\n    _classCallCheck(this, Verification);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Verification).call(this, props));\n\n    _this.onSubmit = function (refreshData) {\n      return function (values) {\n        // redux form set numbers as string, se we have to parse them\n        var postValues = {\n          user_id: _this.props.user_id,\n          verification_level: parseInt(values.verification_level, 10)\n        };\n        return performVerificationLevelUpdate(postValues).then(function () {\n          refreshData(postValues);\n        }).catch(function (err) {\n          throw new SubmissionError({\n            _error: err.data.message\n          });\n        });\n      };\n    };\n\n    _this.onVerify = function (refreshData) {\n      return function (values) {\n        var id_data = _this.props.userInformation.id_data;\n        var postData = {\n          id_data: _objectSpread({}, id_data, {\n            status: values.hasOwnProperty('id_data') ? values.id_data : 3\n          })\n        };\n        return verifyData(values).then(function () {\n          refreshData(postData);\n        }).catch(function (err) {\n          throw new SubmissionError({\n            _error: err.data.message\n          });\n        });\n      };\n    };\n\n    _this.onRevoke = function (refreshData) {\n      return function (values) {\n        var _this$props$userInfor = _this.props.userInformation,\n            id_data = _this$props$userInfor.id_data,\n            bank_account = _this$props$userInfor.bank_account;\n        var postData = {\n          id_data: _objectSpread({}, id_data, {\n            status: values.hasOwnProperty('id_data') ? 2 : bank_account.provided\n          })\n        };\n        return revokeData(values).then(function () {\n          refreshData(postData);\n        }).catch(function (err) {\n          throw new SubmissionError({\n            _error: err.data.message\n          });\n        });\n      };\n    };\n\n    _this.handleNoteChange = function (event) {\n      _this.setState({\n        note: event.target.value\n      });\n    };\n\n    _this.state = {\n      note: ''\n    };\n    return _this;\n  }\n\n  _createClass(Verification, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          userImages = _this$props.userImages,\n          userInformation = _this$props.userInformation,\n          refreshData = _this$props.refreshData;\n      var id = userInformation.id,\n          id_data = userInformation.id_data;\n      var VERIFICATION_LEVELS = isSupport() || isSupervisor() ? VERIFICATION_LEVELS_SUPPORT : VERIFICATION_LEVELS_ADMIN;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"verification_data_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Verification Level\",\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(VerificationForm, {\n        onSubmit: this.onSubmit(refreshData),\n        buttonText: \"Update\",\n        fields: {\n          verification_level: {\n            type: 'select',\n            options: VERIFICATION_LEVELS,\n            label: 'Verification Level',\n            validate: [validateRequired, validateRange(VERIFICATION_LEVELS.map(function (value) {\n              return \"\".concat(value);\n            }))]\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), id_data.status > 0 && React.createElement(Card, {\n        title: \"ID Data\",\n        extra: React.createElement(\"div\", {\n          className: \"verification_data_container--actions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, id_data.status === 1 && React.createElement(IDForm, {\n          onSubmit: function onSubmit() {\n            return _this2.onVerify(refreshData)({\n              user_id: id\n            });\n          },\n          buttonText: 'Verify',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), (!isSupport() || !isSupervisor()) && id_data.status === 1 && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(IDRevokeForm, {\n          onSubmit: function onSubmit() {\n            return _this2.onRevoke(refreshData)({\n              user_id: id,\n              message: _this2.state.note\n            });\n          },\n          buttonText: 'Revoke',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }), React.createElement(Input.TextArea, {\n          rows: 4,\n          value: this.state.note,\n          onChange: this.handleNoteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }))),\n        style: {\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Type: \", id_data.type), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Number: \", id_data.number), id_data.issued_date && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Issue date:\", ' ', formatTimestampGregorian(id_data.issued_date, DATETIME_FORMAT), ' ', \"-\", ' ', formatTimestampFarsi(id_data.issued_date, DATETIME_FORMAT_FA)), id_data.expiration_date && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Expire date:\", ' ', formatTimestampGregorian(id_data.expiration_date, DATETIME_FORMAT), ' ', \"-\", ' ', formatTimestampFarsi(id_data.expiration_date, DATETIME_FORMAT_FA)))), React.createElement(\"div\", {\n        className: \"verification_data_container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(DataDisplay, {\n        data: userImages,\n        title: \"User Identication Ids\",\n        renderRow: renderRowImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(DataDisplay, {\n        data: userInformation,\n        title: \"User Information\",\n        renderRow: renderRowInformation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Verification;\n}(Component);\n\nexport default Verification;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/Verification/index.js"],"names":["React","Component","SubmissionError","performVerificationLevelUpdate","verifyData","revokeData","Card","Input","AdminHocForm","validateRequired","validateRange","DataDisplay","renderRowImages","renderRowInformation","isSupport","isSupervisor","formatTimestampGregorian","formatTimestampFarsi","DATETIME_FORMAT","DATETIME_FORMAT_FA","VERIFICATION_LEVELS_SUPPORT","VERIFICATION_LEVELS_ADMIN","concat","IDForm","IDRevokeForm","VerificationForm","Verification","props","onSubmit","refreshData","values","postValues","user_id","verification_level","parseInt","then","catch","err","_error","data","message","onVerify","id_data","userInformation","postData","status","hasOwnProperty","onRevoke","bank_account","provided","handleNoteChange","event","setState","note","target","value","state","userImages","id","VERIFICATION_LEVELS","width","type","options","label","validate","map","number","issued_date","expiration_date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { SubmissionError } from 'redux-form';\nimport {\n\tperformVerificationLevelUpdate,\n\tverifyData,\n\trevokeData\n} from './actions';\nimport { Card, Input } from 'antd';\n\nimport { AdminHocForm } from '../../../components';\nimport {\n\tvalidateRequired,\n\tvalidateRange\n} from '../../../components/AdminForm/validations';\nimport DataDisplay, {\n\trenderRowImages,\n\trenderRowInformation\n} from './DataDisplay';\n\nimport './index.css';\n\nimport { isSupport, isSupervisor } from '../../../utils/token';\nimport {\n\tformatTimestampGregorian,\n\tformatTimestampFarsi,\n\tDATETIME_FORMAT,\n\tDATETIME_FORMAT_FA\n} from '../../../utils/date';\n\nconst VERIFICATION_LEVELS_SUPPORT = ['1', '2', '3'];\nconst VERIFICATION_LEVELS_ADMIN = VERIFICATION_LEVELS_SUPPORT.concat([\n\t'4',\n\t'5',\n\t'6'\n]);\n\nconst IDForm = AdminHocForm('ID_DATA_FORM');\nconst IDRevokeForm = AdminHocForm('ID_DATA_REVOKE_FORM');\n// const BankRevokeForm = HocForm('BANK_DATA_REVOKE_FORM');\nconst VerificationForm = AdminHocForm('VERIFICATION_FORM');\n\nclass Verification extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnote: ''\n\t\t};\n\t}\n\tonSubmit = (refreshData) => (values) => {\n\t\t// redux form set numbers as string, se we have to parse them\n\t\tconst postValues = {\n\t\t\tuser_id: this.props.user_id,\n\t\t\tverification_level: parseInt(values.verification_level, 10)\n\t\t};\n\t\treturn performVerificationLevelUpdate(postValues)\n\t\t\t.then(() => {\n\t\t\t\trefreshData(postValues);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\tonVerify = (refreshData) => (values) => {\n\t\tconst { id_data } = this.props.userInformation;\n\t\tconst postData = {\n\t\t\tid_data: {\n\t\t\t\t...id_data,\n\t\t\t\tstatus: values.hasOwnProperty('id_data') ? values.id_data : 3\n\t\t\t}\n\t\t};\n\t\treturn verifyData(values)\n\t\t\t.then(() => {\n\t\t\t\trefreshData(postData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\tonRevoke = (refreshData) => (values) => {\n\t\tconst { id_data, bank_account } = this.props.userInformation;\n\t\tconst postData = {\n\t\t\tid_data: {\n\t\t\t\t...id_data,\n\t\t\t\tstatus: values.hasOwnProperty('id_data') ? 2 : bank_account.provided\n\t\t\t}\n\t\t};\n\t\treturn revokeData(values)\n\t\t\t.then(() => {\n\t\t\t\trefreshData(postData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\thandleNoteChange = (event) => {\n\t\tthis.setState({ note: event.target.value });\n\t};\n\n\trender() {\n\t\tconst { userImages, userInformation, refreshData } = this.props;\n\t\tconst { id, id_data } = userInformation;\n\t\tconst VERIFICATION_LEVELS =\n\t\t\tisSupport() || isSupervisor()\n\t\t\t\t? VERIFICATION_LEVELS_SUPPORT\n\t\t\t\t: VERIFICATION_LEVELS_ADMIN;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"verification_data_container\">\n\t\t\t\t\t<Card title=\"Verification Level\" style={{ width: 300 }}>\n\t\t\t\t\t\t<VerificationForm\n\t\t\t\t\t\t\tonSubmit={this.onSubmit(refreshData)}\n\t\t\t\t\t\t\tbuttonText=\"Update\"\n\t\t\t\t\t\t\tfields={{\n\t\t\t\t\t\t\t\tverification_level: {\n\t\t\t\t\t\t\t\t\ttype: 'select',\n\t\t\t\t\t\t\t\t\toptions: VERIFICATION_LEVELS,\n\t\t\t\t\t\t\t\t\tlabel: 'Verification Level',\n\t\t\t\t\t\t\t\t\tvalidate: [\n\t\t\t\t\t\t\t\t\t\tvalidateRequired,\n\t\t\t\t\t\t\t\t\t\tvalidateRange(\n\t\t\t\t\t\t\t\t\t\t\tVERIFICATION_LEVELS.map((value) => `${value}`)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Card>\n\t\t\t\t\t{id_data.status > 0 && (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\ttitle=\"ID Data\"\n\t\t\t\t\t\t\textra={\n\t\t\t\t\t\t\t\t<div className=\"verification_data_container--actions\">\n\t\t\t\t\t\t\t\t\t{id_data.status === 1 && (\n\t\t\t\t\t\t\t\t\t\t<IDForm\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onVerify(refreshData)({\n\t\t\t\t\t\t\t\t\t\t\t\t\tuser_id: id\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbuttonText={'Verify'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{(!isSupport() || !isSupervisor()) &&\n\t\t\t\t\t\t\t\t\t\tid_data.status === 1 && (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<IDRevokeForm\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onRevoke(refreshData)({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuser_id: id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: this.state.note\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tbuttonText={'Revoke'}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<Input.TextArea\n\t\t\t\t\t\t\t\t\t\t\t\t\trows={4}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.state.note}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleNoteChange}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyle={{ width: 300 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p>Type: {id_data.type}</p>\n\t\t\t\t\t\t\t<p>Number: {id_data.number}</p>\n\t\t\t\t\t\t\t{id_data.issued_date && (\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tIssue date:{' '}\n\t\t\t\t\t\t\t\t\t{formatTimestampGregorian(\n\t\t\t\t\t\t\t\t\t\tid_data.issued_date,\n\t\t\t\t\t\t\t\t\t\tDATETIME_FORMAT\n\t\t\t\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t\t\t\t\t-{' '}\n\t\t\t\t\t\t\t\t\t{formatTimestampFarsi(\n\t\t\t\t\t\t\t\t\t\tid_data.issued_date,\n\t\t\t\t\t\t\t\t\t\tDATETIME_FORMAT_FA\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{id_data.expiration_date && (\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tExpire date:{' '}\n\t\t\t\t\t\t\t\t\t{formatTimestampGregorian(\n\t\t\t\t\t\t\t\t\t\tid_data.expiration_date,\n\t\t\t\t\t\t\t\t\t\tDATETIME_FORMAT\n\t\t\t\t\t\t\t\t\t)}{' '}\n\t\t\t\t\t\t\t\t\t-{' '}\n\t\t\t\t\t\t\t\t\t{formatTimestampFarsi(\n\t\t\t\t\t\t\t\t\t\tid_data.expiration_date,\n\t\t\t\t\t\t\t\t\t\tDATETIME_FORMAT_FA\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"verification_data_container\">\n\t\t\t\t\t<DataDisplay\n\t\t\t\t\t\tdata={userImages}\n\t\t\t\t\t\ttitle=\"User Identication Ids\"\n\t\t\t\t\t\trenderRow={renderRowImages}\n\t\t\t\t\t/>\n\t\t\t\t\t<DataDisplay\n\t\t\t\t\t\tdata={userInformation}\n\t\t\t\t\t\ttitle=\"User Information\"\n\t\t\t\t\t\trenderRow={renderRowInformation}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Verification;\n"]},"metadata":{},"sourceType":"module"}