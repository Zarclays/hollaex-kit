{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport { TOKEN_KEY } from '../config/constants';\nvar TOKEN_TIME_KEY = 'time';\nexport var getToken = function getToken() {\n  return localStorage.getItem(TOKEN_KEY);\n};\nexport var setToken = function setToken(token) {\n  localStorage.setItem(TOKEN_KEY, token);\n  localStorage.setItem(TOKEN_TIME_KEY, new Date().getTime());\n};\nexport var removeToken = function removeToken() {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(TOKEN_TIME_KEY);\n};\nexport var getTokenTimestamp = function getTokenTimestamp() {\n  return localStorage.getItem(TOKEN_TIME_KEY);\n};\nexport var isLoggedIn = function isLoggedIn() {\n  var token = getToken();\n  return !!token;\n};\nexport var decodeToken = function decodeToken(token) {\n  return jwtDecode(token);\n};\nexport var checkRole = function checkRole() {\n  var token = getToken();\n  if (!token || token === undefined) return '';\n  var roles = jwtDecode(token).scopes;\n  var role = '';\n\n  if (roles.includes('admin')) {\n    role = 'admin';\n  } else if (roles.includes('supervisor')) {\n    role = 'supervisor';\n  } else if (roles.includes('support')) {\n    role = 'support';\n  } else if (roles.includes('kyc')) {\n    role = 'kyc';\n  }\n\n  return role;\n};\nexport var isUser = function isUser() {\n  return checkRole() === '';\n};\nexport var isKYC = function isKYC() {\n  return checkRole() === 'kyc';\n};\nexport var isSupport = function isSupport() {\n  return checkRole() === 'support';\n};\nexport var isSupervisor = function isSupervisor() {\n  return checkRole() === 'supervisor';\n};\nexport var isAdmin = function isAdmin() {\n  return checkRole() === 'admin';\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/utils/token.js"],"names":["jwtDecode","TOKEN_KEY","TOKEN_TIME_KEY","getToken","localStorage","getItem","setToken","token","setItem","Date","getTime","removeToken","removeItem","getTokenTimestamp","isLoggedIn","decodeToken","checkRole","undefined","roles","scopes","role","includes","isUser","isKYC","isSupport","isSupervisor","isAdmin"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,IAAMC,cAAc,GAAG,MAAvB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC7B,SAAOC,YAAY,CAACC,OAAb,CAAqBJ,SAArB,CAAP;AACA,CAFM;AAIP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAClCH,EAAAA,YAAY,CAACI,OAAb,CAAqBP,SAArB,EAAgCM,KAAhC;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBN,cAArB,EAAqC,IAAIO,IAAJ,GAAWC,OAAX,EAArC;AACA,CAHM;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAChCP,EAAAA,YAAY,CAACQ,UAAb,CAAwBX,SAAxB;AACAG,EAAAA,YAAY,CAACQ,UAAb,CAAwBV,cAAxB;AACA,CAHM;AAKP,OAAO,IAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACtC,SAAOT,YAAY,CAACC,OAAb,CAAqBH,cAArB,CAAP;AACA,CAFM;AAIP,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC/B,MAAIP,KAAK,GAAGJ,QAAQ,EAApB;AACA,SAAO,CAAC,CAACI,KAAT;AACA,CAHM;AAKP,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACR,KAAD;AAAA,SAAWP,SAAS,CAACO,KAAD,CAApB;AAAA,CAApB;AAEP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC9B,MAAMT,KAAK,GAAGJ,QAAQ,EAAtB;AACA,MAAI,CAACI,KAAD,IAAUA,KAAK,KAAKU,SAAxB,EAAmC,OAAO,EAAP;AACnC,MAAMC,KAAK,GAAGlB,SAAS,CAACO,KAAD,CAAT,CAAiBY,MAA/B;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAIF,KAAK,CAACG,QAAN,CAAe,OAAf,CAAJ,EAA6B;AAC5BD,IAAAA,IAAI,GAAG,OAAP;AACA,GAFD,MAEO,IAAIF,KAAK,CAACG,QAAN,CAAe,YAAf,CAAJ,EAAkC;AACxCD,IAAAA,IAAI,GAAG,YAAP;AACA,GAFM,MAEA,IAAIF,KAAK,CAACG,QAAN,CAAe,SAAf,CAAJ,EAA+B;AACrCD,IAAAA,IAAI,GAAG,SAAP;AACA,GAFM,MAEA,IAAIF,KAAK,CAACG,QAAN,CAAe,KAAf,CAAJ,EAA2B;AACjCD,IAAAA,IAAI,GAAG,KAAP;AACA;;AACD,SAAOA,IAAP;AACA,CAfM;AAiBP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC3B,SAAON,SAAS,OAAO,EAAvB;AACA,CAFM;AAGP,OAAO,IAAMO,KAAK,GAAG,SAARA,KAAQ,GAAM;AAC1B,SAAOP,SAAS,OAAO,KAAvB;AACA,CAFM;AAGP,OAAO,IAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC9B,SAAOR,SAAS,OAAO,SAAvB;AACA,CAFM;AAGP,OAAO,IAAMS,YAAY,GAAG,SAAfA,YAAe,GAAM;AACjC,SAAOT,SAAS,OAAO,YAAvB;AACA,CAFM;AAGP,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC5B,SAAOV,SAAS,OAAO,OAAvB;AACA,CAFM","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport { TOKEN_KEY } from '../config/constants';\n\nconst TOKEN_TIME_KEY = 'time';\n\nexport const getToken = () => {\n\treturn localStorage.getItem(TOKEN_KEY);\n};\n\nexport const setToken = (token) => {\n\tlocalStorage.setItem(TOKEN_KEY, token);\n\tlocalStorage.setItem(TOKEN_TIME_KEY, new Date().getTime());\n};\n\nexport const removeToken = () => {\n\tlocalStorage.removeItem(TOKEN_KEY);\n\tlocalStorage.removeItem(TOKEN_TIME_KEY);\n};\n\nexport const getTokenTimestamp = () => {\n\treturn localStorage.getItem(TOKEN_TIME_KEY);\n};\n\nexport const isLoggedIn = () => {\n\tlet token = getToken();\n\treturn !!token;\n};\n\nexport const decodeToken = (token) => jwtDecode(token);\n\nexport const checkRole = () => {\n\tconst token = getToken();\n\tif (!token || token === undefined) return '';\n\tconst roles = jwtDecode(token).scopes;\n\tlet role = '';\n\tif (roles.includes('admin')) {\n\t\trole = 'admin';\n\t} else if (roles.includes('supervisor')) {\n\t\trole = 'supervisor';\n\t} else if (roles.includes('support')) {\n\t\trole = 'support';\n\t} else if (roles.includes('kyc')) {\n\t\trole = 'kyc';\n\t}\n\treturn role;\n};\n\nexport const isUser = () => {\n\treturn checkRole() === '';\n};\nexport const isKYC = () => {\n\treturn checkRole() === 'kyc';\n};\nexport const isSupport = () => {\n\treturn checkRole() === 'support';\n};\nexport const isSupervisor = () => {\n\treturn checkRole() === 'supervisor';\n};\nexport const isAdmin = () => {\n\treturn checkRole() === 'admin';\n};\n"]},"metadata":{},"sourceType":"module"}