{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/UserSettings/NotificationForm.js\";\nimport React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\nimport renderFields from '../../components/Form/factoryFields';\nimport { Button, Accordion } from '../../components';\nimport { getErrorLocalized } from '../../utils/errors';\nimport STRINGS from '../../config/localizedStrings';\nexport var generateNotificationFormValues = function generateNotificationFormValues() {\n  return {\n    popup_order_confirmation: {\n      type: 'toggle',\n      label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_CONFIRMATION,\n      className: 'toggle-wrapper'\n    },\n    popup_order_completed: {\n      type: 'toggle',\n      label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_COMPLETED,\n      className: 'toggle-wrapper'\n    },\n    popup_order_partially_filled: {\n      type: 'toggle',\n      label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_PARTIALLY_FILLED,\n      className: 'toggle-wrapper'\n    }\n  };\n};\n\nvar Form = function Form(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      submitting = _ref.submitting,\n      pristine = _ref.pristine,\n      error = _ref.error,\n      valid = _ref.valid,\n      initialValues = _ref.initialValues,\n      formFields = _ref.formFields;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, renderFields(formFields), error && React.createElement(\"div\", {\n    className: \"warning_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, getErrorLocalized(error)), React.createElement(Button, {\n    className: \"mt-4\",\n    label: STRINGS.SETTING_BUTTON,\n    disabled: pristine || submitting || !valid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n};\n\nvar NotificationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NotificationForm, _Component);\n\n  function NotificationForm() {\n    _classCallCheck(this, NotificationForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NotificationForm).apply(this, arguments));\n  }\n\n  _createClass(NotificationForm, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (JSON.stringify(this.props.initialValues) !== JSON.stringify(prevProps.initialValues)) {\n        this.props.initialize(this.props.initialValues);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var section = [{\n        title: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.TRADE_POPUPS,\n        content: React.createElement(Form, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })),\n        isOpen: true\n      }];\n      return React.createElement(Accordion, {\n        sections: section,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return NotificationForm;\n}(Component);\n\nexport default reduxForm({\n  form: 'NotificationForm'\n})(NotificationForm);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/UserSettings/NotificationForm.js"],"names":["React","Component","reduxForm","renderFields","Button","Accordion","getErrorLocalized","STRINGS","generateNotificationFormValues","popup_order_confirmation","type","label","USER_SETTINGS","NOTIFICATION_FORM","POPUP_ORDER_CONFIRMATION","className","popup_order_completed","POPUP_ORDER_COMPLETED","popup_order_partially_filled","POPUP_ORDER_PARTIALLY_FILLED","Form","handleSubmit","submitting","pristine","error","valid","initialValues","formFields","SETTING_BUTTON","NotificationForm","prevProps","JSON","stringify","props","initialize","section","title","TRADE_POPUPS","content","isOpen","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,kBAAlC;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC;AAAA,SAAO;AACjDC,IAAAA,wBAAwB,EAAE;AACtBC,MAAAA,IAAI,EAAE,QADgB;AAEtBC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,aAAR,CAAsBC,iBAAtB,CAAwCC,wBAFzB;AAGtBC,MAAAA,SAAS,EAAE;AAHW,KADuB;AAMjDC,IAAAA,qBAAqB,EAAE;AACnBN,MAAAA,IAAI,EAAE,QADa;AAEnBC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,aAAR,CAAsBC,iBAAtB,CAAwCI,qBAF5B;AAGnBF,MAAAA,SAAS,EAAE;AAHQ,KAN0B;AAWjDG,IAAAA,4BAA4B,EAAE;AAC1BR,MAAAA,IAAI,EAAE,QADoB;AAE1BC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,aAAR,CAAsBC,iBAAtB,CAAwCM,4BAFrB;AAG1BJ,MAAAA,SAAS,EAAE;AAHe;AAXmB,GAAP;AAAA,CAAvC;;AAkBP,IAAMK,IAAI,GAAG,SAAPA,IAAO;AAAA,MACTC,YADS,QACTA,YADS;AAAA,MAETC,UAFS,QAETA,UAFS;AAAA,MAGTC,QAHS,QAGTA,QAHS;AAAA,MAITC,KAJS,QAITA,KAJS;AAAA,MAKTC,KALS,QAKTA,KALS;AAAA,MAMTC,aANS,QAMTA,aANS;AAAA,MAOTC,UAPS,QAOTA,UAPS;AAAA,SASL;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,YAAY,CAACwB,UAAD,CADjB,EAEKH,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BlB,iBAAiB,CAACkB,KAAD,CAAhD,CAFd,EAGI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAEjB,OAAO,CAACqB,cAFnB;AAGI,IAAA,QAAQ,EAAEL,QAAQ,IAAID,UAAZ,IAA0B,CAACG,KAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CATK;AAAA,CAAb;;IAoBMI,gB;;;;;;;;;;;;;uCACiBC,S,EAAW;AAC1B,UAAIC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAAL,CAAWP,aAA1B,MAA6CK,IAAI,CAACC,SAAL,CAAeF,SAAS,CAACJ,aAAzB,CAAjD,EAA0F;AACtF,aAAKO,KAAL,CAAWC,UAAX,CAAsB,KAAKD,KAAL,CAAWP,aAAjC;AACH;AACJ;;;6BAEQ;AACL,UAAMS,OAAO,GAAG,CAAC;AACbC,QAAAA,KAAK,EAAE7B,OAAO,CAACK,aAAR,CAAsBC,iBAAtB,CAAwCwB,YADlC;AAEbC,QAAAA,OAAO,EAAE,oBAAC,IAAD,oBAAU,KAAKL,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFI;AAGbM,QAAAA,MAAM,EAAE;AAHK,OAAD,CAAhB;AAKA,aAAO,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAEJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;;;EAd0BlC,S;;AAiB/B,eAAeC,SAAS,CAAC;AACrBsC,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZX,gBAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm } from 'redux-form';\n\nimport renderFields from '../../components/Form/factoryFields';\nimport { Button, Accordion } from '../../components';\nimport { getErrorLocalized } from '../../utils/errors';\nimport STRINGS from '../../config/localizedStrings';\n\nexport const generateNotificationFormValues = () => ({\n    popup_order_confirmation: {\n        type: 'toggle',\n        label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_CONFIRMATION,\n        className: 'toggle-wrapper'\n    },\n    popup_order_completed: {\n        type: 'toggle',\n        label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_COMPLETED,\n        className: 'toggle-wrapper'\n    },\n    popup_order_partially_filled: {\n        type: 'toggle',\n        label: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.POPUP_ORDER_PARTIALLY_FILLED,\n        className: 'toggle-wrapper'\n    }\n});\n\nconst Form = ({\n    handleSubmit,\n    submitting,\n    pristine,\n    error,\n    valid,\n    initialValues,\n    formFields\n}) => (\n        <form onSubmit={handleSubmit}>\n            {renderFields(formFields)}\n            {error && <div className=\"warning_text\">{getErrorLocalized(error)}</div>}\n            <Button\n                className=\"mt-4\"\n                label={STRINGS.SETTING_BUTTON}\n                disabled={pristine || submitting || !valid}\n            />\n        </form>\n    );\n\nclass NotificationForm extends Component {\n    componentDidUpdate(prevProps) {\n        if (JSON.stringify(this.props.initialValues) !== JSON.stringify(prevProps.initialValues)) {\n            this.props.initialize(this.props.initialValues)\n        }\n    }\n\n    render() {\n        const section = [{\n            title: STRINGS.USER_SETTINGS.NOTIFICATION_FORM.TRADE_POPUPS,\n            content: <Form {...this.props} />,\n            isOpen: true\n        }]\n        return <Accordion sections={section} />\n    }\n}\n\nexport default reduxForm({\n    form: 'NotificationForm'\n})(NotificationForm);\n"]},"metadata":{},"sourceType":"module"}