{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Wallet/CurrencyWallet.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isMobile } from 'react-device-detect';\nimport { IconTitle, CurrencyBallWithPrice, ButtonLink, ActionNotification, MobileBarBack } from '../../components';\nimport { changeSymbol } from '../../actions/orderbookAction';\nimport { ICONS, FLEX_CENTER_CLASSES, DEFAULT_COIN_DATA } from '../../config/constants';\nimport { generateWalletActionsText, getCurrencyFromName } from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\n\nvar Wallet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wallet, _Component);\n\n  function Wallet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Wallet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Wallet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currency: ''\n    };\n\n    _this.setCurrency = function (currencyName) {\n      var currency = getCurrencyFromName(currencyName);\n\n      if (currency) {\n        _this.setState({\n          currency: currency\n        });\n      } else {\n        _this.props.router.push('/wallet');\n      }\n    };\n\n    _this.renderWalletHeaderBlock = function (symbol, price, balance, coins) {\n      var balanceValue = balance[\"\".concat(symbol, \"_balance\")] || 0;\n\n      var _ref = coins[symbol] || DEFAULT_COIN_DATA,\n          fullname = _ref.fullname;\n\n      return React.createElement(\"div\", {\n        className: \"wallet-header_block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wallet-header_block-currency_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, STRINGS.formatString(STRINGS.CURRENCY_BALANCE_TEXT, fullname), React.createElement(ActionNotification, {\n        text: STRINGS.TRADE_HISTORY,\n        status: \"information\",\n        iconPath: ICONS.BLUE_CLIP,\n        useSvg: true,\n        onClick: function onClick() {\n          _this.props.router.push('/transactions');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(CurrencyBallWithPrice, {\n        symbol: symbol,\n        amount: balanceValue,\n        price: price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    };\n\n    _this.onGoBack = function () {\n      _this.props.router.push('/wallet');\n    };\n\n    return _this;\n  }\n\n  _createClass(Wallet, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setCurrency(this.props.routeParams.currency);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n        this.setCurrency(nextProps.routeParams.currency);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          price = _this$props.price,\n          coins = _this$props.coins;\n      var currency = this.state.currency;\n\n      if (!currency) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      var _generateWalletAction = generateWalletActionsText(currency, coins),\n          depositText = _generateWalletAction.depositText,\n          withdrawText = _generateWalletAction.withdrawText;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, isMobile && React.createElement(MobileBarBack, {\n        onBackClick: this.onGoBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"presentation_container apply_rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(IconTitle, {\n        text: STRINGS.WALLET_TITLE,\n        iconPath: ICONS.BITCOIN_WALLET,\n        useSvg: true,\n        textType: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wallet-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.renderWalletHeaderBlock(currency, price, balance, coins), React.createElement(\"div\", {\n        className: classnames.apply(void 0, _toConsumableArray(FLEX_CENTER_CLASSES).concat(['wallet-buttons_action'])),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ButtonLink, {\n        label: depositText,\n        link: \"/wallet/\".concat(currency, \"/deposit\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(ButtonLink, {\n        label: withdrawText,\n        link: \"/wallet/\".concat(currency, \"/withdraw\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Wallet;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    coins: store.app.coins,\n    price: store.orderbook.price,\n    prices: store.orderbook.prices,\n    balance: store.user.balance,\n    activeLanguage: store.app.language\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeSymbol: bindActionCreators(changeSymbol, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Wallet/CurrencyWallet.js"],"names":["React","Component","classnames","connect","bindActionCreators","isMobile","IconTitle","CurrencyBallWithPrice","ButtonLink","ActionNotification","MobileBarBack","changeSymbol","ICONS","FLEX_CENTER_CLASSES","DEFAULT_COIN_DATA","generateWalletActionsText","getCurrencyFromName","STRINGS","Wallet","state","currency","setCurrency","currencyName","setState","props","router","push","renderWalletHeaderBlock","symbol","price","balance","coins","balanceValue","fullname","formatString","CURRENCY_BALANCE_TEXT","TRADE_HISTORY","BLUE_CLIP","onGoBack","routeParams","nextProps","depositText","withdrawText","WALLET_TITLE","BITCOIN_WALLET","mapStateToProps","store","app","orderbook","prices","user","activeLanguage","language","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isMobile } from 'react-device-detect';\nimport {\n\tIconTitle,\n\tCurrencyBallWithPrice,\n\tButtonLink,\n\tActionNotification,\n\tMobileBarBack\n} from '../../components';\nimport { changeSymbol } from '../../actions/orderbookAction';\nimport { ICONS, FLEX_CENTER_CLASSES, DEFAULT_COIN_DATA } from '../../config/constants';\nimport {\n\tgenerateWalletActionsText,\n\tgetCurrencyFromName\n} from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\n\nclass Wallet extends Component {\n\tstate = {\n\t\tcurrency: ''\n\t};\n\n\tcomponentWillMount() {\n\t\tthis.setCurrency(this.props.routeParams.currency);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n\t\t\tthis.setCurrency(nextProps.routeParams.currency);\n\t\t}\n\t}\n\n\tsetCurrency = (currencyName) => {\n\t\tconst currency = getCurrencyFromName(currencyName);\n\t\tif (currency) {\n\t\t\tthis.setState({ currency });\n\t\t} else {\n\t\t\tthis.props.router.push('/wallet');\n\t\t}\n\t};\n\n\trenderWalletHeaderBlock = (symbol, price, balance, coins) => {\n\t\tconst balanceValue = balance[`${symbol}_balance`] || 0;\n\t\tconst { fullname } = coins[symbol] || DEFAULT_COIN_DATA;\n\t\treturn (\n\t\t\t<div className=\"wallet-header_block\">\n\t\t\t\t<div className=\"wallet-header_block-currency_title\">\n\t\t\t\t\t{STRINGS.formatString(\n\t\t\t\t\t\tSTRINGS.CURRENCY_BALANCE_TEXT,\n\t\t\t\t\t\tfullname\n\t\t\t\t\t)}\n\t\t\t\t\t<ActionNotification\n\t\t\t\t\t\ttext={STRINGS.TRADE_HISTORY}\n\t\t\t\t\t\tstatus=\"information\"\n\t\t\t\t\t\ticonPath={ICONS.BLUE_CLIP}\n\t\t\t\t\t\tuseSvg={true}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.router.push('/transactions');\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CurrencyBallWithPrice\n\t\t\t\t\tsymbol={symbol}\n\t\t\t\t\tamount={balanceValue}\n\t\t\t\t\tprice={price}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tonGoBack = () => {\n\t\tthis.props.router.push('/wallet');\n\t};\n\n\trender() {\n\t\tconst { balance, price, coins } = this.props;\n\t\tconst { currency } = this.state;\n\t\tif (!currency) {\n\t\t\treturn <div />;\n\t\t}\n\n\t\tconst { depositText, withdrawText } = generateWalletActionsText(currency, coins);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t{isMobile && <MobileBarBack onBackClick={this.onGoBack}>\n\t\t\t\t</MobileBarBack> }\n\t\t\t\t<div className=\"presentation_container apply_rtl\">\n\t\t\t\t\t<IconTitle\n\t\t\t\t\t\ttext={STRINGS.WALLET_TITLE}\n\t\t\t\t\t\ticonPath={ICONS.BITCOIN_WALLET}\n\t\t\t\t\t\tuseSvg={true}\n\t\t\t\t\t\ttextType=\"title\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"wallet-container\">\n\t\t\t\t\t\t{this.renderWalletHeaderBlock(currency, price, balance, coins)}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classnames(...FLEX_CENTER_CLASSES, 'wallet-buttons_action')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<ButtonLink label={depositText} link={`/wallet/${currency}/deposit`} />\n\t\t\t\t\t\t<div className=\"separator\" />\n\t\t\t\t\t\t\t<ButtonLink label={withdrawText} link={`/wallet/${currency}/withdraw`} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tcoins: store.app.coins,\n\tprice: store.orderbook.price,\n\tprices: store.orderbook.prices,\n\tbalance: store.user.balance,\n\tactiveLanguage: store.app.language\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tchangeSymbol: bindActionCreators(changeSymbol, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}