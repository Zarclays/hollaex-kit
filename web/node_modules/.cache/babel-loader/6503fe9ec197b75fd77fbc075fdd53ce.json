{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/TradeHistory/index.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Table, Spin } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport { requestTrades } from './actions';\nimport { SubmissionError } from 'redux-form';\nimport { formatCurrency } from '../../../utils/index';\nimport Moment from 'react-moment';\nvar INITIAL_STATE = {\n  tradeHistory: '',\n  loading: true,\n  total: 0,\n  page: 0,\n  pageSize: 10,\n  limit: 50,\n  currentTablePage: 1,\n  isRemaining: true\n};\n\nvar formatDate = function formatDate(value) {\n  return React.createElement(Moment, {\n    format: \"YYYY/MM/DD HH:mm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, value);\n};\n\nvar formatNum = function formatNum(value) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, formatCurrency(value));\n};\n\nvar COLUMNS = [{\n  title: 'Side',\n  dataIndex: 'side',\n  key: 'side'\n}, {\n  title: 'Symbol',\n  dataIndex: 'symbol',\n  key: 'symbol'\n}, {\n  title: 'Size',\n  dataIndex: 'size',\n  key: 'size',\n  render: formatNum\n}, {\n  title: 'Price',\n  dataIndex: 'price',\n  key: 'price',\n  render: formatNum\n}, {\n  title: 'Fee',\n  dataIndex: 'fee',\n  key: 'fee',\n  render: formatNum\n}, {\n  title: 'Time',\n  dataIndex: 'timestamp',\n  key: 'timestamp',\n  render: formatDate\n}];\nvar SCV_COLUMNS = [{\n  label: 'Side',\n  dataIndex: 'side',\n  key: 'side'\n}, {\n  label: 'Symbol',\n  dataIndex: 'symbol',\n  key: 'symbol'\n}, {\n  label: 'Size',\n  dataIndex: 'size',\n  key: 'size'\n}, {\n  label: 'Price',\n  dataIndex: 'price',\n  key: 'price'\n}, {\n  label: 'Fee',\n  dataIndex: 'fee',\n  key: 'fee'\n}, {\n  label: 'Time',\n  dataIndex: 'timestamp',\n  key: 'timestamp'\n}];\n\nvar TradeHistory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TradeHistory, _Component);\n\n  function TradeHistory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TradeHistory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TradeHistory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = INITIAL_STATE;\n\n    _this.componentWillMount = function () {\n      if (_this.props.userId) {\n        _this.handleTrades(_this.props.userId);\n      }\n    };\n\n    _this.handleTrades = function (userId, page, limit) {\n      requestTrades(userId, page, limit).then(function (res) {\n        if (res) {\n          _this.setState({\n            tradeHistory: [].concat(_toConsumableArray(_this.state.tradeHistory), _toConsumableArray(res.data)),\n            loading: false,\n            total: res.count,\n            page: res.page,\n            isRemaining: res.isRemaining\n          });\n        }\n      }).catch(function (err) {\n        if (err.status === 403) {\n          _this.setState({\n            loading: false\n          });\n        }\n\n        throw new SubmissionError({\n          _error: err.data.message\n        });\n      });\n    };\n\n    _this.pageChange = function (count, pageSize) {\n      var _this$state = _this.state,\n          page = _this$state.page,\n          limit = _this$state.limit,\n          isRemaining = _this$state.isRemaining;\n      var pageCount = count % 5 === 0 ? 5 : count % 5;\n      var apiPageTemp = Math.floor(count / 5);\n\n      if (_this.props.userId && limit === pageSize * pageCount && apiPageTemp >= page && isRemaining) {\n        _this.setState({\n          loading: true\n        });\n\n        _this.handleTrades(_this.props.userId, page + 1, limit);\n      }\n\n      _this.setState({\n        currentTablePage: count\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TradeHistory, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          tradeHistory = _this$state2.tradeHistory,\n          currentTablePage = _this$state2.currentTablePage,\n          loading = _this$state2.loading;\n\n      if (loading) {\n        return React.createElement(\"div\", {\n          className: \"app_container-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Spin, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Row, {\n        gutter: 16,\n        style: {\n          marginTop: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        filename: 'trade-history.csv',\n        data: tradeHistory ? tradeHistory : 'NO Data',\n        headers: SCV_COLUMNS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Download table\"), React.createElement(Table, {\n        columns: COLUMNS,\n        rowKey: function rowKey(data) {\n          return data.id;\n        },\n        dataSource: tradeHistory ? tradeHistory : 'NO Data',\n        pagination: {\n          current: currentTablePage,\n          onChange: this.pageChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TradeHistory;\n}(Component);\n\nexport default TradeHistory;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/TradeHistory/index.js"],"names":["React","Component","Row","Col","Table","Spin","CSVLink","requestTrades","SubmissionError","formatCurrency","Moment","INITIAL_STATE","tradeHistory","loading","total","page","pageSize","limit","currentTablePage","isRemaining","formatDate","value","formatNum","COLUMNS","title","dataIndex","key","render","SCV_COLUMNS","label","TradeHistory","state","componentWillMount","props","userId","handleTrades","then","res","setState","data","count","catch","err","status","_error","message","pageChange","pageCount","apiPageTemp","Math","floor","marginTop","id","current","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Col, Table, Spin } from 'antd';\nimport { CSVLink } from 'react-csv';\nimport { requestTrades } from './actions';\n\nimport { SubmissionError } from 'redux-form';\n\nimport { formatCurrency } from '../../../utils/index';\nimport Moment from 'react-moment';\n\nconst INITIAL_STATE = {\n\ttradeHistory: '',\n\tloading: true,\n\ttotal: 0,\n\tpage: 0,\n\tpageSize: 10,\n\tlimit: 50,\n\tcurrentTablePage: 1,\n\tisRemaining: true\n};\n\nconst formatDate = (value) => {\n\treturn <Moment format=\"YYYY/MM/DD HH:mm\">{value}</Moment>;\n};\nconst formatNum = (value) => {\n\treturn <div>{formatCurrency(value)}</div>;\n};\n\nconst COLUMNS = [\n\t{ title: 'Side', dataIndex: 'side', key: 'side' },\n\t{ title: 'Symbol', dataIndex: 'symbol', key: 'symbol' },\n\t{ title: 'Size', dataIndex: 'size', key: 'size', render: formatNum },\n\t{ title: 'Price', dataIndex: 'price', key: 'price', render: formatNum },\n\t{ title: 'Fee', dataIndex: 'fee', key: 'fee', render: formatNum },\n\t{\n\t\ttitle: 'Time',\n\t\tdataIndex: 'timestamp',\n\t\tkey: 'timestamp',\n\t\trender: formatDate\n\t}\n];\n\nconst SCV_COLUMNS = [\n\t{ label: 'Side', dataIndex: 'side', key: 'side' },\n\t{ label: 'Symbol', dataIndex: 'symbol', key: 'symbol' },\n\t{ label: 'Size', dataIndex: 'size', key: 'size' },\n\t{ label: 'Price', dataIndex: 'price', key: 'price' },\n\t{ label: 'Fee', dataIndex: 'fee', key: 'fee' },\n\t{ label: 'Time', dataIndex: 'timestamp', key: 'timestamp' }\n];\n\nclass TradeHistory extends Component {\n\tstate = INITIAL_STATE;\n\n\tcomponentWillMount = () => {\n\t\tif (this.props.userId) {\n\t\t\tthis.handleTrades(this.props.userId);\n\t\t}\n\t};\n\n\thandleTrades = (userId, page, limit) => {\n\t\trequestTrades(userId, page, limit)\n\t\t\t.then((res) => {\n\t\t\t\tif (res) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttradeHistory: [...this.state.tradeHistory, ...res.data],\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\ttotal: res.count,\n\t\t\t\t\t\tpage: res.page,\n\t\t\t\t\t\tisRemaining: res.isRemaining\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (err.status === 403) {\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t}\n\t\t\t\tthrow new SubmissionError({ _error: err.data.message });\n\t\t\t});\n\t};\n\n\tpageChange = (count, pageSize) => {\n\t\tconst { page, limit, isRemaining } = this.state;\n\t\tconst pageCount = count % 5 === 0 ? 5 : count % 5;\n\t\tconst apiPageTemp = Math.floor(count / 5);\n\t\tif (\n\t\t\tthis.props.userId &&\n\t\t\tlimit === pageSize * pageCount &&\n\t\t\tapiPageTemp >= page &&\n\t\t\tisRemaining\n\t\t) {\n\t\t\tthis.setState({ loading: true });\n\t\t\tthis.handleTrades(this.props.userId, page + 1, limit);\n\t\t}\n\t\tthis.setState({ currentTablePage: count });\n\t};\n\n\trender() {\n\t\tconst { tradeHistory, currentTablePage, loading } = this.state;\n\t\tif (loading) {\n\t\t\treturn (\n\t\t\t\t<div className=\"app_container-content\">\n\t\t\t\t\t<Spin size=\"large\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Row gutter={16} style={{ marginTop: 16 }}>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CSVLink\n\t\t\t\t\t\t\tfilename={'trade-history.csv'}\n\t\t\t\t\t\t\tdata={tradeHistory ? tradeHistory : 'NO Data'}\n\t\t\t\t\t\t\theaders={SCV_COLUMNS}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDownload table\n\t\t\t\t\t\t</CSVLink>\n\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\tcolumns={COLUMNS}\n\t\t\t\t\t\t\trowKey={(data) => {\n\t\t\t\t\t\t\t\treturn data.id;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tdataSource={tradeHistory ? tradeHistory : 'NO Data'}\n\t\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\t\tcurrent: currentTablePage,\n\t\t\t\t\t\t\t\tonChange: this.pageChange\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t);\n\t}\n}\n\nexport default TradeHistory;\n"]},"metadata":{},"sourceType":"module"}