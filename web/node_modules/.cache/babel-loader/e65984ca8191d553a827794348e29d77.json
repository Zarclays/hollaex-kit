{"ast":null,"code":"import _objectWithoutProperties from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { BASE_CURRENCY } from '../config/constants';\nimport { ORDERBOOK_CONSTANTS } from '../actions/orderbookAction';\nvar INITIAL_QUICK_TRADE = {\n  fetching: false,\n  data: {\n    symbol: '',\n    price: 0,\n    side: '',\n    size: 0,\n    filled: false\n  },\n  error: ''\n};\nvar INITIAL_QUOTE = {\n  fetching: false,\n  data: {\n    iat: 0,\n    exp: 0,\n    symbol: '',\n    price: 0,\n    side: '',\n    size: 0\n  },\n  token: '',\n  error: '',\n  order: {\n    fetching: false,\n    completed: false,\n    error: '',\n    data: {}\n  }\n};\nvar INITIAL_STATE = {\n  fetched: false,\n  fetching: false,\n  trades: [],\n  error: null,\n  pair: '',\n  symbol: '',\n  price: 0,\n  prices: {\n    eur: 1,\n    eth: 1,\n    btc: 1,\n    bch: 1\n  },\n  asks: [],\n  bids: [],\n  orderbookReady: false,\n  quickTrade: INITIAL_QUICK_TRADE,\n  quoteData: INITIAL_QUOTE,\n  pairsOrderbooks: {},\n  pairsTrades: {},\n  pairs: {}\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      payload = _ref.payload,\n      type = _ref.type;\n\n  switch (type) {\n    case 'CHANGE_SYMBOL':\n      return _objectSpread({}, state, {\n        symbol: payload.symbol\n      });\n\n    case 'CHANGE_PAIR':\n      return _objectSpread({}, state, {\n        symbol: payload.pair,\n        pair: payload.pair\n      });\n    // getOrderbook\n\n    case 'GET_ORDERBOOK_PENDING':\n      return _objectSpread({}, state, {\n        fetching: true,\n        fetched: false,\n        error: null\n      });\n\n    case 'GET_ORDERBOOK_REJECTED':\n      return _objectSpread({}, state, {\n        fetching: false,\n        error: payload\n      });\n\n    case 'GET_ORDERBOOK_FULFILLED':\n      {\n        var bids = payload.data.bids;\n        var asks = payload.data.asks;\n        var allBids = 0; // accumulative bids amounts\n\n        var allAsks = 0; // accumulative asks amounts\n\n        for (var i = 0; i < bids.length; i++) {\n          if (bids[i]) {\n            allBids += bids[i][1];\n            bids[i][2] = allBids;\n          }\n\n          if (asks[i]) {\n            allAsks += asks[i][1];\n            asks[i][2] = allAsks;\n          }\n        }\n\n        return _objectSpread({}, state, {\n          fetching: false,\n          fetched: true,\n          bids: bids,\n          asks: asks\n        });\n      }\n    // setOrderbook\n\n    case 'SET_ORDERBOOK':\n      {\n        var _bids = payload.bids,\n            _asks = payload.asks;\n        return _objectSpread({}, state, {\n          fetching: false,\n          fetched: true,\n          bids: _bids,\n          asks: _asks,\n          orderbookReady: true\n        });\n      }\n    // getTrades\n\n    case 'GET_TRADES_PENDING':\n      return _objectSpread({}, state, {\n        fetching: true,\n        fetched: false,\n        error: null\n      });\n\n    case 'GET_TRADES_REJECTED':\n      return _objectSpread({}, state, {\n        fetching: false,\n        error: payload\n      });\n\n    case 'GET_TRADES_FULFILLED':\n      return _objectSpread({}, state, {\n        fetching: false,\n        fetched: true,\n        trades: payload.data\n      });\n    // addTrades\n\n    case 'ADD_TRADES':\n      {\n        var trades = payload.trades,\n            symbol = payload.symbol;\n        var price = trades[0].price;\n\n        var prices = _objectSpread({}, state.prices);\n\n        prices[symbol] = price;\n        return _objectSpread({}, state, {\n          fetching: false,\n          fetched: true,\n          trades: trades.concat(state.trades),\n          // TODO store trades by currency\n          price: price,\n          prices: prices\n        });\n      }\n\n    case ORDERBOOK_CONSTANTS.QUICK_TRADE_CANCEL:\n      return _objectSpread({}, state, {\n        quickTrade: INITIAL_QUICK_TRADE\n      });\n\n    case ORDERBOOK_CONSTANTS.QUICK_TRADE_PENDING:\n      return _objectSpread({}, state, {\n        quickTrade: _objectSpread({}, INITIAL_QUICK_TRADE, {\n          fetching: true,\n          data: {\n            price: state.quickTrade.data.price\n          }\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.QUICK_TRADE_FULFILLED:\n      return _objectSpread({}, state, {\n        quickTrade: _objectSpread({}, INITIAL_QUICK_TRADE, {\n          fetching: false,\n          data: payload,\n          error: payload.filled ? '' : 'Order is not filled'\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.QUICK_TRADE_REJECTED:\n      return _objectSpread({}, state, {\n        quickTrade: _objectSpread({}, INITIAL_QUICK_TRADE, {\n          fetching: false,\n          error: payload\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_PENDING:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, INITIAL_QUOTE, {\n          fetching: true,\n          data: _objectSpread({}, INITIAL_QUOTE.data, {\n            price: state.quoteData.data.price\n          })\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_FULFILLED:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, INITIAL_QUOTE, {\n          fetching: false,\n          data: payload.data,\n          token: payload.token\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_REJECTED:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, INITIAL_QUOTE, {\n          fetching: false\n        }, payload, {\n          data: _objectSpread({}, INITIAL_QUOTE.data, payload.data),\n          error: payload.message\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_CANCEL:\n      return _objectSpread({}, state, {\n        quoteData: INITIAL_QUOTE\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_PENDING:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, state.quoteData, {\n          order: {\n            fetching: true,\n            completed: false,\n            error: '',\n            data: {}\n          }\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_FULFILLED:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, state.quoteData, {\n          order: {\n            fetching: false,\n            completed: true,\n            data: payload\n          }\n        })\n      });\n\n    case ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_REJECTED:\n      return _objectSpread({}, state, {\n        quoteData: _objectSpread({}, state.quoteData, {\n          order: {\n            fetching: false,\n            completed: true,\n            error: payload\n          }\n        })\n      });\n\n    case 'SET_ORDERBOOKS_DATA':\n      {\n        var action = payload.action,\n            rest = _objectWithoutProperties(payload, [\"action\"]);\n\n        return _objectSpread({}, state, {\n          pairsOrderbooks: _objectSpread({}, state.pairsOrderbooks, rest)\n        });\n      }\n\n    case 'SET_TRADES_DATA':\n      {\n        var _action = payload.action,\n            _symbol = payload.symbol,\n            _rest = _objectWithoutProperties(payload, [\"action\", \"symbol\"]);\n\n        var pairs = state.pairs;\n\n        var _prices = _objectSpread({}, state.prices);\n\n        var pairsTrades = {};\n\n        if (_action === 'partial') {\n          pairsTrades = _objectSpread({}, state.pairsTrades, _rest);\n          Object.keys(_rest).forEach(function (key) {\n            if (_rest[key].length > 0) {\n              var keyPrice = '';\n\n              if (pairs[key] && pairs[key].pair_2 === BASE_CURRENCY) {\n                keyPrice = pairs[key].pair_base;\n              }\n\n              _prices[keyPrice] = _rest[key][0].price;\n            }\n          });\n        } else if (_action === 'update') {\n          pairsTrades = _objectSpread({}, state.pairsTrades);\n          pairsTrades[_symbol] = _rest[_symbol].concat(pairsTrades[_symbol]);\n          var keyPrice = '';\n\n          if (pairs[_symbol] && pairs[_symbol].pair_2 === BASE_CURRENCY) {\n            keyPrice = pairs[_symbol].pair_base;\n          }\n\n          if (keyPrice && _rest[_symbol][0]) {\n            _prices[keyPrice] = _rest[_symbol][0].price;\n          }\n        }\n\n        return _objectSpread({}, state, {\n          pairsTrades: pairsTrades,\n          prices: _prices\n        });\n      }\n\n    case 'SET_PAIRS_DATA':\n      return _objectSpread({}, state, {\n        pairs: payload.pairs\n      });\n\n    case 'LOGOUT':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/reducers/orderbookReducer.js"],"names":["BASE_CURRENCY","ORDERBOOK_CONSTANTS","INITIAL_QUICK_TRADE","fetching","data","symbol","price","side","size","filled","error","INITIAL_QUOTE","iat","exp","token","order","completed","INITIAL_STATE","fetched","trades","pair","prices","eur","eth","btc","bch","asks","bids","orderbookReady","quickTrade","quoteData","pairsOrderbooks","pairsTrades","pairs","reducer","state","payload","type","allBids","allAsks","i","length","concat","QUICK_TRADE_CANCEL","QUICK_TRADE_PENDING","QUICK_TRADE_FULFILLED","QUICK_TRADE_REJECTED","TRADE_QUOTE_REQUEST_PENDING","TRADE_QUOTE_REQUEST_FULFILLED","TRADE_QUOTE_REQUEST_REJECTED","message","TRADE_QUOTE_REQUEST_CANCEL","TRADE_QUOTE_PERFORM_PENDING","TRADE_QUOTE_PERFORM_FULFILLED","TRADE_QUOTE_PERFORM_REJECTED","action","rest","Object","keys","forEach","key","keyPrice","pair_2","pair_base"],"mappings":"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","sourcesContent":["import { BASE_CURRENCY } from '../config/constants';\nimport { ORDERBOOK_CONSTANTS } from '../actions/orderbookAction';\n\nconst INITIAL_QUICK_TRADE = {\n\tfetching: false,\n\tdata: {\n\t\tsymbol: '',\n\t\tprice: 0,\n\t\tside: '',\n\t\tsize: 0,\n\t\tfilled: false\n\t},\n\terror: ''\n};\n\nconst INITIAL_QUOTE = {\n\tfetching: false,\n\tdata: {\n\t\tiat: 0,\n\t\texp: 0,\n\t\tsymbol: '',\n\t\tprice: 0,\n\t\tside: '',\n\t\tsize: 0\n\t},\n\ttoken: '',\n\terror: '',\n\torder: {\n\t\tfetching: false,\n\t\tcompleted: false,\n\t\terror: '',\n\t\tdata: {}\n\t}\n};\n\nconst INITIAL_STATE = {\n\tfetched: false,\n\tfetching: false,\n\ttrades: [],\n\terror: null,\n\tpair: '',\n\tsymbol: '',\n\tprice: 0,\n\tprices: {\n\t\teur: 1,\n\t\teth: 1,\n\t\tbtc: 1,\n\t\tbch: 1\n\t},\n\tasks: [],\n\tbids: [],\n\torderbookReady: false,\n\tquickTrade: INITIAL_QUICK_TRADE,\n\tquoteData: INITIAL_QUOTE,\n\tpairsOrderbooks: {},\n\tpairsTrades: {},\n\tpairs: {}\n};\n\nexport default function reducer(state = INITIAL_STATE, { payload, type }) {\n\tswitch (type) {\n\t\tcase 'CHANGE_SYMBOL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsymbol: payload.symbol\n\t\t\t};\n\t\tcase 'CHANGE_PAIR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsymbol: payload.pair,\n\t\t\t\tpair: payload.pair\n\t\t\t};\n\t\t// getOrderbook\n\t\tcase 'GET_ORDERBOOK_PENDING':\n\t\t\treturn { ...state, fetching: true, fetched: false, error: null };\n\t\tcase 'GET_ORDERBOOK_REJECTED':\n\t\t\treturn { ...state, fetching: false, error: payload };\n\t\tcase 'GET_ORDERBOOK_FULFILLED': {\n\t\t\tlet bids = payload.data.bids;\n\t\t\tlet asks = payload.data.asks;\n\t\t\tlet allBids = 0; // accumulative bids amounts\n\t\t\tlet allAsks = 0; // accumulative asks amounts\n\t\t\tfor (let i = 0; i < bids.length; i++) {\n\t\t\t\tif (bids[i]) {\n\t\t\t\t\tallBids += bids[i][1];\n\t\t\t\t\tbids[i][2] = allBids;\n\t\t\t\t}\n\t\t\t\tif (asks[i]) {\n\t\t\t\t\tallAsks += asks[i][1];\n\t\t\t\t\tasks[i][2] = allAsks;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { ...state, fetching: false, fetched: true, bids, asks };\n\t\t}\n\n\t\t// setOrderbook\n\t\tcase 'SET_ORDERBOOK': {\n\t\t\tconst { bids, asks } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetching: false,\n\t\t\t\tfetched: true,\n\t\t\t\tbids,\n\t\t\t\tasks,\n\t\t\t\torderbookReady: true\n\t\t\t};\n\t\t}\n\n\t\t// getTrades\n\t\tcase 'GET_TRADES_PENDING':\n\t\t\treturn { ...state, fetching: true, fetched: false, error: null };\n\t\tcase 'GET_TRADES_REJECTED':\n\t\t\treturn { ...state, fetching: false, error: payload };\n\t\tcase 'GET_TRADES_FULFILLED':\n\t\t\treturn { ...state, fetching: false, fetched: true, trades: payload.data };\n\t\t// addTrades\n\t\tcase 'ADD_TRADES': {\n\t\t\tconst { trades, symbol } = payload;\n\t\t\tconst price = trades[0].price;\n\t\t\tconst prices = { ...state.prices };\n\t\t\tprices[symbol] = price;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetching: false,\n\t\t\t\tfetched: true,\n\t\t\t\ttrades: trades.concat(state.trades), // TODO store trades by currency\n\t\t\t\tprice,\n\t\t\t\tprices\n\t\t\t};\n\t\t}\n\n\t\tcase ORDERBOOK_CONSTANTS.QUICK_TRADE_CANCEL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquickTrade: INITIAL_QUICK_TRADE\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.QUICK_TRADE_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquickTrade: {\n\t\t\t\t\t...INITIAL_QUICK_TRADE,\n\t\t\t\t\tfetching: true,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tprice: state.quickTrade.data.price\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.QUICK_TRADE_FULFILLED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquickTrade: {\n\t\t\t\t\t...INITIAL_QUICK_TRADE,\n\t\t\t\t\tfetching: false,\n\t\t\t\t\tdata: payload,\n\t\t\t\t\terror: payload.filled ? '' : 'Order is not filled'\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.QUICK_TRADE_REJECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquickTrade: {\n\t\t\t\t\t...INITIAL_QUICK_TRADE,\n\t\t\t\t\tfetching: false,\n\t\t\t\t\terror: payload\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...INITIAL_QUOTE,\n\t\t\t\t\tfetching: true,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...INITIAL_QUOTE.data,\n\t\t\t\t\t\tprice: state.quoteData.data.price\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_FULFILLED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...INITIAL_QUOTE,\n\t\t\t\t\tfetching: false,\n\t\t\t\t\tdata: payload.data,\n\t\t\t\t\ttoken: payload.token\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_REJECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...INITIAL_QUOTE,\n\t\t\t\t\tfetching: false,\n\t\t\t\t\t...payload,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...INITIAL_QUOTE.data,\n\t\t\t\t\t\t...payload.data\n\t\t\t\t\t},\n\t\t\t\t\terror: payload.message\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_REQUEST_CANCEL:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: INITIAL_QUOTE\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_PENDING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...state.quoteData,\n\t\t\t\t\torder: {\n\t\t\t\t\t\tfetching: true,\n\t\t\t\t\t\tcompleted: false,\n\t\t\t\t\t\terror: '',\n\t\t\t\t\t\tdata: {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_FULFILLED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...state.quoteData,\n\t\t\t\t\torder: {\n\t\t\t\t\t\tfetching: false,\n\t\t\t\t\t\tcompleted: true,\n\t\t\t\t\t\tdata: payload\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\tcase ORDERBOOK_CONSTANTS.TRADE_QUOTE_PERFORM_REJECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteData: {\n\t\t\t\t\t...state.quoteData,\n\t\t\t\t\torder: {\n\t\t\t\t\t\tfetching: false,\n\t\t\t\t\t\tcompleted: true,\n\t\t\t\t\t\terror: payload\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tcase 'SET_ORDERBOOKS_DATA': {\n\t\t\tconst { action, ...rest } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpairsOrderbooks: {\n\t\t\t\t\t...state.pairsOrderbooks,\n\t\t\t\t\t...rest\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase 'SET_TRADES_DATA': {\n\t\t\tconst { action, symbol, ...rest } = payload;\n\t\t\tconst { pairs } = state;\n\t\t\tconst prices = { ...state.prices };\n\t\t\tlet pairsTrades = {};\n\t\t\tif (action === 'partial') {\n\t\t\t\tpairsTrades = {\n\t\t\t\t\t...state.pairsTrades,\n\t\t\t\t\t...rest\n\t\t\t\t};\n\t\t\t\tObject.keys(rest).forEach((key) => {\n\t\t\t\t\tif (rest[key].length > 0) {\n\t\t\t\t\t\tlet keyPrice = '';\n\t\t\t\t\t\tif (pairs[key] && pairs[key].pair_2 === BASE_CURRENCY) {\n\t\t\t\t\t\t\tkeyPrice = pairs[key].pair_base;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprices[keyPrice] = rest[key][0].price;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (action === 'update') {\n\t\t\t\tpairsTrades = {\n\t\t\t\t\t...state.pairsTrades\n\t\t\t\t};\n\t\t\t\tpairsTrades[symbol] = rest[symbol].concat(\n\t\t\t\t\tpairsTrades[symbol]\n\t\t\t\t);\n\n\t\t\t\tlet keyPrice = '';\n\t\t\t\tif (pairs[symbol] && pairs[symbol].pair_2 === BASE_CURRENCY) {\n\t\t\t\t\tkeyPrice = pairs[symbol].pair_base;\n\t\t\t\t}\n\n\t\t\t\tif (keyPrice && rest[symbol][0]) {\n\t\t\t\t\tprices[keyPrice] = rest[symbol][0].price;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpairsTrades,\n\t\t\t\tprices\n\t\t\t};\n\t\t}\n\t\tcase 'SET_PAIRS_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpairs: payload.pairs\n\t\t\t};\n\t\tcase 'LOGOUT':\n\t\t\treturn INITIAL_STATE;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}