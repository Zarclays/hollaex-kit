{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/AdminForm/modal.js\";\nimport React from 'react';\nimport renderFields from './utils';\nimport { reduxForm, reset } from 'redux-form';\nimport { Modal } from 'antd';\n\nvar Form = function Form(name) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var allowPristine = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var ModalForm = function ModalForm(_ref) {\n    var handleSubmit = _ref.handleSubmit,\n        submitting = _ref.submitting,\n        pristine = _ref.pristine,\n        error = _ref.error,\n        valid = _ref.valid,\n        fields = _ref.fields,\n        onSubmit = _ref.onSubmit,\n        onCancel = _ref.onCancel,\n        title = _ref.title,\n        buttonText = _ref.buttonText,\n        buttonType = _ref.buttonType,\n        small = _ref.small,\n        visible = _ref.visible;\n    return React.createElement(\"form\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      visible: visible,\n      title: title,\n      okText: \"Create\",\n      onCancel: onCancel,\n      onOk: handleSubmit(onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, fields && renderFields(fields), error && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, error))));\n  };\n\n  return reduxForm({\n    form: name,\n    // onSubmitFail: (result, dispatch) => dispatch(reset(FORM_NAME)),\n    onSubmitSuccess: function onSubmitSuccess(result, dispatch) {\n      return dispatch(reset(name));\n    },\n    enableReinitialize: true\n  })(ModalForm);\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/AdminForm/modal.js"],"names":["React","renderFields","reduxForm","reset","Modal","Form","name","className","allowPristine","ModalForm","handleSubmit","submitting","pristine","error","valid","fields","onSubmit","onCancel","title","buttonText","buttonType","small","visible","form","onSubmitSuccess","result","dispatch","enableReinitialize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAiD;AAAA,MAA1CC,SAA0C,uEAA9B,EAA8B;AAAA,MAA1BC,aAA0B,uEAAV,KAAU;;AAC7D,MAAMC,SAAS,GAAG,SAAZA,SAAY,OAcZ;AAAA,QAbLC,YAaK,QAbLA,YAaK;AAAA,QAZLC,UAYK,QAZLA,UAYK;AAAA,QAXLC,QAWK,QAXLA,QAWK;AAAA,QAVLC,KAUK,QAVLA,KAUK;AAAA,QATLC,KASK,QATLA,KASK;AAAA,QARLC,MAQK,QARLA,MAQK;AAAA,QAPLC,QAOK,QAPLA,QAOK;AAAA,QANLC,QAMK,QANLA,QAMK;AAAA,QALLC,KAKK,QALLA,KAKK;AAAA,QAJLC,UAIK,QAJLA,UAIK;AAAA,QAHLC,UAGK,QAHLA,UAGK;AAAA,QAFLC,KAEK,QAFLA,KAEK;AAAA,QADLC,OACK,QADLA,OACK;AACL,WACC;AAAM,MAAA,SAAS,EAAEf,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AACC,MAAA,OAAO,EAAEe,OADV;AAEC,MAAA,KAAK,EAAEJ,KAFR;AAGC,MAAA,MAAM,EAAC,QAHR;AAIC,MAAA,QAAQ,EAAED,QAJX;AAKC,MAAA,IAAI,EAAEP,YAAY,CAACM,QAAD,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOED,MAAM,IAAId,YAAY,CAACc,MAAD,CAPxB,EAQEF,KAAK,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,KAAT,CADD,CATF,CADD,CADD;AAkBA,GAjCD;;AAmCA,SAAOX,SAAS,CAAC;AAChBqB,IAAAA,IAAI,EAAEjB,IADU;AAEhB;AACAkB,IAAAA,eAAe,EAAE,yBAACC,MAAD,EAASC,QAAT;AAAA,aAAsBA,QAAQ,CAACvB,KAAK,CAACG,IAAD,CAAN,CAA9B;AAAA,KAHD;AAIhBqB,IAAAA,kBAAkB,EAAE;AAJJ,GAAD,CAAT,CAKJlB,SALI,CAAP;AAMA,CA1CD;;AA4CA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport renderFields from './utils';\nimport { reduxForm, reset } from 'redux-form';\nimport { Modal } from 'antd';\n\nconst Form = (name, className = '', allowPristine = false) => {\n\tconst ModalForm = ({\n\t\thandleSubmit,\n\t\tsubmitting,\n\t\tpristine,\n\t\terror,\n\t\tvalid,\n\t\tfields,\n\t\tonSubmit,\n\t\tonCancel,\n\t\ttitle,\n\t\tbuttonText,\n\t\tbuttonType,\n\t\tsmall,\n\t\tvisible\n\t}) => {\n\t\treturn (\n\t\t\t<form className={className}>\n\t\t\t\t<Modal\n\t\t\t\t\tvisible={visible}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tokText=\"Create\"\n\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\tonOk={handleSubmit(onSubmit)}\n\t\t\t\t>\n\t\t\t\t\t{fields && renderFields(fields)}\n\t\t\t\t\t{error && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong>{error}</strong>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Modal>\n\t\t\t</form>\n\t\t);\n\t};\n\n\treturn reduxForm({\n\t\tform: name,\n\t\t// onSubmitFail: (result, dispatch) => dispatch(reset(FORM_NAME)),\n\t\tonSubmitSuccess: (result, dispatch) => dispatch(reset(name)),\n\t\tenableReinitialize: true\n\t})(ModalForm);\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}