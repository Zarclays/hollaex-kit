{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/AdminForm/hoc.js\";\nimport React from 'react';\nimport renderFields from './utils';\nimport { reduxForm, reset } from 'redux-form';\nimport { Button } from 'antd';\n\nvar Form = function Form(name) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var allowPristine = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var HocForm = function HocForm(_ref) {\n    var handleSubmit = _ref.handleSubmit,\n        submitting = _ref.submitting,\n        pristine = _ref.pristine,\n        error = _ref.error,\n        valid = _ref.valid,\n        fields = _ref.fields,\n        onSubmit = _ref.onSubmit,\n        buttonText = _ref.buttonText,\n        buttonType = _ref.buttonType,\n        small = _ref.small;\n    return React.createElement(\"form\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, fields && renderFields(fields), error && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, error)), React.createElement(Button, {\n      type: buttonType ? buttonType : 'primary',\n      onClick: handleSubmit(onSubmit),\n      disabled: (allowPristine ? false : fields && pristine) || submitting || !valid || error,\n      size: small ? 'small' : 'large',\n      className: small ? '' : 'w-100',\n      style: small ? {\n        float: 'right'\n      } : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, buttonText));\n  };\n\n  return reduxForm({\n    form: name,\n    // onSubmitFail: (result, dispatch) => dispatch(reset(FORM_NAME)),\n    onSubmitSuccess: function onSubmitSuccess(result, dispatch) {\n      return dispatch(reset(name));\n    },\n    enableReinitialize: true\n  })(HocForm);\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/AdminForm/hoc.js"],"names":["React","renderFields","reduxForm","reset","Button","Form","name","className","allowPristine","HocForm","handleSubmit","submitting","pristine","error","valid","fields","onSubmit","buttonText","buttonType","small","float","form","onSubmitSuccess","result","dispatch","enableReinitialize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAiD;AAAA,MAA1CC,SAA0C,uEAA9B,EAA8B;AAAA,MAA1BC,aAA0B,uEAAV,KAAU;;AAC7D,MAAMC,OAAO,GAAG,SAAVA,OAAU,OAWV;AAAA,QAVLC,YAUK,QAVLA,YAUK;AAAA,QATLC,UASK,QATLA,UASK;AAAA,QARLC,QAQK,QARLA,QAQK;AAAA,QAPLC,KAOK,QAPLA,KAOK;AAAA,QANLC,KAMK,QANLA,KAMK;AAAA,QALLC,MAKK,QALLA,MAKK;AAAA,QAJLC,QAIK,QAJLA,QAIK;AAAA,QAHLC,UAGK,QAHLA,UAGK;AAAA,QAFLC,UAEK,QAFLA,UAEK;AAAA,QADLC,KACK,QADLA,KACK;AACL,WACC;AAAM,MAAA,SAAS,EAAEZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEQ,MAAM,IAAId,YAAY,CAACc,MAAD,CADxB,EAEEF,KAAK,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,KAAT,CADD,CAHF,EAOC,oBAAC,MAAD;AACC,MAAA,IAAI,EAAEK,UAAU,GAAGA,UAAH,GAAgB,SADjC;AAEC,MAAA,OAAO,EAAER,YAAY,CAACM,QAAD,CAFtB;AAGC,MAAA,QAAQ,EACP,CAACR,aAAa,GAAG,KAAH,GAAWO,MAAM,IAAIH,QAAnC,KACAD,UADA,IAEA,CAACG,KAFD,IAGAD,KAPF;AASC,MAAA,IAAI,EAAEM,KAAK,GAAG,OAAH,GAAa,OATzB;AAUC,MAAA,SAAS,EAAEA,KAAK,GAAG,EAAH,GAAQ,OAVzB;AAWC,MAAA,KAAK,EAAEA,KAAK,GAAG;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAH,GAAwB,IAXrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaEH,UAbF,CAPD,CADD;AAyBA,GArCD;;AAuCA,SAAOf,SAAS,CAAC;AAChBmB,IAAAA,IAAI,EAAEf,IADU;AAEhB;AACAgB,IAAAA,eAAe,EAAE,yBAACC,MAAD,EAASC,QAAT;AAAA,aAAsBA,QAAQ,CAACrB,KAAK,CAACG,IAAD,CAAN,CAA9B;AAAA,KAHD;AAIhBmB,IAAAA,kBAAkB,EAAE;AAJJ,GAAD,CAAT,CAKJhB,OALI,CAAP;AAMA,CA9CD;;AAgDA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport renderFields from './utils';\nimport { reduxForm, reset } from 'redux-form';\nimport { Button } from 'antd';\n\nconst Form = (name, className = '', allowPristine = false) => {\n\tconst HocForm = ({\n\t\thandleSubmit,\n\t\tsubmitting,\n\t\tpristine,\n\t\terror,\n\t\tvalid,\n\t\tfields,\n\t\tonSubmit,\n\t\tbuttonText,\n\t\tbuttonType,\n\t\tsmall\n\t}) => {\n\t\treturn (\n\t\t\t<form className={className}>\n\t\t\t\t{fields && renderFields(fields)}\n\t\t\t\t{error && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>{error}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Button\n\t\t\t\t\ttype={buttonType ? buttonType : 'primary'}\n\t\t\t\t\tonClick={handleSubmit(onSubmit)}\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\t(allowPristine ? false : fields && pristine) ||\n\t\t\t\t\t\tsubmitting ||\n\t\t\t\t\t\t!valid ||\n\t\t\t\t\t\terror\n\t\t\t\t\t}\n\t\t\t\t\tsize={small ? 'small' : 'large'}\n\t\t\t\t\tclassName={small ? '' : 'w-100'}\n\t\t\t\t\tstyle={small ? { float: 'right' } : null}\n\t\t\t\t>\n\t\t\t\t\t{buttonText}\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t);\n\t};\n\n\treturn reduxForm({\n\t\tform: name,\n\t\t// onSubmitFail: (result, dispatch) => dispatch(reset(FORM_NAME)),\n\t\tonSubmitSuccess: (result, dispatch) => dispatch(reset(name)),\n\t\tenableReinitialize: true\n\t})(HocForm);\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}