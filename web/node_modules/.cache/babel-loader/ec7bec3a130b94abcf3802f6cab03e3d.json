{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Withdraw/index.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport math from 'mathjs';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { formValueSelector, change } from 'redux-form';\nimport { isMobile } from 'react-device-detect';\nimport { Loader, WarningVerification, MobileBarBack } from '../../components';\nimport { ICONS, MIN_VERIFICATION_LEVEL_TO_WITHDRAW, MAX_VERIFICATION_LEVEL_TO_WITHDRAW, BASE_CURRENCY } from '../../config/constants';\nimport { getCurrencyFromName, roundNumber } from '../../utils/currency';\nimport { performWithdraw, requestWithdrawFee } from '../../actions/walletActions';\nimport { errorHandler } from '../../components/OtpForm/utils';\nimport { openContactForm } from '../../actions/appActions';\nimport WithdrawCryptocurrency from './form';\nimport { generateFormValues, generateInitialValues } from './formUtils';\nimport { generateBaseInformation, renderExtraInformation, calculateBaseFee } from './utils';\nimport { renderInformation, renderTitleSection } from '../Wallet/components';\nimport { FORM_NAME } from './form';\n\nvar Withdraw =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Withdraw, _Component);\n\n  function Withdraw() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Withdraw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Withdraw)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formValues: {},\n      initialValues: {},\n      checked: false\n    };\n\n    _this.validateRoute = function (currency, bank_account, crypto_wallet, coins) {\n      if (coins[currency] && !crypto_wallet[currency]) {\n        _this.props.router.push('/wallet');\n      } else if (currency) {\n        _this.setState({\n          checked: true\n        });\n      }\n    };\n\n    _this.setCurrency = function (currencyName) {\n      var currency = getCurrencyFromName(currencyName);\n\n      if (currency) {\n        _this.setState({\n          currency: currency,\n          checked: false\n        }, function () {\n          _this.validateRoute(_this.props.routeParams.currency, _this.props.bank_account, _this.props.crypto_wallet, _this.props.coins);\n        }); // if (currency === 'btc' || currency === 'bch' || currency === 'eth') {\n        // \tthis.props.requestWithdrawFee(currency);\n        // }\n\n\n        _this.generateFormValues(getCurrencyFromName(currency), _this.props.balance, _this.props.coins, _this.props.verification_level);\n      } else {\n        _this.props.router.push('/wallet');\n      }\n    };\n\n    _this.generateFormValues = function (currency, balance, coins, verification_level) {\n      var balanceAvailable = balance[\"\".concat(currency, \"_available\")];\n      var formValues = generateFormValues(currency, balanceAvailable, _this.onCalculateMax, coins, verification_level);\n      var initialValues = generateInitialValues(currency, coins);\n\n      _this.setState({\n        formValues: formValues,\n        initialValues: initialValues\n      });\n    };\n\n    _this.onSubmitWithdraw = function (currency) {\n      return function (values) {\n        return performWithdraw(currency, _objectSpread({}, values, {\n          amount: math.eval(values.amount),\n          fee: values.fee ? math.eval(values.fee) : 0,\n          currency: currency\n        })).then(function (response) {\n          return _objectSpread({}, response.data, {\n            currency: _this.state.currency\n          });\n        }).catch(errorHandler);\n      };\n    };\n\n    _this.onCalculateMax = function () {\n      var _this$props = _this.props,\n          balance = _this$props.balance,\n          _this$props$selectedF = _this$props.selectedFee,\n          selectedFee = _this$props$selectedF === void 0 ? 0 : _this$props$selectedF,\n          dispatch = _this$props.dispatch;\n      var currency = _this.state.currency;\n      var balanceAvailable = balance[\"\".concat(currency, \"_available\")];\n\n      if (currency === BASE_CURRENCY) {\n        var fee = calculateBaseFee(balanceAvailable);\n        var amount = math.number(math.subtract(math.fraction(balanceAvailable), math.fraction(fee)));\n        dispatch(change(FORM_NAME, 'amount', math.floor(amount)));\n      } else {\n        var _amount = math.number(math.subtract(math.fraction(balanceAvailable), math.fraction(selectedFee)));\n\n        dispatch(change(FORM_NAME, 'amount', roundNumber(_amount, 4)));\n      }\n    };\n\n    _this.onGoBack = function () {\n      _this.props.router.push('/wallet');\n    };\n\n    return _this;\n  }\n\n  _createClass(Withdraw, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // if (\n      // \tthis.props.verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW &&\n      // \tthis.props.verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW\n      // ) {\n      // \tthis.props.requestBtcWithdrawFee();\n      // \tthis.generateFormValues(\n      // \t\tgetCurrencyFromName(this.props.routeParams.currency),\n      // \t\tthis.props.balance,\n      // \t\tthis.props.btcFee\n      // \t);\n      // }\n      if (this.props.verification_level) {\n        this.validateRoute(this.props.routeParams.currency, this.props.bank_account, this.props.crypto_wallet, this.props.coins);\n      }\n\n      this.setCurrency(this.props.routeParams.currency);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!this.state.checked) {\n        if (nextProps.verification_level) {\n          this.validateRoute(nextProps.routeParams.currency, nextProps.bank_account, nextProps.crypto_wallet, nextProps.coins);\n        }\n      } else if (nextProps.verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW && nextProps.verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW && (nextProps.activeLanguage !== this.props.activeLanguage || nextProps.routeParams.currency !== this.props.routeParams.currency)) {\n        this.generateFormValues(getCurrencyFromName(nextProps.routeParams.currency), nextProps.balance, nextProps.coins, nextProps.verification_level);\n      }\n\n      if (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n        this.setCurrency(nextProps.routeParams.currency);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          balance = _this$props2.balance,\n          verification_level = _this$props2.verification_level,\n          prices = _this$props2.prices,\n          otp_enabled = _this$props2.otp_enabled,\n          bank_account = _this$props2.bank_account,\n          openContactForm = _this$props2.openContactForm,\n          activeLanguage = _this$props2.activeLanguage,\n          router = _this$props2.router,\n          coins = _this$props2.coins;\n      var _this$state = this.state,\n          formValues = _this$state.formValues,\n          initialValues = _this$state.initialValues,\n          currency = _this$state.currency,\n          checked = _this$state.checked;\n\n      if (!currency || !checked) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        });\n      }\n\n      var balanceAvailable = balance[\"\".concat(currency, \"_available\")];\n\n      if (verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW && verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW && balanceAvailable === undefined) {\n        return React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        });\n      }\n\n      var formProps = {\n        currency: currency,\n        onSubmit: this.onSubmitWithdraw(currency),\n        onOpenDialog: this.onOpenDialog,\n        otp_enabled: otp_enabled,\n        openContactForm: openContactForm,\n        formValues: formValues,\n        initialValues: initialValues,\n        activeLanguage: activeLanguage,\n        balanceAvailable: balanceAvailable,\n        currentPrice: prices[currency],\n        router: router\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, isMobile && React.createElement(MobileBarBack, {\n        onBackClick: this.onGoBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"presentation_container apply_rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, !isMobile && renderTitleSection(currency, 'withdraw', ICONS.WITHDRAW, coins), verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW && verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW ? React.createElement(\"div\", {\n        className: classnames('inner_container', 'with_border_top'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, renderInformation(currency, balance, openContactForm, generateBaseInformation, coins), React.createElement(WithdrawCryptocurrency, Object.assign({}, formProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), renderExtraInformation(currency, bank_account)) : React.createElement(\"div\", {\n        className: classnames('inner_container', 'with_border_top'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(WarningVerification, {\n        level: verification_level,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Withdraw;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    prices: store.orderbook.prices,\n    balance: store.user.balance,\n    fee: store.user.fee,\n    verification_level: store.user.verification_level,\n    otp_enabled: store.user.otp_enabled,\n    bank_account: store.user.userData.bank_account,\n    crypto_wallet: store.user.crypto_wallet,\n    activeLanguage: store.app.language,\n    // btcFee: store.wallet.btcFee,\n    selectedFee: formValueSelector(FORM_NAME)(store, 'fee'),\n    coins: store.app.coins,\n    pairs: store.app.pairs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    openContactForm: bindActionCreators(openContactForm, dispatch),\n    requestWithdrawFee: bindActionCreators(requestWithdrawFee, dispatch),\n    dispatch: dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Withdraw);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Withdraw/index.js"],"names":["React","Component","classnames","math","bindActionCreators","connect","formValueSelector","change","isMobile","Loader","WarningVerification","MobileBarBack","ICONS","MIN_VERIFICATION_LEVEL_TO_WITHDRAW","MAX_VERIFICATION_LEVEL_TO_WITHDRAW","BASE_CURRENCY","getCurrencyFromName","roundNumber","performWithdraw","requestWithdrawFee","errorHandler","openContactForm","WithdrawCryptocurrency","generateFormValues","generateInitialValues","generateBaseInformation","renderExtraInformation","calculateBaseFee","renderInformation","renderTitleSection","FORM_NAME","Withdraw","state","formValues","initialValues","checked","validateRoute","currency","bank_account","crypto_wallet","coins","props","router","push","setState","setCurrency","currencyName","routeParams","balance","verification_level","balanceAvailable","onCalculateMax","onSubmitWithdraw","values","amount","eval","fee","then","response","data","catch","selectedFee","dispatch","number","subtract","fraction","floor","onGoBack","nextProps","activeLanguage","prices","otp_enabled","undefined","formProps","onSubmit","onOpenDialog","currentPrice","WITHDRAW","mapStateToProps","store","orderbook","user","userData","app","language","pairs","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport math from 'mathjs';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { formValueSelector, change } from 'redux-form';\nimport { isMobile } from 'react-device-detect';\n\nimport { Loader, WarningVerification, MobileBarBack } from '../../components';\nimport {\n\tICONS,\n\tMIN_VERIFICATION_LEVEL_TO_WITHDRAW,\n\tMAX_VERIFICATION_LEVEL_TO_WITHDRAW,\n\tBASE_CURRENCY\n} from '../../config/constants';\nimport { getCurrencyFromName, roundNumber } from '../../utils/currency';\nimport {\n\tperformWithdraw,\n\trequestWithdrawFee\n} from '../../actions/walletActions';\nimport { errorHandler } from '../../components/OtpForm/utils';\n\nimport { openContactForm } from '../../actions/appActions';\n\nimport WithdrawCryptocurrency from './form';\nimport { generateFormValues, generateInitialValues } from './formUtils';\nimport {\n\tgenerateBaseInformation,\n\trenderExtraInformation,\n\tcalculateBaseFee\n} from './utils';\n\nimport { renderInformation, renderTitleSection } from '../Wallet/components';\n\nimport { FORM_NAME } from './form';\n\nclass Withdraw extends Component {\n\tstate = {\n\t\tformValues: {},\n\t\tinitialValues: {},\n\t\tchecked: false\n\t};\n\n\tcomponentWillMount() {\n\t\t// if (\n\t\t// \tthis.props.verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t// \tthis.props.verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW\n\t\t// ) {\n\t\t// \tthis.props.requestBtcWithdrawFee();\n\t\t// \tthis.generateFormValues(\n\t\t// \t\tgetCurrencyFromName(this.props.routeParams.currency),\n\t\t// \t\tthis.props.balance,\n\t\t// \t\tthis.props.btcFee\n\t\t// \t);\n\t\t// }\n\t\tif (this.props.verification_level) {\n\t\t\tthis.validateRoute(\n\t\t\t\tthis.props.routeParams.currency,\n\t\t\t\tthis.props.bank_account,\n\t\t\t\tthis.props.crypto_wallet,\n\t\t\t\tthis.props.coins\n\t\t\t);\n\t\t}\n\t\tthis.setCurrency(this.props.routeParams.currency);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (!this.state.checked) {\n\t\t\tif (nextProps.verification_level) {\n\t\t\t\tthis.validateRoute(\n\t\t\t\t\tnextProps.routeParams.currency,\n\t\t\t\t\tnextProps.bank_account,\n\t\t\t\t\tnextProps.crypto_wallet,\n\t\t\t\t\tnextProps.coins\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tnextProps.verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t\tnextProps.verification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t\t(nextProps.activeLanguage !== this.props.activeLanguage ||\n\t\t\t\tnextProps.routeParams.currency !== this.props.routeParams.currency)\n\t\t) {\n\t\t\tthis.generateFormValues(\n\t\t\t\tgetCurrencyFromName(nextProps.routeParams.currency),\n\t\t\t\tnextProps.balance,\n\t\t\t\tnextProps.coins,\n\t\t\t\tnextProps.verification_level\n\t\t\t);\n\t\t}\n\t\tif (nextProps.routeParams.currency !== this.props.routeParams.currency) {\n\t\t\tthis.setCurrency(nextProps.routeParams.currency);\n\t\t}\n\t}\n\n\tvalidateRoute = (currency, bank_account, crypto_wallet, coins) => {\n\t\tif (coins[currency] && !crypto_wallet[currency]) {\n\t\t\tthis.props.router.push('/wallet');\n\t\t} else if (currency) {\n\t\t\tthis.setState({ checked: true });\n\t\t}\n\t};\n\n\tsetCurrency = (currencyName) => {\n\t\tconst currency = getCurrencyFromName(currencyName);\n\t\tif (currency) {\n\t\t\tthis.setState({ currency, checked: false }, () => {\n\t\t\t\tthis.validateRoute(\n\t\t\t\t\tthis.props.routeParams.currency,\n\t\t\t\t\tthis.props.bank_account,\n\t\t\t\t\tthis.props.crypto_wallet,\n\t\t\t\t\tthis.props.coins\n\t\t\t\t);\n\t\t\t});\n\t\t\t// if (currency === 'btc' || currency === 'bch' || currency === 'eth') {\n\t\t\t// \tthis.props.requestWithdrawFee(currency);\n\t\t\t// }\n\n\t\t\tthis.generateFormValues(\n\t\t\t\tgetCurrencyFromName(currency),\n\t\t\t\tthis.props.balance,\n\t\t\t\tthis.props.coins,\n\t\t\t\tthis.props.verification_level\n\t\t\t);\n\t\t} else {\n\t\t\tthis.props.router.push('/wallet');\n\t\t}\n\t};\n\n\tgenerateFormValues = (currency, balance, coins, verification_level) => {\n\t\tconst balanceAvailable = balance[`${currency}_available`];\n\t\tconst formValues = generateFormValues(\n\t\t\tcurrency,\n\t\t\tbalanceAvailable,\n\t\t\tthis.onCalculateMax,\n\t\t\tcoins,\n\t\t\tverification_level\n\t\t);\n\t\tconst initialValues = generateInitialValues(currency, coins);\n\n\t\tthis.setState({ formValues, initialValues });\n\t};\n\n\tonSubmitWithdraw = (currency) => (values) => {\n\t\treturn performWithdraw(currency, {\n\t\t\t...values,\n\t\t\tamount: math.eval(values.amount),\n\t\t\tfee: values.fee ? math.eval(values.fee) : 0,\n\t\t\tcurrency\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn { ...response.data, currency: this.state.currency };\n\t\t\t})\n\t\t\t.catch(errorHandler);\n\t};\n\n\tonCalculateMax = () => {\n\t\tconst { balance, selectedFee = 0, dispatch } = this.props;\n\t\tconst { currency } = this.state;\n\t\tconst balanceAvailable = balance[`${currency}_available`];\n\t\tif (currency === BASE_CURRENCY) {\n\t\t\tconst fee = calculateBaseFee(balanceAvailable);\n\t\t\tconst amount = math.number(\n\t\t\t\tmath.subtract(math.fraction(balanceAvailable), math.fraction(fee))\n\t\t\t);\n\t\t\tdispatch(change(FORM_NAME, 'amount', math.floor(amount)));\n\t\t} else {\n\t\t\tconst amount = math.number(\n\t\t\t\tmath.subtract(\n\t\t\t\t\tmath.fraction(balanceAvailable),\n\t\t\t\t\tmath.fraction(selectedFee)\n\t\t\t\t)\n\t\t\t);\n\t\t\tdispatch(change(FORM_NAME, 'amount', roundNumber(amount, 4)));\n\t\t}\n\t};\n\n\tonGoBack = () => {\n\t\tthis.props.router.push('/wallet');\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tbalance,\n\t\t\tverification_level,\n\t\t\tprices,\n\t\t\totp_enabled,\n\t\t\tbank_account,\n\t\t\topenContactForm,\n\t\t\tactiveLanguage,\n\t\t\trouter,\n\t\t\tcoins\n\t\t} = this.props;\n\t\tconst { formValues, initialValues, currency, checked } = this.state;\n\t\tif (!currency || !checked) {\n\t\t\treturn <div />;\n\t\t}\n\n\t\tconst balanceAvailable = balance[`${currency}_available`];\n\n\t\tif (\n\t\t\tverification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t\tverification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t\t(balanceAvailable === undefined)\n\t\t) {\n\t\t\treturn <Loader />;\n\t\t}\n\n\t\tconst formProps = {\n\t\t\tcurrency,\n\t\t\tonSubmit: this.onSubmitWithdraw(currency),\n\t\t\tonOpenDialog: this.onOpenDialog,\n\t\t\totp_enabled,\n\t\t\topenContactForm,\n\t\t\tformValues,\n\t\t\tinitialValues,\n\t\t\tactiveLanguage,\n\t\t\tbalanceAvailable,\n\t\t\tcurrentPrice: prices[currency],\n\t\t\trouter\n\t\t};\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{isMobile && <MobileBarBack onBackClick={this.onGoBack}>\n\t\t\t\t</MobileBarBack> }\n\t\t\t\t<div className=\"presentation_container apply_rtl\">\n\t\t\t\t\t{!isMobile && renderTitleSection(currency, 'withdraw', ICONS.WITHDRAW, coins)}\n\t\t\t\t\t{verification_level >= MIN_VERIFICATION_LEVEL_TO_WITHDRAW &&\n\t\t\t\t\tverification_level <= MAX_VERIFICATION_LEVEL_TO_WITHDRAW ? (\n\t\t\t\t\t\t<div className={classnames('inner_container', 'with_border_top')}>\n\t\t\t\t\t\t\t{renderInformation(\n\t\t\t\t\t\t\t\tcurrency,\n\t\t\t\t\t\t\t\tbalance,\n\t\t\t\t\t\t\t\topenContactForm,\n\t\t\t\t\t\t\t\tgenerateBaseInformation,\n\t\t\t\t\t\t\t\tcoins\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<WithdrawCryptocurrency {...formProps} />\n\t\t\t\t\t\t\t{renderExtraInformation(currency, bank_account)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className={classnames('inner_container', 'with_border_top')}>\n\t\t\t\t\t\t\t<WarningVerification level={verification_level} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tprices: store.orderbook.prices,\n\tbalance: store.user.balance,\n\tfee: store.user.fee,\n\tverification_level: store.user.verification_level,\n\totp_enabled: store.user.otp_enabled,\n\tbank_account: store.user.userData.bank_account,\n\tcrypto_wallet: store.user.crypto_wallet,\n\tactiveLanguage: store.app.language,\n\t// btcFee: store.wallet.btcFee,\n\tselectedFee: formValueSelector(FORM_NAME)(store, 'fee'),\n\tcoins: store.app.coins,\n\tpairs: store.app.pairs\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\topenContactForm: bindActionCreators(openContactForm, dispatch),\n\trequestWithdrawFee: bindActionCreators(requestWithdrawFee, dispatch),\n\tdispatch\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Withdraw);\n"]},"metadata":{},"sourceType":"module"}