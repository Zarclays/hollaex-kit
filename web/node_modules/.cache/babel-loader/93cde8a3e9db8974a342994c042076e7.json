{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Summary/components/AccountAssets.js\";\nimport React from \"react\";\nimport ReactSVG from \"react-svg\";\nimport classnames from \"classnames\";\nimport { DonutChart } from \"../../../components\";\nimport STRINGS from \"../../../config/localizedStrings\";\nimport { BASE_CURRENCY, ICONS, FLEX_CENTER_CLASSES, DEFAULT_COIN_DATA } from \"../../../config/constants\";\nimport { formatAverage, formatToCurrency } from \"../../../utils/currency\";\n\nvar AccountAssets = function AccountAssets(_ref) {\n  var _ref$chartData = _ref.chartData,\n      chartData = _ref$chartData === void 0 ? [] : _ref$chartData,\n      totalAssets = _ref.totalAssets,\n      balance = _ref.balance,\n      coins = _ref.coins;\n  var baseValue = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n  return React.createElement(\"div\", {\n    className: \"summary-section_2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"summary-content-txt assets-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, STRINGS.SUMMARY.ACCOUNT_ASSETS_TXT_1), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, STRINGS.SUMMARY.ACCOUNT_ASSETS_TXT_2)), React.createElement(\"div\", {\n    className: \"w-100 donut-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, BASE_CURRENCY && React.createElement(DonutChart, {\n    coins: coins,\n    chartData: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, chartData.map(function (value, index) {\n    var _ref2 = coins[value.symbol || BASE_CURRENCY] || {},\n        min = _ref2.min,\n        fullname = _ref2.fullname,\n        _ref2$symbol = _ref2.symbol,\n        symbol = _ref2$symbol === void 0 ? '' : _ref2$symbol;\n\n    var currencyBalance = formatToCurrency(balance[\"\".concat(value.symbol, \"_balance\")], min);\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"price-content text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames(\"coin-price-container\", FLEX_CENTER_CLASSES),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ReactSVG, {\n      path: ICONS[\"\".concat(value.symbol.toUpperCase(), \"_ICON\")],\n      wrapperClassName: \"coin-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"price-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, fullname, \":\"), React.createElement(\"div\", {\n      className: \"price-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\".concat(symbol.toUpperCase(), \" \").concat(formatAverage(currencyBalance))), value.symbol !== BASE_CURRENCY && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"~\".concat(formatAverage(value.balanceFormat))));\n  })), React.createElement(\"div\", {\n    className: \"text-center my-3 title-font\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"total-assets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, STRINGS.formatString(STRINGS.TOTAL_ASSETS_VALUE, baseValue.fullname, totalAssets))));\n};\n\nexport default AccountAssets;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Summary/components/AccountAssets.js"],"names":["React","ReactSVG","classnames","DonutChart","STRINGS","BASE_CURRENCY","ICONS","FLEX_CENTER_CLASSES","DEFAULT_COIN_DATA","formatAverage","formatToCurrency","AccountAssets","chartData","totalAssets","balance","coins","baseValue","SUMMARY","ACCOUNT_ASSETS_TXT_1","ACCOUNT_ASSETS_TXT_2","map","value","index","symbol","min","fullname","currencyBalance","toUpperCase","balanceFormat","formatString","TOTAL_ASSETS_VALUE"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactSVG from \"react-svg\";\nimport classnames from \"classnames\";\n\nimport { DonutChart } from \"../../../components\";\nimport STRINGS from \"../../../config/localizedStrings\";\nimport {\n\tBASE_CURRENCY,\n\tICONS,\n\tFLEX_CENTER_CLASSES,\n\tDEFAULT_COIN_DATA\n} from \"../../../config/constants\";\nimport { formatAverage, formatToCurrency } from \"../../../utils/currency\";\n\nconst AccountAssets = ({ chartData = [], totalAssets, balance, coins }) => {\n\tconst baseValue = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\treturn (\n\t\t<div className=\"summary-section_2\">\n\t\t\t<div className=\"summary-content-txt assets-description\">\n\t\t\t\t<div>{STRINGS.SUMMARY.ACCOUNT_ASSETS_TXT_1}</div>\n\t\t\t\t<div>{STRINGS.SUMMARY.ACCOUNT_ASSETS_TXT_2}</div>\n\t\t\t</div>\n\t\t\t<div className=\"w-100 donut-container\">\n\t\t\t\t{BASE_CURRENCY && (\n\t\t\t\t\t<DonutChart\n\t\t\t\t\t\tcoins={coins}\n\t\t\t\t\t\tchartData={chartData}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"d-flex justify-content-between\">\n\t\t\t\t{chartData.map((value, index) => {\n\t\t\t\t\tconst { min, fullname, symbol = '' } =\n\t\t\t\t\t\tcoins[value.symbol || BASE_CURRENCY] || {};\n\t\t\t\t\tlet currencyBalance = formatToCurrency(\n\t\t\t\t\t\tbalance[`${value.symbol}_balance`],\n\t\t\t\t\t\tmin\n\t\t\t\t\t);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={index} className=\"price-content text-center\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={classnames(\n\t\t\t\t\t\t\t\t\t\"coin-price-container\",\n\t\t\t\t\t\t\t\t\tFLEX_CENTER_CLASSES\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ReactSVG\n\t\t\t\t\t\t\t\t\tpath={ICONS[`${value.symbol.toUpperCase()}_ICON`]}\n\t\t\t\t\t\t\t\t\twrapperClassName=\"coin-price\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"price-text\">{fullname}:</div>\n\t\t\t\t\t\t\t<div className=\"price-text\">\n\t\t\t\t\t\t\t\t{`${symbol.toUpperCase()} ${formatAverage(currencyBalance)}`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{value.symbol !== BASE_CURRENCY && (\n\t\t\t\t\t\t\t\t<div>{`~${formatAverage(value.balanceFormat)}`}</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div className=\"text-center my-3 title-font\">\n\t\t\t\t<span className=\"total-assets\">\n\t\t\t\t\t{STRINGS.formatString(\n\t\t\t\t\t\tSTRINGS.TOTAL_ASSETS_VALUE,\n\t\t\t\t\t\tbaseValue.fullname,\n\t\t\t\t\t\ttotalAssets\n\t\t\t\t\t)}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AccountAssets;\n"]},"metadata":{},"sourceType":"module"}