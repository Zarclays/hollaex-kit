{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Wallet/MainWallet.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isMobile } from 'react-device-detect';\nimport { IconTitle, Dialog, Accordion, Notification, MobileBarTabs } from '../../components';\nimport { TransactionsHistory } from '../';\nimport { changeSymbol } from '../../actions/orderbookAction';\nimport { NOTIFICATIONS } from '../../actions/appActions';\nimport { createAddress, cleanCreateAddress } from '../../actions/userAction';\nimport { ICONS, BASE_CURRENCY, CURRENCY_PRICE_FORMAT, DEFAULT_COIN_DATA } from '../../config/constants';\nimport { calculateBalancePrice, formatToCurrency } from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\nimport { AssetsBlock } from './AssetsBlock';\nimport MobileWallet from './MobileWallet';\n\nvar Wallet =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Wallet, _Component);\n\n  function Wallet() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Wallet);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Wallet)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeTab: 0,\n      sections: [],\n      mobileTabs: [],\n      isOpen: true,\n      totalAssets: '',\n      dialogIsOpen: false,\n      selectedCurrency: ''\n    };\n\n    _this.calculateTotalAssets = function (balance, prices, coins) {\n      var total = calculateBalancePrice(balance, prices);\n\n      var _ref = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA,\n          min = _ref.min,\n          _ref$symbol = _ref.symbol,\n          symbol = _ref$symbol === void 0 ? '' : _ref$symbol;\n\n      return STRINGS.formatString(CURRENCY_PRICE_FORMAT, formatToCurrency(total, min), symbol.toUpperCase());\n    };\n\n    _this.generateSections = function (changeSymbol, balance, prices) {\n      var isOpen = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var wallets = arguments.length > 4 ? arguments[4] : undefined;\n      var bankaccount = arguments.length > 5 ? arguments[5] : undefined;\n      var coins = arguments.length > 6 ? arguments[6] : undefined;\n\n      var totalAssets = _this.calculateTotalAssets(balance, prices, coins);\n\n      var sections = [{\n        title: STRINGS.WALLET_ALL_ASSETS,\n        content: React.createElement(AssetsBlock, {\n          balance: balance,\n          prices: prices,\n          coins: coins,\n          totalAssets: totalAssets,\n          changeSymbol: changeSymbol,\n          wallets: wallets,\n          onOpenDialog: _this.onOpenDialog,\n          bankaccount: bankaccount,\n          navigate: _this.goToPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }),\n        isOpen: true,\n        allowClose: false,\n        notification: !isMobile && {\n          text: STRINGS.TRADE_HISTORY,\n          status: 'information',\n          iconPath: ICONS.BLUE_CLIP,\n          allowClick: true,\n          useSvg: true,\n          className: isOpen ? '' : 'wallet-notification',\n          onClick: function onClick() {\n            _this.props.router.push('/transactions');\n          }\n        }\n      }];\n      var mobileTabs = [{\n        title: STRINGS.WALLET_TAB_WALLET,\n        content: React.createElement(MobileWallet, {\n          sections: sections,\n          wallets: wallets,\n          balance: balance,\n          prices: prices,\n          navigate: _this.goToPage,\n          coins: coins,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })\n      }, {\n        title: STRINGS.WALLET_TAB_TRANSACTIONS,\n        content: React.createElement(TransactionsHistory, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })\n      }];\n\n      _this.setState({\n        sections: sections,\n        totalAssets: totalAssets,\n        isOpen: isOpen,\n        mobileTabs: mobileTabs\n      });\n    };\n\n    _this.goToPage = function () {\n      var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      _this.props.router.push(path);\n    };\n\n    _this.goToDeposit = function () {\n      return _this.goToPage('deposit');\n    };\n\n    _this.goToWithdraw = function () {\n      return _this.goToPage('withdraw');\n    };\n\n    _this.goToTransactionsHistory = function () {\n      return _this.goToPage('transactions');\n    };\n\n    _this.onOpenDialog = function (selectedCurrency) {\n      _this.setState({\n        dialogIsOpen: true,\n        selectedCurrency: selectedCurrency\n      });\n\n      _this.props.cleanCreateAddress();\n    };\n\n    _this.onCloseDialog = function () {\n      _this.setState({\n        dialogIsOpen: false,\n        selectedCurrency: ''\n      });\n    };\n\n    _this.onCreateAddress = function () {\n      if (_this.state.selectedCurrency && !_this.props.addressRequest.error) {\n        _this.props.createAddress(_this.state.selectedCurrency);\n      }\n    };\n\n    _this.setActiveTab = function (activeTab) {\n      _this.setState({\n        activeTab: activeTab\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Wallet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateSections(this.props.changeSymbol, this.props.balance, this.props.prices, this.state.isOpen, this.props.wallets, this.props.bankaccount, this.props.coins);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.generateSections(nextProps.changeSymbol, nextProps.balance, nextProps.prices, this.state.isOpen, nextProps.wallets, nextProps.bankaccount, nextProps.coins);\n\n      if (nextProps.addressRequest.success === true && nextProps.addressRequest.success !== this.props.addressRequest.success) {\n        this.onCloseDialog();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          sections = _this$state.sections,\n          dialogIsOpen = _this$state.dialogIsOpen,\n          selectedCurrency = _this$state.selectedCurrency,\n          activeTab = _this$state.activeTab,\n          mobileTabs = _this$state.mobileTabs;\n      var _this$props = this.props,\n          activeTheme = _this$props.activeTheme,\n          addressRequest = _this$props.addressRequest,\n          coins = _this$props.coins;\n\n      if (mobileTabs.length === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"apply_rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, isMobile ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(MobileBarTabs, {\n        tabs: mobileTabs,\n        activeTab: activeTab,\n        setActiveTab: this.setActiveTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content-with-bar d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, mobileTabs[activeTab].content)) : React.createElement(\"div\", {\n        className: \"presentation_container apply_rtl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(IconTitle, {\n        text: STRINGS.WALLET_TITLE // iconPath={ICONS.BITCOIN_WALLET}\n        ,\n        useSvg: true,\n        textType: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wallet-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Accordion, {\n        sections: sections,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        isOpen: dialogIsOpen,\n        label: \"hollaex-modal\",\n        className: \"app-dialog\",\n        onCloseDialog: this.onCloseDialog,\n        shouldCloseOnOverlayClick: false,\n        theme: activeTheme,\n        showCloseText: true,\n        style: {\n          'z-index': 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, dialogIsOpen && selectedCurrency && React.createElement(Notification, {\n        type: NOTIFICATIONS.GENERATE_ADDRESS,\n        onBack: this.onCloseDialog,\n        onGenerate: this.onCreateAddress,\n        currency: selectedCurrency,\n        data: addressRequest,\n        coins: coins,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Wallet;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    coins: store.app.coins,\n    symbol: store.orderbook.symbol,\n    price: store.orderbook.price,\n    prices: store.orderbook.prices,\n    balance: store.user.balance,\n    addressRequest: store.user.addressRequest,\n    activeTheme: store.app.theme,\n    activeLanguage: store.app.language,\n    bankaccount: store.user.userData.bank_account,\n    wallets: store.user.crypto_wallet\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createAddress: bindActionCreators(createAddress, dispatch),\n    cleanCreateAddress: bindActionCreators(cleanCreateAddress, dispatch),\n    changeSymbol: bindActionCreators(changeSymbol, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Wallet/MainWallet.js"],"names":["React","Component","connect","bindActionCreators","isMobile","IconTitle","Dialog","Accordion","Notification","MobileBarTabs","TransactionsHistory","changeSymbol","NOTIFICATIONS","createAddress","cleanCreateAddress","ICONS","BASE_CURRENCY","CURRENCY_PRICE_FORMAT","DEFAULT_COIN_DATA","calculateBalancePrice","formatToCurrency","STRINGS","AssetsBlock","MobileWallet","Wallet","state","activeTab","sections","mobileTabs","isOpen","totalAssets","dialogIsOpen","selectedCurrency","calculateTotalAssets","balance","prices","coins","total","min","symbol","formatString","toUpperCase","generateSections","wallets","bankaccount","title","WALLET_ALL_ASSETS","content","onOpenDialog","goToPage","allowClose","notification","text","TRADE_HISTORY","status","iconPath","BLUE_CLIP","allowClick","useSvg","className","onClick","props","router","push","WALLET_TAB_WALLET","WALLET_TAB_TRANSACTIONS","setState","path","goToDeposit","goToWithdraw","goToTransactionsHistory","onCloseDialog","onCreateAddress","addressRequest","error","setActiveTab","nextProps","success","activeTheme","length","WALLET_TITLE","GENERATE_ADDRESS","mapStateToProps","store","app","orderbook","price","user","theme","activeLanguage","language","userData","bank_account","crypto_wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { isMobile } from 'react-device-detect';\nimport {\n\tIconTitle,\n\tDialog,\n\tAccordion,\n\tNotification,\n\tMobileBarTabs\n} from '../../components';\nimport { TransactionsHistory } from '../';\nimport { changeSymbol } from '../../actions/orderbookAction';\nimport { NOTIFICATIONS } from '../../actions/appActions';\nimport { createAddress, cleanCreateAddress } from '../../actions/userAction';\nimport { ICONS, BASE_CURRENCY, CURRENCY_PRICE_FORMAT, DEFAULT_COIN_DATA } from '../../config/constants';\nimport { calculateBalancePrice, formatToCurrency } from '../../utils/currency';\nimport STRINGS from '../../config/localizedStrings';\n\nimport { AssetsBlock } from './AssetsBlock';\nimport MobileWallet from './MobileWallet';\n\nclass Wallet extends Component {\n\tstate = {\n\t\tactiveTab: 0,\n\t\tsections: [],\n\t\tmobileTabs: [],\n\t\tisOpen: true,\n\t\ttotalAssets: '',\n\t\tdialogIsOpen: false,\n\t\tselectedCurrency: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.generateSections(\n\t\t\tthis.props.changeSymbol,\n\t\t\tthis.props.balance,\n\t\t\tthis.props.prices,\n\t\t\tthis.state.isOpen,\n\t\t\tthis.props.wallets,\n\t\t\tthis.props.bankaccount,\n\t\t\tthis.props.coins\n\t\t);\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.generateSections(\n\t\t\tnextProps.changeSymbol,\n\t\t\tnextProps.balance,\n\t\t\tnextProps.prices,\n\t\t\tthis.state.isOpen,\n\t\t\tnextProps.wallets,\n\t\t\tnextProps.bankaccount,\n\t\t\tnextProps.coins\n\t\t);\n\t\tif (\n\t\t\tnextProps.addressRequest.success === true &&\n\t\t\tnextProps.addressRequest.success !== this.props.addressRequest.success\n\t\t) {\n\t\t\tthis.onCloseDialog();\n\t\t}\n\t}\n\n\tcalculateTotalAssets = (balance, prices, coins) => {\n\t\tconst total = calculateBalancePrice(balance, prices);\n\t\tconst { min, symbol = '' } = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\t\treturn STRINGS.formatString(\n\t\t\tCURRENCY_PRICE_FORMAT,\n\t\t\tformatToCurrency(total, min),\n\t\t\tsymbol.toUpperCase()\n\t\t);\n\t};\n\n\tgenerateSections = (\n\t\tchangeSymbol,\n\t\tbalance,\n\t\tprices,\n\t\tisOpen = false,\n\t\twallets,\n\t\tbankaccount,\n\t\tcoins\n\t) => {\n\t\tconst totalAssets = this.calculateTotalAssets(balance, prices, coins);\n\n\t\tconst sections = [\n\t\t\t{\n\t\t\t\ttitle: STRINGS.WALLET_ALL_ASSETS,\n\t\t\t\tcontent: (\n\t\t\t\t\t<AssetsBlock\n\t\t\t\t\t\tbalance={balance}\n\t\t\t\t\t\tprices={prices}\n\t\t\t\t\t\tcoins={coins}\n\t\t\t\t\t\ttotalAssets={totalAssets}\n\t\t\t\t\t\tchangeSymbol={changeSymbol}\n\t\t\t\t\t\twallets={wallets}\n\t\t\t\t\t\tonOpenDialog={this.onOpenDialog}\n\t\t\t\t\t\tbankaccount={bankaccount}\n\t\t\t\t\t\tnavigate={this.goToPage}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tisOpen: true,\n\t\t\t\tallowClose: false,\n\t\t\t\tnotification: !isMobile && {\n\t\t\t\t\ttext: STRINGS.TRADE_HISTORY,\n\t\t\t\t\tstatus: 'information',\n\t\t\t\t\ticonPath: ICONS.BLUE_CLIP,\n\t\t\t\t\tallowClick: true,\n\t\t\t\t\tuseSvg: true,\n\t\t\t\t\tclassName: isOpen ? '' : 'wallet-notification',\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tthis.props.router.push('/transactions');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t\tconst mobileTabs = [\n\t\t\t{\n\t\t\t\ttitle: STRINGS.WALLET_TAB_WALLET,\n\t\t\t\tcontent: <MobileWallet sections={sections}\n\t\t\t\twallets={wallets}\n\t\t\t\tbalance={balance}\n\t\t\t\tprices={prices}\n\t\t\t\tnavigate={this.goToPage}\n\t\t\t\tcoins={coins}\n\t\t\t/>\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: STRINGS.WALLET_TAB_TRANSACTIONS,\n\t\t\t\tcontent: <TransactionsHistory />\n\t\t\t}\n\t\t];\n\t\tthis.setState({ sections, totalAssets, isOpen, mobileTabs });\n\t};\n\n\tgoToPage = (path = '') => {\n\t\tthis.props.router.push(path);\n\t};\n\tgoToDeposit = () => this.goToPage('deposit');\n\tgoToWithdraw = () => this.goToPage('withdraw');\n\tgoToTransactionsHistory = () => this.goToPage('transactions');\n\n\tonOpenDialog = (selectedCurrency) => {\n\t\tthis.setState({ dialogIsOpen: true, selectedCurrency });\n\t\tthis.props.cleanCreateAddress();\n\t};\n\n\tonCloseDialog = () => {\n\t\tthis.setState({ dialogIsOpen: false, selectedCurrency: '' });\n\t};\n\n\tonCreateAddress = () => {\n\t\tif (this.state.selectedCurrency && !this.props.addressRequest.error) {\n\t\t\tthis.props.createAddress(this.state.selectedCurrency);\n\t\t}\n\t};\n\n\tsetActiveTab = (activeTab) => {\n\t\tthis.setState({ activeTab });\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tsections,\n\t\t\tdialogIsOpen,\n\t\t\tselectedCurrency,\n\t\t\tactiveTab,\n\t\t\tmobileTabs\n\t\t} = this.state;\n\t\tconst { activeTheme, addressRequest, coins } = this.props;\n\t\tif (mobileTabs.length === 0) {\n\t\t\treturn <div />;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"apply_rtl\">\n\t\t\t\t{isMobile ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MobileBarTabs\n\t\t\t\t\t\t\ttabs={mobileTabs}\n\t\t\t\t\t\t\tactiveTab={activeTab}\n\t\t\t\t\t\t\tsetActiveTab={this.setActiveTab}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"content-with-bar d-flex\">\n\t\t\t\t\t\t\t{mobileTabs[activeTab].content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"presentation_container apply_rtl\">\n\t\t\t\t\t\t<IconTitle\n\t\t\t\t\t\t\ttext={STRINGS.WALLET_TITLE}\n\t\t\t\t\t\t\t// iconPath={ICONS.BITCOIN_WALLET}\n\t\t\t\t\t\t\tuseSvg={true}\n\t\t\t\t\t\t\ttextType=\"title\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"wallet-container\">\n\t\t\t\t\t\t\t<Accordion sections={sections} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<Dialog\n\t\t\t\t\tisOpen={dialogIsOpen}\n\t\t\t\t\tlabel=\"hollaex-modal\"\n\t\t\t\t\tclassName=\"app-dialog\"\n\t\t\t\t\tonCloseDialog={this.onCloseDialog}\n\t\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\t\ttheme={activeTheme}\n\t\t\t\t\tshowCloseText={true}\n\t\t\t\t\tstyle={{ 'z-index': 100 }}\n\t\t\t\t>\n\t\t\t\t\t{dialogIsOpen &&\n\t\t\t\t\t\tselectedCurrency && (\n\t\t\t\t\t\t\t<Notification\n\t\t\t\t\t\t\t\ttype={NOTIFICATIONS.GENERATE_ADDRESS}\n\t\t\t\t\t\t\t\tonBack={this.onCloseDialog}\n\t\t\t\t\t\t\t\tonGenerate={this.onCreateAddress}\n\t\t\t\t\t\t\t\tcurrency={selectedCurrency}\n\t\t\t\t\t\t\t\tdata={addressRequest}\n\t\t\t\t\t\t\t\tcoins={coins}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (store) => ({\n\tcoins: store.app.coins,\n\tsymbol: store.orderbook.symbol,\n\tprice: store.orderbook.price,\n\tprices: store.orderbook.prices,\n\tbalance: store.user.balance,\n\taddressRequest: store.user.addressRequest,\n\tactiveTheme: store.app.theme,\n\tactiveLanguage: store.app.language,\n\tbankaccount: store.user.userData.bank_account,\n\twallets: store.user.crypto_wallet\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tcreateAddress: bindActionCreators(createAddress, dispatch),\n\tcleanCreateAddress: bindActionCreators(cleanCreateAddress, dispatch),\n\tchangeSymbol: bindActionCreators(changeSymbol, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}