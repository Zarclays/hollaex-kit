{"ast":null,"code":"import _toConsumableArray from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Summary/components/TradingVolume.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\nimport STRINGS from '../../../config/localizedStrings';\nimport { getTradeVolume } from '../../../actions/userAction';\nimport { BarChart } from '../../../components';\nimport { calculatePrice, formatToCurrency } from '../../../utils/currency';\nimport { TRADING_VOLUME_CHART_LIMITS, SUMMMARY_ICON, CHART_MONTHS, BASE_CURRENCY, DEFAULT_COIN_DATA } from '../../../config/constants';\n\nvar TradingVolume =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TradingVolume, _Component);\n\n  function TradingVolume() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TradingVolume);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TradingVolume)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chartData: [],\n      limits: TRADING_VOLUME_CHART_LIMITS,\n      limitContent: [],\n      peakVolume: TRADING_VOLUME_CHART_LIMITS[TRADING_VOLUME_CHART_LIMITS.length - 1],\n      totalVolume: 0\n    };\n\n    _this.constructData = function (tradeValues, coins) {\n      var _this$props = _this.props,\n          pairs = _this$props.pairs,\n          prices = _this$props.prices,\n          activeTheme = _this$props.activeTheme;\n      var chartData = [];\n      var totalVolume = 0;\n      var peakVolume = _this.state.peakVolume;\n\n      var _ref = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA,\n          min = _ref.min;\n\n      var currentMonth = moment().month();\n\n      var chartMonths = _toConsumableArray(CHART_MONTHS);\n\n      for (var i = 0; i <= currentMonth; i++) {\n        var temp = chartMonths.shift();\n        chartMonths = [].concat(_toConsumableArray(chartMonths), [temp]);\n      }\n\n      if (Object.keys(tradeValues).length) {\n        chartMonths.map(function (obj, key) {\n          var trade = tradeValues[obj.key];\n          var data = {\n            key: obj.key,\n            month: obj.value\n          };\n\n          if (trade) {\n            var total = 0;\n            var pairWisePrice = {};\n            var pairVolume = {};\n            Object.keys(trade).map(function (pair) {\n              var pairValue = pairs[pair] || {};\n              var volumeObj = trade[pair] || {};\n              var pairPrice = calculatePrice(volumeObj.volume, prices[pairValue.pair_base]);\n              pairWisePrice[pairValue.pair_base] = pairPrice;\n              pairVolume[pairValue.pair_base] = volumeObj.volume;\n              total += pairPrice;\n              return total;\n            });\n            data.pairVolume = pairVolume;\n            data.pairWisePrice = pairWisePrice;\n            data.total = total;\n          } else {\n            data.pairVolume = {};\n            data.pairWisePrice = {};\n            data.total = 0;\n          }\n\n          if (peakVolume < data.total) {\n            peakVolume = data.total;\n          }\n\n          totalVolume += data.total;\n          chartData.push(data);\n          return chartData;\n        });\n        var limitContent = [];\n        TRADING_VOLUME_CHART_LIMITS.map(function (_, index) {\n          if (index === 0) {\n            limitContent.push({\n              icon: SUMMMARY_ICON.KRAKEN,\n              text: STRINGS.SUMMARY.PRO_TRADER_ACCOUNT_ELIGIBLITY\n            });\n          } else if (index === 1 && activeTheme === 'dark') {\n            limitContent.push({\n              icon: SUMMMARY_ICON.LEVIATHAN_DARK,\n              text: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n            });\n          } else {\n            limitContent.push({\n              icon: SUMMMARY_ICON.LEVIATHAN,\n              text: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n            });\n          }\n\n          return index;\n        });\n        peakVolume += peakVolume * 0.1;\n\n        if (Object.keys(tradeValues).length) {\n          chartMonths.map(function (obj, key) {\n            var trade = tradeValues[obj.key];\n            var data = {\n              key: obj.key,\n              month: obj.value\n            };\n\n            if (trade) {\n              var total = 0;\n              var pairWisePrice = {};\n              var pairVolume = {};\n              Object.keys(trade).map(function (pair) {\n                var pairValue = pairs[pair] || {};\n                var volumeObj = trade[pair] || {};\n                var pairPrice = calculatePrice(volumeObj.volume, prices[pairValue.pair_base]);\n                pairWisePrice[pairValue.pair_base] = pairPrice;\n                pairVolume[pairValue.pair_base] = volumeObj.volume;\n                total += pairPrice;\n                return total;\n              });\n              data.pairVolume = pairVolume;\n              data.pairWisePrice = pairWisePrice;\n              data.total = total;\n            } else {\n              data.pairVolume = {};\n              data.pairWisePrice = {};\n              data.total = 0;\n            }\n\n            if (peakVolume < data.total) {\n              peakVolume = data.total;\n            }\n\n            totalVolume += data.total;\n            chartData.push(data);\n            return chartData;\n          });\n          var _limitContent = [];\n          TRADING_VOLUME_CHART_LIMITS.map(function (_, index) {\n            if (index === 0) {\n              _limitContent.push({\n                icon: SUMMMARY_ICON.KRAKEN,\n                text: STRINGS.SUMMARY.PRO_TRADER_ACCOUNT_ELIGIBLITY\n              });\n            } else if (index === 1 && activeTheme === 'dark') {\n              _limitContent.push({\n                icon: SUMMMARY_ICON.LEVIATHAN_DARK,\n                text: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n              });\n            } else {\n              _limitContent.push({\n                icon: SUMMMARY_ICON.LEVIATHAN,\n                text: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n              });\n            }\n\n            return index;\n          });\n          peakVolume += peakVolume * 0.1;\n\n          _this.setState({\n            chartData: chartData,\n            limitContent: _limitContent,\n            peakVolume: peakVolume,\n            totalVolume: formatToCurrency(totalVolume, min)\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TradingVolume, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getTradeVolume();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (JSON.stringify(this.props.tradeVolumes) !== JSON.stringify(nextProps.tradeVolumes)) {\n        this.constructData(nextProps.tradeVolumes.data, nextProps.coins);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          chartData = _this$state.chartData,\n          limits = _this$state.limits,\n          limitContent = _this$state.limitContent,\n          peakVolume = _this$state.peakVolume;\n      var _this$props2 = this.props,\n          tradeVolumes = _this$props2.tradeVolumes,\n          coins = _this$props2.coins;\n\n      var _ref2 = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA,\n          fullname = _ref2.fullname;\n\n      return React.createElement(\"div\", {\n        className: \"summary-section_2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"w-100 h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"summary-content-txt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, STRINGS.formatString(STRINGS.SUMMARY.TRADING_VOLUME_TXT_1, fullname)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, STRINGS.SUMMARY.TRADING_VOLUME_TXT_2)), React.createElement(BarChart, {\n        loading: tradeVolumes.fetching && !tradeVolumes.fetched,\n        chartData: chartData,\n        peakVolume: peakVolume,\n        yAxisLimits: limits,\n        limitContent: limitContent,\n        activeTheme: this.props.activeTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TradingVolume;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tradeVolumes: state.user.tradeVolumes,\n    pairs: state.app.pairs,\n    coins: state.app.coins,\n    prices: state.orderbook.prices,\n    activeTheme: state.app.theme\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getTradeVolume: bindActionCreators(getTradeVolume, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TradingVolume);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Summary/components/TradingVolume.js"],"names":["React","Component","connect","bindActionCreators","moment","STRINGS","getTradeVolume","BarChart","calculatePrice","formatToCurrency","TRADING_VOLUME_CHART_LIMITS","SUMMMARY_ICON","CHART_MONTHS","BASE_CURRENCY","DEFAULT_COIN_DATA","TradingVolume","state","chartData","limits","limitContent","peakVolume","length","totalVolume","constructData","tradeValues","coins","props","pairs","prices","activeTheme","min","currentMonth","month","chartMonths","i","temp","shift","Object","keys","map","obj","key","trade","data","value","total","pairWisePrice","pairVolume","pair","pairValue","volumeObj","pairPrice","volume","pair_base","push","_","index","icon","KRAKEN","text","SUMMARY","PRO_TRADER_ACCOUNT_ELIGIBLITY","LEVIATHAN_DARK","VIP_TRADER_ACCOUNT_ELIGIBLITY","LEVIATHAN","setState","nextProps","JSON","stringify","tradeVolumes","fullname","formatString","TRADING_VOLUME_TXT_1","TRADING_VOLUME_TXT_2","fetching","fetched","mapStateToProps","user","app","orderbook","theme","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\n\nimport STRINGS from '../../../config/localizedStrings';\nimport { getTradeVolume } from '../../../actions/userAction';\nimport { BarChart } from '../../../components';\nimport { calculatePrice, formatToCurrency } from '../../../utils/currency';\nimport {\n\tTRADING_VOLUME_CHART_LIMITS,\n\tSUMMMARY_ICON,\n\tCHART_MONTHS,\n\tBASE_CURRENCY,\n\tDEFAULT_COIN_DATA\n} from '../../../config/constants';\n\nclass TradingVolume extends Component {\n\tstate = {\n\t\tchartData: [],\n\t\tlimits: TRADING_VOLUME_CHART_LIMITS,\n\t\tlimitContent: [],\n\t\tpeakVolume:\n\t\t\tTRADING_VOLUME_CHART_LIMITS[TRADING_VOLUME_CHART_LIMITS.length - 1],\n\t\ttotalVolume: 0\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.getTradeVolume();\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (\n\t\t\tJSON.stringify(this.props.tradeVolumes) !==\n\t\t\tJSON.stringify(nextProps.tradeVolumes)\n\t\t) {\n\t\t\tthis.constructData(nextProps.tradeVolumes.data, nextProps.coins);\n\t\t}\n\t}\n\n\tconstructData = (tradeValues, coins) => {\n\t\tconst { pairs, prices, activeTheme } = this.props;\n\t\tconst chartData = [];\n\t\tlet totalVolume = 0;\n\t\tlet peakVolume = this.state.peakVolume;\n\t\tconst { min } = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\t\tconst currentMonth = moment().month();\n\t\tlet chartMonths = [...CHART_MONTHS];\n\t\tfor (let i = 0; i <= currentMonth; i++) {\n\t\t\tlet temp = chartMonths.shift();\n\t\t\tchartMonths = [...chartMonths, temp];\n\t\t}\n\n\t\tif (Object.keys(tradeValues).length) {\n\t\t\tchartMonths.map((obj, key) => {\n\t\t\t\tlet trade = tradeValues[obj.key];\n\t\t\t\tlet data = {\n\t\t\t\t\tkey: obj.key,\n\t\t\t\t\tmonth: obj.value\n\t\t\t\t};\n\t\t\t\tif (trade) {\n\t\t\t\t\tlet total = 0;\n\t\t\t\t\tlet pairWisePrice = {};\n\t\t\t\t\tlet pairVolume = {};\n\t\t\t\t\tObject.keys(trade).map((pair) => {\n\t\t\t\t\t\tlet pairValue = pairs[pair] || {};\n\t\t\t\t\t\tlet volumeObj = trade[pair] || {};\n\t\t\t\t\t\tlet pairPrice = calculatePrice(\n\t\t\t\t\t\t\tvolumeObj.volume,\n\t\t\t\t\t\t\tprices[pairValue.pair_base]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tpairWisePrice[pairValue.pair_base] = pairPrice;\n\t\t\t\t\t\tpairVolume[pairValue.pair_base] = volumeObj.volume;\n\t\t\t\t\t\ttotal += pairPrice;\n\t\t\t\t\t\treturn total;\n\t\t\t\t\t});\n\t\t\t\t\tdata.pairVolume = pairVolume;\n\t\t\t\t\tdata.pairWisePrice = pairWisePrice;\n\t\t\t\t\tdata.total = total;\n\t\t\t\t} else {\n\t\t\t\t\tdata.pairVolume = {};\n\t\t\t\t\tdata.pairWisePrice = {};\n\t\t\t\t\tdata.total = 0;\n\t\t\t\t}\n\t\t\t\tif (peakVolume < data.total) {\n\t\t\t\t\tpeakVolume = data.total;\n\t\t\t\t}\n\t\t\t\ttotalVolume += data.total;\n\t\t\t\tchartData.push(data);\n\t\t\t\treturn chartData;\n\t\t\t});\n\t\t\tconst limitContent = [];\n\t\t\tTRADING_VOLUME_CHART_LIMITS.map((_, index) => {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\ticon: SUMMMARY_ICON.KRAKEN,\n\t\t\t\t\t\ttext: STRINGS.SUMMARY.PRO_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t});\n\t\t\t\t} else if (index === 1 && activeTheme === 'dark') {\n\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\ticon: SUMMMARY_ICON.LEVIATHAN_DARK,\n\t\t\t\t\t\ttext: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\ticon: SUMMMARY_ICON.LEVIATHAN,\n\t\t\t\t\t\ttext: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn index;\n\t\t\t});\n\t\t\tpeakVolume += peakVolume * 0.1;\n\n\t\t\tif (Object.keys(tradeValues).length) {\n\t\t\t\tchartMonths.map((obj, key) => {\n\t\t\t\t\tlet trade = tradeValues[obj.key];\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\tkey: obj.key,\n\t\t\t\t\t\tmonth: obj.value\n\t\t\t\t\t};\n\t\t\t\t\tif (trade) {\n\t\t\t\t\t\tlet total = 0;\n\t\t\t\t\t\tlet pairWisePrice = {};\n\t\t\t\t\t\tlet pairVolume = {};\n\t\t\t\t\t\tObject.keys(trade).map((pair) => {\n\t\t\t\t\t\t\tlet pairValue = pairs[pair] || {};\n\t\t\t\t\t\t\tlet volumeObj = trade[pair] || {};\n\t\t\t\t\t\t\tlet pairPrice = calculatePrice(\n\t\t\t\t\t\t\t\tvolumeObj.volume,\n\t\t\t\t\t\t\t\tprices[pairValue.pair_base]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tpairWisePrice[pairValue.pair_base] = pairPrice;\n\t\t\t\t\t\t\tpairVolume[pairValue.pair_base] = volumeObj.volume;\n\t\t\t\t\t\t\ttotal += pairPrice;\n\t\t\t\t\t\t\treturn total;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdata.pairVolume = pairVolume;\n\t\t\t\t\t\tdata.pairWisePrice = pairWisePrice;\n\t\t\t\t\t\tdata.total = total;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.pairVolume = {};\n\t\t\t\t\t\tdata.pairWisePrice = {};\n\t\t\t\t\t\tdata.total = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (peakVolume < data.total) {\n\t\t\t\t\t\tpeakVolume = data.total;\n\t\t\t\t\t}\n\t\t\t\t\ttotalVolume += data.total;\n\t\t\t\t\tchartData.push(data);\n\t\t\t\t\treturn chartData;\n\t\t\t\t});\n\t\t\t\tconst limitContent = [];\n\t\t\t\tTRADING_VOLUME_CHART_LIMITS.map((_, index) => {\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\t\ticon: SUMMMARY_ICON.KRAKEN,\n\t\t\t\t\t\t\ttext: STRINGS.SUMMARY.PRO_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (index === 1 && activeTheme === 'dark') {\n\t\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\t\ticon: SUMMMARY_ICON.LEVIATHAN_DARK,\n\t\t\t\t\t\t\ttext: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlimitContent.push({\n\t\t\t\t\t\t\ticon: SUMMMARY_ICON.LEVIATHAN,\n\t\t\t\t\t\t\ttext: STRINGS.SUMMARY.VIP_TRADER_ACCOUNT_ELIGIBLITY\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn index;\n\t\t\t\t});\n\t\t\t\tpeakVolume += peakVolume * 0.1;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tchartData,\n\t\t\t\t\tlimitContent,\n\t\t\t\t\tpeakVolume,\n\t\t\t\t\ttotalVolume: formatToCurrency(totalVolume, min)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { chartData, limits, limitContent, peakVolume } = this.state;\n\t\tconst { tradeVolumes, coins } = this.props;\n\t\tconst { fullname } = coins[BASE_CURRENCY] || DEFAULT_COIN_DATA;\n\t\treturn (\n\t\t\t<div className=\"summary-section_2\">\n\t\t\t\t<div className=\"w-100 h-100\">\n\t\t\t\t\t<div className=\"summary-content-txt\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{STRINGS.formatString(\n\t\t\t\t\t\t\t\tSTRINGS.SUMMARY.TRADING_VOLUME_TXT_1,\n\t\t\t\t\t\t\t\tfullname\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>{STRINGS.SUMMARY.TRADING_VOLUME_TXT_2}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<BarChart\n\t\t\t\t\t\tloading={tradeVolumes.fetching && !tradeVolumes.fetched}\n\t\t\t\t\t\tchartData={chartData}\n\t\t\t\t\t\tpeakVolume={peakVolume}\n\t\t\t\t\t\tyAxisLimits={limits}\n\t\t\t\t\t\tlimitContent={limitContent}\n\t\t\t\t\t\tactiveTheme={this.props.activeTheme}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\ttradeVolumes: state.user.tradeVolumes,\n\tpairs: state.app.pairs,\n\tcoins: state.app.coins,\n\tprices: state.orderbook.prices,\n\tactiveTheme: state.app.theme\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgetTradeVolume: bindActionCreators(getTradeVolume, dispatch)\n});\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(TradingVolume);\n"]},"metadata":{},"sourceType":"module"}