{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Signup/SignupForm.js\";\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { required, password, email, requiredWithCustomMessage, normalizeEmail } from '../../components/Form/validations';\nimport { AuthForm, BlueLink } from '../../components';\nimport STRINGS from '../../config/localizedStrings';\nexport var FORM_NAME = 'SignForm';\nexport var generateFormFields = function generateFormFields(strings, theme) {\n  return {\n    email: {\n      type: 'email',\n      validate: [requiredWithCustomMessage(strings.VALIDATIONS.TYPE_EMAIL), email],\n      normalize: normalizeEmail,\n      fullWidth: true,\n      label: strings.FORM_FIELDS.EMAIL_LABEL,\n      placeholder: strings.FORM_FIELDS.EMAIL_PLACEHOLDER\n    },\n    password: {\n      type: 'password',\n      validate: [required, password],\n      fullWidth: true,\n      label: strings.FORM_FIELDS.PASSWORD_LABEL,\n      placeholder: strings.FORM_FIELDS.PASSWORD_PLACEHOLDER\n    },\n    password_repeat: {\n      type: 'password',\n      validate: [required],\n      fullWidth: true,\n      label: strings.FORM_FIELDS.PASSWORD_REPEAT_LABEL,\n      placeholder: strings.FORM_FIELDS.PASSWORD_REPEAT_PLACEHOLDER\n    },\n    terms: {\n      type: 'checkbox',\n      fullWidth: true,\n      validate: [requiredWithCustomMessage(strings.VALIDATIONS.ACCEPT_TERMS)],\n      label: strings.formatString(strings.SIGN_UP.TERMS.text, React.createElement(BlueLink, {\n        href: \"https://www.hollaex.com/terms_privacy/\",\n        text: strings.SIGN_UP.TERMS.terms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(BlueLink, {\n        href: \"https://www.hollaex.com/terms_privacy/\",\n        text: strings.SIGN_UP.TERMS.policy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))\n    },\n    captcha: {\n      type: 'captcha',\n      theme: theme,\n      validate: [required]\n    }\n  };\n};\n\nvar validate = function validate(values) {\n  var password = values.password,\n      password_repeat = values.password_repeat;\n  var errors = {};\n\n  if (password && password_repeat && password !== password_repeat) {\n    errors.password_repeat = STRINGS.VALIDATIONS.PASSWORDS_DONT_MATCH;\n  }\n\n  return errors;\n};\n\nvar Form = function Form(props) {\n  return React.createElement(AuthForm, Object.assign({}, props, {\n    buttonLabel: STRINGS.SIGNUP_TEXT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n};\n\nexport default reduxForm({\n  form: FORM_NAME,\n  validate: validate\n})(Form);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Signup/SignupForm.js"],"names":["React","reduxForm","required","password","email","requiredWithCustomMessage","normalizeEmail","AuthForm","BlueLink","STRINGS","FORM_NAME","generateFormFields","strings","theme","type","validate","VALIDATIONS","TYPE_EMAIL","normalize","fullWidth","label","FORM_FIELDS","EMAIL_LABEL","placeholder","EMAIL_PLACEHOLDER","PASSWORD_LABEL","PASSWORD_PLACEHOLDER","password_repeat","PASSWORD_REPEAT_LABEL","PASSWORD_REPEAT_PLACEHOLDER","terms","ACCEPT_TERMS","formatString","SIGN_UP","TERMS","text","policy","captcha","values","errors","PASSWORDS_DONT_MATCH","Form","props","SIGNUP_TEXT","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport {\n\trequired,\n\tpassword,\n\temail,\n\trequiredWithCustomMessage,\n\tnormalizeEmail\n} from '../../components/Form/validations';\nimport { AuthForm, BlueLink } from '../../components';\nimport STRINGS from '../../config/localizedStrings';\n\nexport const FORM_NAME = 'SignForm';\n\nexport const generateFormFields = (strings, theme) => ({\n\temail: {\n\t\ttype: 'email',\n\t\tvalidate: [\n\t\t\trequiredWithCustomMessage(strings.VALIDATIONS.TYPE_EMAIL),\n\t\t\temail\n\t\t],\n\t\tnormalize: normalizeEmail,\n\t\tfullWidth: true,\n\t\tlabel: strings.FORM_FIELDS.EMAIL_LABEL,\n\t\tplaceholder: strings.FORM_FIELDS.EMAIL_PLACEHOLDER\n\t},\n\tpassword: {\n\t\ttype: 'password',\n\t\tvalidate: [required, password],\n\t\tfullWidth: true,\n\t\tlabel: strings.FORM_FIELDS.PASSWORD_LABEL,\n\t\tplaceholder: strings.FORM_FIELDS.PASSWORD_PLACEHOLDER\n\t},\n\tpassword_repeat: {\n\t\ttype: 'password',\n\t\tvalidate: [required],\n\t\tfullWidth: true,\n\t\tlabel: strings.FORM_FIELDS.PASSWORD_REPEAT_LABEL,\n\t\tplaceholder: strings.FORM_FIELDS.PASSWORD_REPEAT_PLACEHOLDER\n\t},\n\tterms: {\n\t\ttype: 'checkbox',\n\t\tfullWidth: true,\n\t\tvalidate: [requiredWithCustomMessage(strings.VALIDATIONS.ACCEPT_TERMS)],\n\t\tlabel: strings.formatString(\n\t\t\tstrings.SIGN_UP.TERMS.text,\n\t\t\t<BlueLink\n\t\t\t\thref=\"https://www.hollaex.com/terms_privacy/\"\n\t\t\t\ttext={strings.SIGN_UP.TERMS.terms}\n\t\t\t/>,\n\t\t\t<BlueLink\n\t\t\t\thref=\"https://www.hollaex.com/terms_privacy/\"\n\t\t\t\ttext={strings.SIGN_UP.TERMS.policy}\n\t\t\t/>\n\t\t)\n\t},\n\tcaptcha: {\n\t\ttype: 'captcha',\n\t\ttheme,\n\t\tvalidate: [required]\n\t}\n});\n\nconst validate = (values) => {\n\tconst { password, password_repeat } = values;\n\tconst errors = {};\n\n\tif (password && password_repeat && password !== password_repeat) {\n\t\terrors.password_repeat = STRINGS.VALIDATIONS.PASSWORDS_DONT_MATCH;\n\t}\n\n\treturn errors;\n};\n\nconst Form = (props) => (\n\t<AuthForm {...props} buttonLabel={STRINGS.SIGNUP_TEXT} />\n);\n\nexport default reduxForm({\n\tform: FORM_NAME,\n\tvalidate\n})(Form);\n"]},"metadata":{},"sourceType":"module"}