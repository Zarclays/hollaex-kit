{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/UserSecurity/ApiKeyForm.js\";\nimport React from 'react';\nimport STRINGS from '../../config/localizedStrings';\nimport { getErrorLocalized } from '../../utils/errors';\nimport renderFields from '../../components/Form/factoryFields';\nimport { tokenKeyValidation } from '../../components/Form/validations';\nimport { reduxForm } from 'redux-form';\nimport { TYPE_GENERATE } from './ApiKeyModal';\nexport var FORM_NAME = 'ApiKeyForm';\nexport var generateFormValues = function generateFormValues(type) {\n  if (type === TYPE_GENERATE) {\n    return {\n      name: {\n        type: 'text',\n        validate: [tokenKeyValidation],\n        label: STRINGS.DEVELOPERS_TOKENS_POPUP.FORM_NAME_LABEL,\n        placeholder: STRINGS.DEVELOPERS_TOKENS_POPUP.FORM_LABLE_PLACEHOLDER,\n        fullWidth: true,\n        maxLength: 64\n      }\n    };\n  } else {\n    return {};\n  }\n};\n\nvar BasicTokenForm = function BasicTokenForm(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      error = _ref.error,\n      formFields = _ref.formFields;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, renderFields(formFields), error && React.createElement(\"div\", {\n    className: \"warning_text error_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, getErrorLocalized(error)));\n};\n\nexport var TokenForm = reduxForm({\n  form: FORM_NAME\n})(BasicTokenForm);","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/UserSecurity/ApiKeyForm.js"],"names":["React","STRINGS","getErrorLocalized","renderFields","tokenKeyValidation","reduxForm","TYPE_GENERATE","FORM_NAME","generateFormValues","type","name","validate","label","DEVELOPERS_TOKENS_POPUP","FORM_NAME_LABEL","placeholder","FORM_LABLE_PLACEHOLDER","fullWidth","maxLength","BasicTokenForm","handleSubmit","error","formFields","TokenForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAO,IAAMC,SAAS,GAAG,YAAlB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AAC3C,MAAIA,IAAI,KAAKH,aAAb,EAA4B;AAC3B,WAAO;AACNI,MAAAA,IAAI,EAAE;AACLD,QAAAA,IAAI,EAAE,MADD;AAELE,QAAAA,QAAQ,EAAE,CAACP,kBAAD,CAFL;AAGLQ,QAAAA,KAAK,EAAEX,OAAO,CAACY,uBAAR,CAAgCC,eAHlC;AAILC,QAAAA,WAAW,EAAEd,OAAO,CAACY,uBAAR,CAAgCG,sBAJxC;AAKLC,QAAAA,SAAS,EAAE,IALN;AAMLC,QAAAA,SAAS,EAAE;AANN;AADA,KAAP;AAUA,GAXD,MAWO;AACN,WAAO,EAAP;AACA;AACD,CAfM;;AAiBP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,YAAH,QAAGA,YAAH;AAAA,MAAiBC,KAAjB,QAAiBA,KAAjB;AAAA,MAAwBC,UAAxB,QAAwBA,UAAxB;AAAA,SACtB;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEjB,YAAY,CAACmB,UAAD,CADd,EAEED,KAAK,IACL;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CnB,iBAAiB,CAACmB,KAAD,CAA3D,CAHF,CADsB;AAAA,CAAvB;;AASA,OAAO,IAAME,SAAS,GAAGlB,SAAS,CAAC;AAClCmB,EAAAA,IAAI,EAAEjB;AAD4B,CAAD,CAAT,CAEtBY,cAFsB,CAAlB","sourcesContent":["import React from 'react';\nimport STRINGS from '../../config/localizedStrings';\nimport { getErrorLocalized } from '../../utils/errors';\nimport renderFields from '../../components/Form/factoryFields';\nimport { tokenKeyValidation } from '../../components/Form/validations';\nimport { reduxForm } from 'redux-form';\n\nimport { TYPE_GENERATE } from './ApiKeyModal';\nexport const FORM_NAME = 'ApiKeyForm';\n\nexport const generateFormValues = (type) => {\n\tif (type === TYPE_GENERATE) {\n\t\treturn {\n\t\t\tname: {\n\t\t\t\ttype: 'text',\n\t\t\t\tvalidate: [tokenKeyValidation],\n\t\t\t\tlabel: STRINGS.DEVELOPERS_TOKENS_POPUP.FORM_NAME_LABEL,\n\t\t\t\tplaceholder: STRINGS.DEVELOPERS_TOKENS_POPUP.FORM_LABLE_PLACEHOLDER,\n\t\t\t\tfullWidth: true,\n\t\t\t\tmaxLength: 64\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {};\n\t}\n};\n\nconst BasicTokenForm = ({ handleSubmit, error, formFields }) => (\n\t<form onSubmit={handleSubmit}>\n\t\t{renderFields(formFields)}\n\t\t{error && (\n\t\t\t<div className=\"warning_text error_text\">{getErrorLocalized(error)}</div>\n\t\t)}\n\t</form>\n);\n\nexport const TokenForm = reduxForm({\n\tform: FORM_NAME\n})(BasicTokenForm);\n"]},"metadata":{},"sourceType":"module"}