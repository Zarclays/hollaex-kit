{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/containers/Admin/UploadIds/index.js\";\nimport React, { Component } from 'react';\nimport { SubmissionError } from 'redux-form';\nimport { uploadFiles } from './actions';\nimport { message as AntdMessage } from 'antd';\nimport { AdminHocForm } from '../../../components'; // import { isSupport } from '../../../utils';\n\nvar UploadForm = AdminHocForm('UPLOAD_FORM');\nvar FORM_FIELDS = {\n  front: {\n    type: 'file',\n    label: 'Front',\n    validate: []\n  },\n  back: {\n    type: 'file',\n    label: 'Back',\n    validate: []\n  },\n  proof_of_residency: {\n    type: 'file',\n    label: 'Proof of Residence',\n    validate: []\n  },\n  type: {\n    type: 'select',\n    label: 'Type',\n    options: [{\n      label: 'National Id',\n      value: 'id'\n    }, {\n      label: 'Passport',\n      value: 'passport'\n    }]\n  },\n  number: {\n    type: 'text',\n    label: 'Document number',\n    validate: []\n  }\n};\n\nvar UploadIds =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadIds, _Component);\n\n  function UploadIds() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UploadIds);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UploadIds)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (refreshData) {\n      return function (values) {\n        return uploadFiles(_this.props.user_id, values).then(function (_ref) {\n          var success = _ref.success,\n              _ref$data = _ref.data,\n              data = _ref$data.data,\n              user = _ref$data.user;\n          refreshData(data, 'files');\n          refreshData(user);\n          AntdMessage.success('Files upload successfully', 5);\n        }).catch(function (err) {\n          var message = err.data.message || err.message;\n          AntdMessage.error(message, 5);\n          throw new SubmissionError({\n            _error: message\n          });\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadIds, [{\n    key: \"render\",\n    value: function render() {\n      var refreshData = this.props.refreshData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(UploadForm, {\n        fields: FORM_FIELDS,\n        onSubmit: this.onSubmit(refreshData),\n        buttonText: \"Upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UploadIds;\n}(Component);\n\nexport default UploadIds;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/UploadIds/index.js"],"names":["React","Component","SubmissionError","uploadFiles","message","AntdMessage","AdminHocForm","UploadForm","FORM_FIELDS","front","type","label","validate","back","proof_of_residency","options","value","number","UploadIds","onSubmit","refreshData","values","props","user_id","then","success","data","user","catch","err","error","_error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,MAAvC;AAEA,SAASC,YAAT,QAA6B,qBAA7B,C,CAEA;;AAEA,IAAMC,UAAU,GAAGD,YAAY,CAAC,aAAD,CAA/B;AAEA,IAAME,WAAW,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACNC,IAAAA,IAAI,EAAE,MADA;AAENC,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,QAAQ,EAAE;AAHJ,GADY;AAMnBC,EAAAA,IAAI,EAAE;AACLH,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,QAAQ,EAAE;AAHL,GANa;AAWnBE,EAAAA,kBAAkB,EAAE;AACnBJ,IAAAA,IAAI,EAAE,MADa;AAEnBC,IAAAA,KAAK,EAAE,oBAFY;AAGnBC,IAAAA,QAAQ,EAAE;AAHS,GAXD;AAgBnBF,EAAAA,IAAI,EAAE;AACLA,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLI,IAAAA,OAAO,EAAE,CACR;AAAEJ,MAAAA,KAAK,EAAE,aAAT;AAAwBK,MAAAA,KAAK,EAAE;AAA/B,KADQ,EAER;AAAEL,MAAAA,KAAK,EAAE,UAAT;AAAqBK,MAAAA,KAAK,EAAE;AAA5B,KAFQ;AAHJ,GAhBa;AAwBnBC,EAAAA,MAAM,EAAE;AACPP,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,KAAK,EAAE,iBAFA;AAGPC,IAAAA,QAAQ,EAAE;AAHH;AAxBW,CAApB;;IA+BMM,S;;;;;;;;;;;;;;;;;;UACLC,Q,GAAW,UAACC,WAAD;AAAA,aAAiB,UAACC,MAAD,EAAY;AACvC,eAAOlB,WAAW,CAAC,MAAKmB,KAAL,CAAWC,OAAZ,EAAqBF,MAArB,CAAX,CACLG,IADK,CACA,gBAAuC;AAAA,cAApCC,OAAoC,QAApCA,OAAoC;AAAA,+BAA3BC,IAA2B;AAAA,cAAnBA,IAAmB,aAAnBA,IAAmB;AAAA,cAAbC,IAAa,aAAbA,IAAa;AAC5CP,UAAAA,WAAW,CAACM,IAAD,EAAO,OAAP,CAAX;AACAN,UAAAA,WAAW,CAACO,IAAD,CAAX;AACAtB,UAAAA,WAAW,CAACoB,OAAZ,CAAoB,2BAApB,EAAiD,CAAjD;AACA,SALK,EAMLG,KANK,CAMC,UAACC,GAAD,EAAS;AACf,cAAMzB,OAAO,GAAGyB,GAAG,CAACH,IAAJ,CAAStB,OAAT,IAAoByB,GAAG,CAACzB,OAAxC;AACAC,UAAAA,WAAW,CAACyB,KAAZ,CAAkB1B,OAAlB,EAA2B,CAA3B;AACA,gBAAM,IAAIF,eAAJ,CAAoB;AAAE6B,YAAAA,MAAM,EAAE3B;AAAV,WAApB,CAAN;AACA,SAVK,CAAP;AAWA,OAZU;AAAA,K;;;;;;;6BAcF;AAAA,UACAgB,WADA,GACgB,KAAKE,KADrB,CACAF,WADA;AAER,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,UAAD;AACC,QAAA,MAAM,EAAEZ,WADT;AAEC,QAAA,QAAQ,EAAE,KAAKW,QAAL,CAAcC,WAAd,CAFX;AAGC,QAAA,UAAU,EAAC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AASA;;;;EA1BsBnB,S;;AA4BxB,eAAeiB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { SubmissionError } from 'redux-form';\nimport { uploadFiles } from './actions';\nimport { message as AntdMessage } from 'antd';\n\nimport { AdminHocForm } from '../../../components';\n\n// import { isSupport } from '../../../utils';\n\nconst UploadForm = AdminHocForm('UPLOAD_FORM');\n\nconst FORM_FIELDS = {\n\tfront: {\n\t\ttype: 'file',\n\t\tlabel: 'Front',\n\t\tvalidate: []\n\t},\n\tback: {\n\t\ttype: 'file',\n\t\tlabel: 'Back',\n\t\tvalidate: []\n\t},\n\tproof_of_residency: {\n\t\ttype: 'file',\n\t\tlabel: 'Proof of Residence',\n\t\tvalidate: []\n\t},\n\ttype: {\n\t\ttype: 'select',\n\t\tlabel: 'Type',\n\t\toptions: [\n\t\t\t{ label: 'National Id', value: 'id' },\n\t\t\t{ label: 'Passport', value: 'passport' }\n\t\t]\n\t},\n\tnumber: {\n\t\ttype: 'text',\n\t\tlabel: 'Document number',\n\t\tvalidate: []\n\t}\n};\n\nclass UploadIds extends Component {\n\tonSubmit = (refreshData) => (values) => {\n\t\treturn uploadFiles(this.props.user_id, values)\n\t\t\t.then(({ success, data: { data, user } }) => {\n\t\t\t\trefreshData(data, 'files');\n\t\t\t\trefreshData(user);\n\t\t\t\tAntdMessage.success('Files upload successfully', 5);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconst message = err.data.message || err.message;\n\t\t\t\tAntdMessage.error(message, 5);\n\t\t\t\tthrow new SubmissionError({ _error: message });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { refreshData } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<UploadForm\n\t\t\t\t\tfields={FORM_FIELDS}\n\t\t\t\t\tonSubmit={this.onSubmit(refreshData)}\n\t\t\t\t\tbuttonText=\"Upload\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default UploadIds;\n"]},"metadata":{},"sourceType":"module"}