{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport querystring from 'query-string';\nimport { requestAuthenticated } from '../../../utils';\n\nvar handleError = function handleError(err) {\n  return err.data;\n};\n\nexport var requestTrades = function requestTrades(id) {\n  var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n  var query = querystring.stringify({\n    user_id: id,\n    page: page,\n    limit: limit\n  });\n  return requestAuthenticated(\"/admin/trades?\".concat(query)).catch(handleError).then(function (data) {\n    return _objectSpread({}, data, {\n      page: page,\n      isRemaining: data.count > page * limit\n    });\n  });\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/containers/Admin/TradeHistory/actions.js"],"names":["querystring","requestAuthenticated","handleError","err","data","requestTrades","id","page","limit","query","stringify","user_id","catch","then","isRemaining","count"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,oBAAT,QAAqC,gBAArC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,SAASA,GAAG,CAACC,IAAb;AAAA,CAApB;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAA8B;AAAA,MAAzBC,IAAyB,uEAAlB,CAAkB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC1D,MAAMC,KAAK,GAAGT,WAAW,CAACU,SAAZ,CAAsB;AACnCC,IAAAA,OAAO,EAAEL,EAD0B;AAEnCC,IAAAA,IAAI,EAAJA,IAFmC;AAGnCC,IAAAA,KAAK,EAALA;AAHmC,GAAtB,CAAd;AAKA,SAAOP,oBAAoB,yBAAkBQ,KAAlB,EAApB,CACLG,KADK,CACCV,WADD,EAELW,IAFK,CAEA,UAACT,IAAD,EAAU;AACf,6BACIA,IADJ;AAECG,MAAAA,IAAI,EAAJA,IAFD;AAGCO,MAAAA,WAAW,EAAEV,IAAI,CAACW,KAAL,GAAaR,IAAI,GAAGC;AAHlC;AAKA,GARK,CAAP;AASA,CAfM","sourcesContent":["import querystring from 'query-string';\nimport { requestAuthenticated } from '../../../utils';\n\nconst handleError = (err) => err.data;\n\nexport const requestTrades = (id, page = 0, limit = 50) => {\n\tconst query = querystring.stringify({\n\t\tuser_id: id,\n\t\tpage,\n\t\tlimit\n\t});\n\treturn requestAuthenticated(`/admin/trades?${query}`)\n\t\t.catch(handleError)\n\t\t.then((data) => {\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tpage,\n\t\t\t\tisRemaining: data.count > page * limit\n\t\t\t};\n\t\t});\n}\n"]},"metadata":{},"sourceType":"module"}