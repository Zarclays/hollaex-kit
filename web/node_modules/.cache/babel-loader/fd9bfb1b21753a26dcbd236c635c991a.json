{"ast":null,"code":"import _classCallCheck from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/user/Documents/projects/hollaex/src/components/Dialog/MobileDialog.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\nimport { isLoggedIn } from '../../utils/token';\nimport { MobileBarBack } from '../';\nimport { getClasesForLanguage, getLanguage } from '../../utils/string';\nimport { getThemeClass } from '../../utils/theme';\nimport { ICONS } from '../../config/constants';\nimport ReactSVG from 'react-svg';\n\nvar CompressedContent = function CompressedContent(_ref) {\n  var children = _ref.children,\n      onClose = _ref.onClose;\n  return React.createElement(\"div\", {\n    className: \"dialog-compressed-wrapper d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialog-compressed-content f-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, children), React.createElement(\"div\", {\n    className: \"dialog-compressed-close f-0 d-flex justify-content-center align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"close-dialog pointer\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ReactSVG, {\n    path: ICONS.CANCEL_CROSS_ACTIVE,\n    wrapperClassName: \"bar-icon-back\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))));\n};\n\nvar RegularContent = function RegularContent(_ref2) {\n  var showBar = _ref2.showBar,\n      onBackClick = _ref2.onBackClick,\n      children = _ref2.children;\n  return React.createElement(\"div\", {\n    className: \"dialog-regular-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, showBar && React.createElement(MobileBarBack, {\n    onBackClick: onBackClick,\n    wrapperClassName: \"dialog-svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"dialog-mobile-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, children));\n};\n\nvar Dialog =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Dialog, _PureComponent);\n\n  function Dialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onRequestClose = function (e) {\n      if (_this.props.onCloseDialog) {\n        _this.props.onCloseDialog(e);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Dialog, [{\n    key: \"render\",\n    value: function render() {\n      var languageClasses = getClasesForLanguage(getLanguage());\n      var _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          children = _this$props.children,\n          label = _this$props.label,\n          dialogId = _this$props.dialogId,\n          theme = _this$props.theme,\n          className = _this$props.className,\n          _this$props$useFullSc = _this$props.useFullScreen,\n          useFullScreen = _this$props$useFullSc === void 0 ? false : _this$props$useFullSc,\n          _this$props$compresse = _this$props.compressed,\n          compressed = _this$props$compresse === void 0 ? false : _this$props$compresse,\n          _this$props$showBar = _this$props.showBar,\n          showBar = _this$props$showBar === void 0 ? true : _this$props$showBar;\n      return React.createElement(Modal, {\n        id: dialogId,\n        isOpen: isOpen,\n        contentLabel: label,\n        onRequestClose: this.onRequestClose,\n        shouldCloseOnOverlayClick: false,\n        portalClassName: classnames(className, languageClasses, getThemeClass(theme), 'layout-mobile', {\n          compressed: compressed,\n          'dialog_full-screen': useFullScreen,\n          'LogoutModal': !isLoggedIn()\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, compressed ? React.createElement(CompressedContent, {\n        onClose: this.onRequestClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, children) : React.createElement(RegularContent, {\n        showBar: showBar,\n        onBackClick: this.onRequestClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, children));\n    }\n  }]);\n\n  return Dialog;\n}(PureComponent);\n\nDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  closeButton: PropTypes.func,\n  onCloseDialog: PropTypes.func,\n  children: PropTypes.node.isRequired\n};\nModal.setAppElement('#root');\nDialog.defaultProps = {\n  shouldCloseOnOverlayClick: true,\n  showCloseText: true,\n  theme: '',\n  className: ''\n};\nexport default Dialog;","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/components/Dialog/MobileDialog.js"],"names":["React","PureComponent","PropTypes","classnames","Modal","isLoggedIn","MobileBarBack","getClasesForLanguage","getLanguage","getThemeClass","ICONS","ReactSVG","CompressedContent","children","onClose","CANCEL_CROSS_ACTIVE","RegularContent","showBar","onBackClick","Dialog","onRequestClose","e","props","onCloseDialog","languageClasses","isOpen","label","dialogId","theme","className","useFullScreen","compressed","propTypes","bool","isRequired","string","closeButton","func","node","setAppElement","defaultProps","shouldCloseOnOverlayClick","showCloseText"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\nimport { isLoggedIn } from '../../utils/token';\nimport { MobileBarBack } from '../';\nimport { getClasesForLanguage, getLanguage } from '../../utils/string';\nimport { getThemeClass } from '../../utils/theme';\nimport { ICONS } from '../../config/constants';\nimport ReactSVG from 'react-svg';\n\nconst CompressedContent = ({ children, onClose }) => {\n\treturn (\n\t\t<div className=\"dialog-compressed-wrapper d-flex\">\n\t\t\t<div className=\"dialog-compressed-content f-1\">{children}</div>\n\t\t\t<div className=\"dialog-compressed-close f-0 d-flex justify-content-center align-items-center\">\n\t\t\t\t<div className=\"close-dialog pointer\" onClick={onClose}>\n\t\t\t\t\t<ReactSVG\n\t\t\t\t\t\tpath={ICONS.CANCEL_CROSS_ACTIVE}\n\t\t\t\t\t\twrapperClassName=\"bar-icon-back\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst RegularContent = ({ showBar, onBackClick, children }) => {\n\treturn (\n\t\t<div className=\"dialog-regular-content\">\n\t\t\t{showBar && (\n\t\t\t\t<MobileBarBack\n\t\t\t\t\tonBackClick={onBackClick}\n\t\t\t\t\twrapperClassName=\"dialog-svg\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<div className=\"dialog-mobile-content\">{children}</div>\n\t\t</div>\n\t);\n};\n\nclass Dialog extends PureComponent {\n\tstatic propTypes = {\n\t\tisOpen: PropTypes.bool.isRequired,\n\t\tlabel: PropTypes.string.isRequired,\n\t\tcloseButton: PropTypes.func,\n\t\tonCloseDialog: PropTypes.func,\n\t\tchildren: PropTypes.node.isRequired\n\t};\n\n\tonRequestClose = (e) => {\n\t\tif (this.props.onCloseDialog) {\n\t\t\tthis.props.onCloseDialog(e);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst languageClasses = getClasesForLanguage(getLanguage());\n\t\tconst {\n\t\t\tisOpen,\n\t\t\tchildren,\n\t\t\tlabel,\n\t\t\tdialogId,\n\t\t\ttheme,\n\t\t\tclassName,\n\t\t\tuseFullScreen = false,\n\t\t\tcompressed = false,\n\t\t\tshowBar = true\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tid={dialogId}\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tcontentLabel={label}\n\t\t\t\tonRequestClose={this.onRequestClose}\n\t\t\t\tshouldCloseOnOverlayClick={false}\n\t\t\t\tportalClassName={classnames(\n\t\t\t\t\tclassName,\n\t\t\t\t\tlanguageClasses,\n\t\t\t\t\tgetThemeClass(theme),\n\t\t\t\t\t'layout-mobile',\n\t\t\t\t\t{\n\t\t\t\t\t\tcompressed,\n\t\t\t\t\t\t'dialog_full-screen': useFullScreen,\n\t\t\t\t\t\t'LogoutModal': !isLoggedIn()\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{compressed ? (\n\t\t\t\t\t<CompressedContent onClose={this.onRequestClose}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</CompressedContent>\n\t\t\t\t) : (\n\t\t\t\t\t<RegularContent showBar={showBar} onBackClick={this.onRequestClose}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</RegularContent>\n\t\t\t\t)}\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nModal.setAppElement('#root');\n\nDialog.defaultProps = {\n\tshouldCloseOnOverlayClick: true,\n\tshowCloseText: true,\n\ttheme: '',\n\tclassName: ''\n};\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}