{"ast":null,"code":"import _objectSpread from \"/home/user/Documents/projects/hollaex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport moment from 'moment';\nimport { TOKEN_TIME, TIMESTAMP_FORMAT, AUDIOS } from '../config/constants';\nvar bitcoin = {\n  COIN: 100000000,\n  PRECISION: 8,\n  DUST: 2730,\n  BASE_FEE: 10000\n};\n/**\n * convert a BTC value to Satoshi\n *\n * @param btc   float       BTC value\n * @returns int             Satoshi value (int)\n */\n\nbitcoin.toSatoshi = function (btc) {\n  return parseInt((btc * bitcoin.COIN).toFixed(0), 10);\n};\n/**\n * convert a Satoshi value to BTC\n *\n * @param satoshi   int     Satoshi value\n * @returns {string}        BTC value (float)\n */\n\n\nbitcoin.toBTC = function (satoshi) {\n  return (satoshi / bitcoin.COIN).toFixed(bitcoin.PRECISION);\n};\n\nexport default bitcoin;\nexport var checkUserSessionExpired = function checkUserSessionExpired(loginTime) {\n  var currentTime = Date.now();\n  return currentTime - loginTime > TOKEN_TIME;\n};\nexport var formatTimestamp = function formatTimestamp(date, format) {\n  return formatTimestampGregorian(date, format);\n};\nexport var formatTimestampGregorian = function formatTimestampGregorian(date) {\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TIMESTAMP_FORMAT;\n  return moment(date).format(format);\n};\nexport var getDecimals = function getDecimals() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return value % 1 ? value.toString().split('.')[1].length : 0;\n};\nexport var isBlockchainTx = function isBlockchainTx(transactionId) {\n  return transactionId.indexOf('-') === -1 ? true : false;\n};\nexport var constructSettings = function constructSettings() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var settings = arguments.length > 1 ? arguments[1] : undefined;\n\n  var settingsData = _objectSpread({}, state);\n\n  if (settings.notification) {\n    settingsData.notification = _objectSpread({}, settingsData.notification, settings.notification);\n  }\n\n  if (settings.interface) {\n    settingsData.interface = _objectSpread({}, settingsData.interface, settings.interface);\n  }\n\n  if (settings.audio) {\n    settingsData.audio = _objectSpread({}, settingsData.settingsData, settings.audio);\n  }\n\n  if (settings.risk) {\n    settingsData.risk = _objectSpread({}, settingsData.risk, settings.risk);\n  }\n\n  if (settings.chat) {\n    settingsData.chat = _objectSpread({}, settingsData.chat, settings.chat);\n  }\n\n  if (settings.language) {\n    settingsData.language = settings.language;\n  } // ToDo: need to these code after end point update.\n\n\n  if (settings.popup_order_confirmation || settings.popup_order_confirmation === false) {\n    settingsData.notification.popup_order_confirmation = settings.popup_order_confirmation;\n  }\n\n  if (settings.popup_order_completed || settings.popup_order_completed === false) {\n    settingsData.notification.popup_order_completed = settings.popup_order_completed;\n  }\n\n  if (settings.popup_order_partially_filled || settings.popup_order_partially_filled === false) {\n    settingsData.notification.popup_order_partially_filled = settings.popup_order_partially_filled;\n  }\n\n  if (settings.theme) {\n    settingsData.interface.theme = settings.theme;\n  }\n\n  if (settings.order_book_levels) {\n    settingsData.interface.order_book_levels = settings.order_book_levels;\n  }\n\n  if (settings.order_completed || settings.order_completed === false) {\n    settingsData.audio.order_completed = settings.order_completed;\n  }\n\n  if (settings.order_partially_completed || settings.order_partially_completed === false) {\n    settingsData.audio.order_partially_completed = settings.order_partially_completed;\n  }\n\n  if (settings.public_trade || settings.public_trade === false) {\n    settingsData.audio.public_trade = settings.public_trade;\n  }\n\n  if (settings.order_portfolio_percentage) {\n    settingsData.risk.order_portfolio_percentage = settings.order_portfolio_percentage;\n  }\n\n  if (settings.popup_warning || settings.popup_warning === false) {\n    settingsData.risk.popup_warning = settings.popup_warning;\n  }\n\n  if (settings.set_username) {\n    settingsData.chat.set_username = settings.set_username;\n  }\n\n  if (settings.theme) {\n    settingsData.theme = settings.theme;\n  }\n\n  return settingsData;\n};\nexport var playBackgroundAudioNotification = function playBackgroundAudioNotification() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var audioFile = '';\n\n  switch (type) {\n    case 'orderbook_market_order':\n    case 'order_filled':\n      audioFile = AUDIOS.ORDER_COMPLETED;\n      break;\n\n    case 'order_partialy_filled':\n      audioFile = AUDIOS.ORDER_PARTIALLY_COMPLETED;\n      break;\n\n    case 'orderbook_field_update':\n      audioFile = AUDIOS.ORDERBOOK_FIELD_UPDATE;\n      break;\n\n    case 'orderbook_limit_order':\n      audioFile = AUDIOS.ORDERBOOK_LIMIT_ORDER;\n      break;\n\n    case 'public_trade':\n      audioFile = AUDIOS.PUBLIC_TRADE_NOTIFICATION;\n      break;\n\n    case 'cancel_order':\n      audioFile = AUDIOS.CANCEL_ORDER;\n      break;\n\n    case 'quick_trade_complete':\n      audioFile = AUDIOS.QUICK_TRADE_COMPLETE;\n      break;\n\n    case 'review_quick_trade_order':\n      audioFile = AUDIOS.REVIEW_QUICK_TRADE_ORDER;\n      break;\n\n    case 'time_out_quick_trade':\n      audioFile = AUDIOS.TIME_OUT_QUICK_TRADE;\n      break;\n\n    default:\n  }\n\n  var audio = new Audio(audioFile);\n  if (audioFile) audio.play();\n};","map":{"version":3,"sources":["/home/user/Documents/projects/hollaex/src/utils/utils.js"],"names":["moment","TOKEN_TIME","TIMESTAMP_FORMAT","AUDIOS","bitcoin","COIN","PRECISION","DUST","BASE_FEE","toSatoshi","btc","parseInt","toFixed","toBTC","satoshi","checkUserSessionExpired","loginTime","currentTime","Date","now","formatTimestamp","date","format","formatTimestampGregorian","getDecimals","value","toString","split","length","isBlockchainTx","transactionId","indexOf","constructSettings","state","settings","settingsData","notification","interface","audio","risk","chat","language","popup_order_confirmation","popup_order_completed","popup_order_partially_filled","theme","order_book_levels","order_completed","order_partially_completed","public_trade","order_portfolio_percentage","popup_warning","set_username","playBackgroundAudioNotification","type","audioFile","ORDER_COMPLETED","ORDER_PARTIALLY_COMPLETED","ORDERBOOK_FIELD_UPDATE","ORDERBOOK_LIMIT_ORDER","PUBLIC_TRADE_NOTIFICATION","CANCEL_ORDER","QUICK_TRADE_COMPLETE","REVIEW_QUICK_TRADE_ORDER","TIME_OUT_QUICK_TRADE","Audio","play"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nimport { TOKEN_TIME, TIMESTAMP_FORMAT, AUDIOS } from '../config/constants';\n\nconst bitcoin = {\n\tCOIN: 100000000,\n\tPRECISION: 8,\n\tDUST: 2730,\n\tBASE_FEE: 10000\n};\n\n/**\n * convert a BTC value to Satoshi\n *\n * @param btc   float       BTC value\n * @returns int             Satoshi value (int)\n */\nbitcoin.toSatoshi = (btc) => {\n\treturn parseInt((btc * bitcoin.COIN).toFixed(0), 10);\n};\n\n/**\n * convert a Satoshi value to BTC\n *\n * @param satoshi   int     Satoshi value\n * @returns {string}        BTC value (float)\n */\nbitcoin.toBTC = (satoshi) => {\n\treturn (satoshi / bitcoin.COIN).toFixed(bitcoin.PRECISION);\n};\n\nexport default bitcoin;\n\nexport const checkUserSessionExpired = (loginTime) => {\n\tconst currentTime = Date.now();\n\n\treturn currentTime - loginTime > TOKEN_TIME;\n};\n\nexport const formatTimestamp = (date, format) => {\n\treturn formatTimestampGregorian(date, format);\n};\n\nexport const formatTimestampGregorian = (date, format = TIMESTAMP_FORMAT) =>\n\tmoment(date).format(format);\n\nexport const getDecimals = (value = 0) =>\n\tvalue % 1 ? value.toString().split('.')[1].length : 0;\n\nexport const isBlockchainTx = (transactionId) => {\n\treturn (transactionId.indexOf('-') === -1) ? true : false\n}\n\nexport const constructSettings = (state = {}, settings) => {\n\tlet settingsData = { ...state };\n\tif (settings.notification) {\n\t\tsettingsData.notification = { ...settingsData.notification, ...settings.notification };\n\t}\n\tif (settings.interface) {\n\t\tsettingsData.interface = { ...settingsData.interface, ...settings.interface };\n\t}\n\tif (settings.audio) {\n\t\tsettingsData.audio = { ...settingsData.settingsData, ...settings.audio };\n\t}\n\tif (settings.risk) {\n\t\tsettingsData.risk = { ...settingsData.risk, ...settings.risk };\n\t}\n\tif (settings.chat) {\n\t\tsettingsData.chat = { ...settingsData.chat, ...settings.chat }\n\t}\n\tif (settings.language) {\n\t\tsettingsData.language = settings.language\n\t}\n\n\t// ToDo: need to these code after end point update.\n\tif (settings.popup_order_confirmation || settings.popup_order_confirmation === false) {\n\t\tsettingsData.notification.popup_order_confirmation = settings.popup_order_confirmation;\n\t}\n\tif (settings.popup_order_completed || settings.popup_order_completed === false) {\n\t\tsettingsData.notification.popup_order_completed = settings.popup_order_completed;\n\t}\n\tif (settings.popup_order_partially_filled || settings.popup_order_partially_filled === false) {\n\t\tsettingsData.notification.popup_order_partially_filled = settings.popup_order_partially_filled;\n\t}\n\n\tif (settings.theme) {\n\t\tsettingsData.interface.theme = settings.theme;\n\t}\n\tif (settings.order_book_levels) {\n\t\tsettingsData.interface.order_book_levels = settings.order_book_levels;\n\t}\n\n\tif (settings.order_completed || settings.order_completed === false) {\n\t\tsettingsData.audio.order_completed = settings.order_completed;\n\t}\n\tif (settings.order_partially_completed || settings.order_partially_completed === false) {\n\t\tsettingsData.audio.order_partially_completed = settings.order_partially_completed;\n\t}\n\tif (settings.public_trade || settings.public_trade === false) {\n\t\tsettingsData.audio.public_trade = settings.public_trade;\n\t}\n\n\tif (settings.order_portfolio_percentage) {\n\t\tsettingsData.risk.order_portfolio_percentage = settings.order_portfolio_percentage;\n\t}\n\tif (settings.popup_warning || settings.popup_warning === false) {\n\t\tsettingsData.risk.popup_warning = settings.popup_warning;\n\t}\n\n\tif (settings.set_username) {\n\t\tsettingsData.chat.set_username = settings.set_username\n\t}\n\tif (settings.theme) {\n\t\tsettingsData.theme = settings.theme\n\t}\n\n\treturn settingsData;\n};\n\nexport const playBackgroundAudioNotification = (type = '') => {\n\tlet audioFile = '';\n\tswitch (type) {\n\t\tcase 'orderbook_market_order':\n\t\tcase 'order_filled':\n\t\t\taudioFile = AUDIOS.ORDER_COMPLETED;\n\t\t\tbreak;\n\t\tcase 'order_partialy_filled':\n\t\t\taudioFile = AUDIOS.ORDER_PARTIALLY_COMPLETED;\n\t\t\tbreak;\n\t\tcase 'orderbook_field_update':\n\t\t\taudioFile = AUDIOS.ORDERBOOK_FIELD_UPDATE;\n\t\t\tbreak;\n\t\tcase 'orderbook_limit_order':\n\t\t\taudioFile = AUDIOS.ORDERBOOK_LIMIT_ORDER;\n\t\t\tbreak;\n\t\tcase 'public_trade':\n\t\t\taudioFile = AUDIOS.PUBLIC_TRADE_NOTIFICATION;\n\t\t\tbreak;\n\t\tcase 'cancel_order':\n\t\t\taudioFile = AUDIOS.CANCEL_ORDER;\n\t\t\tbreak;\n\t\tcase 'quick_trade_complete':\n\t\t\taudioFile= AUDIOS.QUICK_TRADE_COMPLETE;\n\t\t\tbreak;\n\t\tcase 'review_quick_trade_order':\n\t\t\taudioFile=AUDIOS.REVIEW_QUICK_TRADE_ORDER;\n\t\t\tbreak;\n\t\tcase 'time_out_quick_trade':\n\t\t\taudioFile=AUDIOS.TIME_OUT_QUICK_TRADE;\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\tconst audio = new Audio(audioFile);\n\tif (audioFile) audio.play();\n};\n"]},"metadata":{},"sourceType":"module"}