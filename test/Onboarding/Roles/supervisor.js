// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');
const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, './../../.env') });
let supervisor = process.env.SUPERVISOR;
let password = process.env.PASSWORD;
let logInPage = process.env.LOGIN_PAGE;

describe('Supervisor', function() {
	this.timeout(3000000);
	let driver;
	let vars;
	function sleep(ms) {
		return new Promise((resolve) => {
			setTimeout(resolve, ms);
		});
	}
	beforeEach(async function() {
		driver = await new Builder().forBrowser('chrome').build();
		driver.manage().window().maximize();
		vars = {};
	});
	afterEach(async function() {
		await driver.quit();
	});
	it('Supervisor', async function() {
		console.log('Supervisor can access all deposit, withdrawals and approval settings');
		console.log(' Test name: Supervisor');
		console.log(' Step # | name | target | value');
		console.log(' 1 | open | /login | ');
		await driver.get(logInPage);
		await sleep(5000);
		console.log(' 2 | echo | \'Supervisor can access all deposit, withdrawals and approval settings\' |'); 
		console.log('\'Supervisor can access all deposit, withdrawals and approval settings\'');
		console.log(' 3 | type | name=email |'+supervisor);
		await driver.findElement(By.name('email')).sendKeys(supervisor);
		console.log(' 4 | type | name=password | password');
		await driver.findElement(By.name('password')).sendKeys(password);
		console.log(' 5 | click | css=.holla-button | ');
		await sleep(5000);
		await driver.findElement(By.css('.holla-button')).click();
		console.log(' 6 | click | css=a > .pl-1 | ');
		await sleep(5000);
		await driver.findElement(By.css('a > .pl-1')).click();
		console.log(' 7 | click | linkText=Users | ');
		await sleep(5000);
		await driver.findElement(By.linkText('Users')).click();
		console.log(' 8 | click | name=id | ');
		await driver.findElement(By.name('id')).click();
		console.log(' 9 | type | name=id | 1');
		await driver.findElement(By.name('id')).sendKeys('1');
		console.log(' 10 | sendKeys | name=id | ${KEY_ENTER}');
		await driver.findElement(By.name('id')).sendKeys(Key.ENTER);
		console.log(' 11 | click | css=.ant-btn | ');
		await driver.findElement(By.css('.ant-btn')).click();
		console.log(' 12 | click | id=rc-tabs-1-tab-balance | ');
		await sleep(5000);
		await driver.findElement(By.id('rc-tabs-1-tab-balance')).click();
		console.log(' 13 | click | css=.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5) | ');
		await sleep(5000);
		await driver.findElement(By.css('.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5)')).click();
		console.log(' 14 | assertElementPresent | css=.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5) |'); 
		{
			const elements = await driver.findElements(By.css('.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5)'));
			assert(elements.length);
		}
		console.log(' 15 | assertElementPresent | css=.ant-table-row:nth-child(2) > .ant-table-cell:nth-child(5) | ');
		{
			const elements = await driver.findElements(By.css('.ant-table-row:nth-child(2) > .ant-table-cell:nth-child(5)'));
			assert(elements.length);
		}
		console.log(' 16 | click | id=rc-tabs-1-tab-orders | ');
		await driver.findElement(By.id('rc-tabs-1-tab-orders')).click();
		await sleep(5000);
		console.log(' 17 | assertText | xpath=//*[@id=rc-tabs-3-panel-buy]/div/div/div/div/div/div/div/div/div/table/tbody/tr/td/div/p | No Data');
	//	assert(await driver.findElement(By.xpath('//*[@id="rc-tabs-3-panel-buy"]/div/div/div/div/div/div/div/div/div/table/tbody/tr/td/div/p')).getText() == 'No Data');
		console.log(' 18 | click | id=rc-tabs-3-tab-sell | ');
		await driver.findElement(By.id('rc-tabs-3-tab-sell')).click();
		await sleep(5000);
		console.log(' 19 | assertText | xpath=//*[@id=rc-tabs-3-panel-sell]/div/div/div/div/div/div/div/div/div/table/tbody/tr/td/div/p | No Data');
		assert(await driver.findElement(By.xpath('//*[@id="rc-tabs-3-panel-sell"]/div/div/div/div/div/div/div/div/div/table/tbody/tr/td/div/p')).getText() == 'No Data');
		console.log(' 20 | click | id=rc-tabs-1-tab-trade | ');
		await driver.findElement(By.id('rc-tabs-1-tab-trade')).click();
		console.log(' 21 | click | css=.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(6) | ');
		await sleep(5000);
	//	await driver.findElement(By.css('.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(6)')).click();
		console.log(' 22 | assertElementPresent | css=.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(6) > time | ');
		{
			const elements = await driver.findElements(By.css('.ant-table-row:nth-child(1) > .ant-table-cell:nth-child(6) > time'));
			assert(elements.length);
		}
		console.log(' 23 | click | id=rc-tabs-1-tab-deposits | ');
		await driver.findElement(By.id('rc-tabs-1-tab-deposits')).click();
		console.log(' 24 | click | css=.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5) | ');
		await sleep(5000);
		await driver.findElement(By.css('.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5)')).click();
		console.log(' 25 | assertElementPresent | css=.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5) | ');
		{
			const elements = await driver.findElements(By.css('.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5)'));
			assert(elements.length);
		}
		console.log(' 26 | click | id=rc-tabs-1-tab-withdrawals | ');
		await driver.findElement(By.id('rc-tabs-1-tab-withdrawals')).click();
		console.log(' 27 | assertElementPresent | css=.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5) | ');
		{
			const elements = await driver.findElements(By.css('.app-wrapper:nth-child(2) .ant-table-row:nth-child(1) > .ant-table-cell:nth-child(5)'));
			assert(elements.length);
		}
		console.log(' 28 | click | linkText=Financials | ');
		await driver.findElement(By.linkText('Financials')).click();
		console.log(' 31 | click | css=.app_container-content > .ant-alert | ');
		await sleep(5000);
		await driver.findElement(By.css('.app_container-content > .ant-alert')).click();
		console.log(' 32 | assertText | css=.app_container-content > .ant-alert > .ant-alert-description | Access denied: User is not authorized to access this endpoint');
		assert(await driver.findElement(By.css('.app_container-content > .ant-alert > .ant-alert-description')).getText() == 'Access denied: User is not authorized to access this endpoint');
		console.log(' 33 | click | css=.ant-card-body > .ant-alert | ');
		await driver.findElement(By.css('.ant-card-body > .ant-alert')).click();
		console.log(' 34 | assertText | css=.ant-card-body .ant-alert-description | Access denied: User is not authorized to access this endpoint');
		assert(await driver.findElement(By.css('.ant-card-body .ant-alert-description')).getText() == 'Access denied: User is not authorized to access this endpoint');
		console.log(' 35 | click | id=rc-tabs-4-tab-assets | ');
		await driver.findElement(By.id('rc-tabs-4-tab-assets')).click();
		console.log(' 36 | click | css=.content | ');
		await driver.findElement(By.css('.content')).click();
		console.log(' 37 | assertText | css=.content | To view this page you must go back to Holla Dash');
		assert(await driver.findElement(By.css('.content')).getText() == 'To view this page you must go back to Holla Dash');
		console.log(' 38 | click | id=rc-tabs-4-tab-deposits | ');
		await driver.findElement(By.id('rc-tabs-4-tab-deposits')).click();
		console.log(' 39 | click | css=.ant-table-row:nth-child(1) .d-flex | ');
		await sleep(5000);
		await driver.findElement(By.css('.ant-table-row:nth-child(1) .d-flex')).click();
		console.log(' 40 | assertText | css=.ant-table-row:nth-child(1) .d-flex | Validated');
		assert(await driver.findElement(By.css('.ant-table-row:nth-child(1) .d-flex')).getText() == 'Validated');
		console.log(' 41 | click | id=rc-tabs-4-tab-withdrawals | ');
		await driver.findElement(By.id('rc-tabs-4-tab-withdrawals')).click();
	});
});
