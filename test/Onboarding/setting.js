
// Generated by Selenium IDE
//testing the login function of Hollaex Kit
//Using Selenium webderiver and Mocha/Chai
//given, when and then
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');
const { expect } = require('chai');
const { Console } = require('console');
const path = require('path');
require('dotenv').config({ path: path.resolve(__dirname, '../.env') });
let userName = process.env.ADMIN_USER;
let passWord = process.env.ADMIN_PASS;
let logInPage = process.env.LOGIN_PAGE;
let Website = process.env.WEBSITE;
describe('Orders', function() {
	this.timeout(300000);
	let driver;
	let vars;
	function sleep(ms) {
		return new Promise((resolve) => {
			setTimeout(resolve, ms);
		});
	} 
	beforeEach(async function() {
		driver = await new Builder().forBrowser('chrome').build();
		vars = {};
		
		
	});
	afterEach(async function() {
	//	await driver.quit();
	});
	it('Untitled', async function() {
	  // Test name: Untitled
		// Step # | name | target | value
		// 1 | open | /account | 
		await driver.get(logInPage);
		await sleep(10000);
		// 2 | type | name=email | USER@bitholla.com
		// await driver.wait(until.elementLocated(await driver.findElement(By.name("email"))), 10000);
		await driver.findElement(By.name('email')).sendKeys(userName);
		// 3 | type | name=password | bitholla@bitholla.com
		//await driver.wait(until.elementLocated(await driver.findElement(By.name("password"))),5000);
		await driver.findElement(By.name('password')).sendKeys(passWord);
		// 4 | click | name=email | 
		
		await sleep(4000);
		await driver.findElement(By.name('email')).click();
		// 5 | click | css=.holla-button | 
		await driver.wait(until.elementIsEnabled(await driver.findElement(By.css('.holla-button'))), 50000);
		await driver.findElement(By.css('.holla-button')).click();
		await driver.manage().window().maximize();
		await sleep(4000);
		await driver.findElement(By.css('.d-flex:nth-child(6) > .side-bar-txt > .edit-wrapper__container')).click();
		// 3 | click | css=.tab_item:nth-child(3) > div | 
		await sleep(3000);
		await driver.findElement(By.css('.tab_item:nth-child(3) > div')).click();
		// 4 | click | id=language-en-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-en-undefined')).click();
		// 5 | click | id=language-es-1 | 
		await sleep(3000);
		await driver.findElement(By.id('language-es-1')).click();
		// 6 | click | css=.holla-button | 
    {
			const element = await driver.findElement(By.css('.holla-button'));
			await driver.executeScript('arguments[0].scrollIntoView(true);', element);
		}
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 7 | click | css=.d-flex > .field-label | 
		await sleep(3000);
		await driver.findElement(By.css('.d-flex > .field-label')).click();
		// 8 | assertText | css=.d-flex > .field-label | Preferencia de Idioma (Incluye correos electrònicos)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'Preferencia de Idioma (Incluye correos electrònicos)');
		// 9 | click | id=language-es-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-es-undefined')).click();
		// 10 | click | id=language-pt-2 | 
		await sleep(3000);
		await driver.findElement(By.id('language-pt-2')).click();
		// 11 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 12 | click | css=.settings-form | 
		await sleep(3000);
		await driver.findElement(By.css('.settings-form')).click();
		// 13 | assertText | css=.d-flex > .field-label | Preferências de idioma (inclui e-mails)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'Preferências de idioma (inclui e-mails)');
		await sleep(3000);
		// 14 | click | id=language-pt-undefined | 
		await driver.findElement(By.id('language-pt-undefined')).click();
		// 15 | click | id=language-ru-3 | 
		await sleep(3000);
		await driver.findElement(By.id('language-ru-3')).click();
		// 16 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 17 | click | css=.settings-form | 
		await sleep(3000);
		await driver.findElement(By.css('.settings-form')).click();
		// 18 | assertText | css=.d-flex > .field-label | Language preferences (Includes Emails)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'Language preferences (Includes Emails)');
		// 19 | click | id=language-ru-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-ru-undefined')).click();
		// 20 | click | id=language-ko-4 | 
		await sleep(3000);
		await driver.findElement(By.id('language-ko-4')).click();
		// 21 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		await sleep(3000);
		// 22 | click | css=.field-label-wrapper > .d-flex | 
		await driver.findElement(By.css('.field-label-wrapper > .d-flex')).click();
		await sleep(3000);
		// 23 | assertText | css=.d-flex > .field-label | 언어설정 (이메일수신포함)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == '언어설정 (이메일수신포함)');
		// 24 | click | id=language-ko-undefined | 
		await sleep(3000);

		await driver.findElement(By.id('language-ko-undefined')).click();
		await sleep(3000);
		// 25 | click | id=language-ja-5 | 
		await driver.findElement(By.id('language-ja-5')).click();
		await sleep(3000);
		// 26 | click | css=.holla-button | 
		await driver.findElement(By.css('.holla-button')).click();
		await sleep(3000);
		// 27 | click | css=.field-label-wrapper > .d-flex | 
		await driver.findElement(By.css('.field-label-wrapper > .d-flex')).click();
		await sleep(3000);
		// 28 | assertText | css=.d-flex > .field-label | 言語設定 (メールを含む)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == '言語設定 (メールを含む)');
		await sleep(3000);
		// 29 | click | css=.field-children | 
		await driver.findElement(By.css('.field-children')).click();
		// 30 | click | id=language-ja-undefined | 
		// await sleep(3000);
		// await driver.findElement(By.id('language-ja-undefined')).click();
		// // 31 | click | id=language-zh-6 | 
		await sleep(3000);
		await driver.findElement(By.id('language-zh-6')).click();
		// 32 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 33 | click | css=.field-label-wrapper:nth-child(1) | 
		await sleep(3000);
		await driver.findElement(By.css('.field-label-wrapper:nth-child(1)')).click();
		// 34 | assertText | css=.d-flex > .field-label | 语言设置（包括邮件）
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == '语言设置（包括邮件）');
		// 35 | click | id=language-zh-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-zh-undefined')).click();
		// 36 | click | id=language-vi-7 | 
		await sleep(3000);
		await driver.findElement(By.id('language-vi-7')).click();
		// 37 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 38 | click | css=.field-label-wrapper > .d-flex | 
		await sleep(3000);
		await driver.findElement(By.css('.field-label-wrapper > .d-flex')).click();
		// 39 | assertText | css=.d-flex > .field-label | Cài đặt ngôn ngữ (Bao gồm email)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'Cài đặt ngôn ngữ (Bao gồm email)');
		// 40 | click | id=language-vi-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-vi-undefined')).click();
		// 41 | click | id=language-fa-8 | 
		await sleep(3000);
		await driver.findElement(By.id('language-fa-8')).click();
		// 42 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 43 | click | css=.pr-4 | 
		await sleep(3000);
		await driver.findElement(By.css('.pr-4')).click();
		// 44 | assertText | css=.d-flex > .field-label | انتخاب زبان (این گزینه شامل ایمیل های ارسالی از طرف HollaEx نیز می شود)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'انتخاب زبان (این گزینه شامل ایمیل های ارسالی از طرف HollaEx نیز می شود)');
		// 45 | click | id=language-fa-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-fa-undefined')).click();
		// 46 | click | id=language-ar-9 | 
		await sleep(3000);
		await driver.findElement(By.id('language-ar-9')).click();
		// 47 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 48 | click | css=.pr-4 | 
		await sleep(3000);
		await driver.findElement(By.css('.pr-4')).click();
		// 49 | assertText | css=.d-flex > .field-label | تفضيلات اللغة (تشمل رسائل البريد الإلكتروني)
		assert(await driver.findElement(By.css('.d-flex > .field-label')).getText() == 'تفضيلات اللغة (تشمل رسائل البريد الإلكتروني)');
		// 50 | click | id=language-ar-undefined | 
		await sleep(3000);
		await driver.findElement(By.id('language-ar-undefined')).click();

		// 51 | click | id=language-en-0 | 
		await sleep(3000);
		await driver.findElement(By.id('language-en-0')).click();
		// 52 | click | css=.holla-button | 
		await sleep(3000);
		await driver.findElement(By.css('.holla-button')).click();
		// 53 | click | css=.settings-form | 
		await sleep(3000);
		await driver.findElement(By.css('.settings-form')).click();
		await sleep(3000);
		// 54 | assertText | css=.settings-form | Language\nLanguage preferences (Includes Emails)\nEnglish
		assert(await driver.findElement(By.css('.settings-form')).getText() == 'Language preferences (Includes Emails)');
     
    
	});
});
